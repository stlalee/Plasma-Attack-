


<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>phaser-tiled/phaser-tiled.js at master Â· englercj/phaser-tiled</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="englercj/phaser-tiled" name="twitter:title" /><meta content="phaser-tiled - A tilemap implementation for phaser focusing on large complex maps built with the Tiled Editor." name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/944497?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/944497?v=3&amp;s=400" property="og:image" /><meta content="englercj/phaser-tiled" property="og:title" /><meta content="https://github.com/englercj/phaser-tiled" property="og:url" /><meta content="phaser-tiled - A tilemap implementation for phaser focusing on large complex maps built with the Tiled Editor." property="og:description" />
      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="A9E91059:73D8:52ECC57:550144BA" name="octolytics-dimension-request_id" /><meta content="10781393" name="octolytics-actor-id" /><meta content="californiacondor" name="octolytics-actor-login" /><meta content="0a4444deed5b5f25292a76f2d7a67b3930f2f2d047305c0f9748d01b246dfa35" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="j4YDer81+7NqNa63FpKNp5ltgc5V3xQU0OCjVFuBcMjILVPfv8Xl0RoHttqSuu19Iwmmf05S0P/KvYDUNy2IUw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-845daf0c8f04a9119cb376ccd6de834afd5fe701bfda61662e4bc5109ab4cf63.css" media="all" rel="stylesheet" />
    <link href="https://assets-cdn.github.com/assets/github2-ae8485828d2601a1471551947bc8ad813317660b06a2e61b3d487ac31dc00de3.css" media="all" rel="stylesheet" />
    
    


    <meta http-equiv="x-pjax-version" content="8ae36b50ef20a1a8f27ad0e533aa60a3">

      
  <meta name="description" content="phaser-tiled - A tilemap implementation for phaser focusing on large complex maps built with the Tiled Editor.">
  <meta name="go-import" content="github.com/englercj/phaser-tiled git https://github.com/englercj/phaser-tiled.git">

  <meta content="944497" name="octolytics-dimension-user_id" /><meta content="englercj" name="octolytics-dimension-user_login" /><meta content="24084208" name="octolytics-dimension-repository_id" /><meta content="englercj/phaser-tiled" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="24084208" name="octolytics-dimension-repository_network_root_id" /><meta content="englercj/phaser-tiled" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/englercj/phaser-tiled/commits/master.atom" rel="alternate" title="Recent Commits to phaser-tiled:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/englercj/phaser-tiled/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/englercj/phaser-tiled/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/californiacondor" data-ga-click="Header, go to profile, text:username">
      <img alt="californiacondor" class="avatar" data-user="10781393" height="20" src="https://avatars2.githubusercontent.com/u/10781393?v=3&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">californiacondor</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new" data-ga-click="Header, create new repository, icon:repo"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new" data-ga-click="Header, create new organization, icon:organization"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="englercj/phaser-tiled">This repository</span>
    </li>
      <li>
        <a href="/englercj/phaser-tiled/issues/new" data-ga-click="Header, create new issue, icon:issue"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status all-read"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="i41ij1hStJRHqDCbAoUIclTkYn56mm79aRCGbUqZTM0Wq4YtOr4p0csjK5rMWoTKytqoS9ug6oMVRhZNyYrSRA==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

        

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

  <li>
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="4K7XaXQ1bwULOXHGJbKh86PIYoi+msWqe7WWAWpDC5vn2d1NHK1bzyp03B7+f/tlTBvIe2H9SZO4wjsqmUpEgw==" /></div>    <input id="repository_id" name="repository_id" type="hidden" value="24084208" />

      <div class="select-menu js-menu-container js-select-menu">
        <a class="social-count js-social-count" href="/englercj/phaser-tiled/watchers">
          17
        </a>
        <a href="/englercj/phaser-tiled/subscription"
          class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true"
          data-ga-click="Repository, click Watch settings, action:blob#show">
          <span class="js-select-button">
            <span class="octicon octicon-eye"></span>
            Watch
          </span>
        </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header">
              <span class="select-menu-title">Notifications</span>
              <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
            </div>

            <div class="select-menu-list js-navigation-container" role="menu">

              <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                  <span class="select-menu-item-heading">Not watching</span>
                  <span class="description">Be notified when participating or @mentioned.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Watch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                  <span class="select-menu-item-heading">Watching</span>
                  <span class="description">Be notified of all conversations.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Unwatch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_ignore" name="do" type="radio" value="ignore" />
                  <span class="select-menu-item-heading">Ignoring</span>
                  <span class="description">Never be notified.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-mute"></span>
                    Stop ignoring
                  </span>
                </div>
              </div>

            </div>

          </div>
        </div>
      </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/englercj/phaser-tiled/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="cz6R8I8dCJlNnDHVLfimPZqfHfC3D87vjGGBv5Nz57CmjFhy1IdHn1XkVEpz8OubROOeidrY7yeOGKfDiCabrw==" /></div>
      <button
        class="minibutton with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar englercj/phaser-tiled"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/englercj/phaser-tiled/stargazers">
          62
        </a>
</form>
    <form accept-charset="UTF-8" action="/englercj/phaser-tiled/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="mLg42oBo7AN+NYLKVrEHABCaj/KXNsQNlNHCXSIaJTelpwlcI7DtnGhACRTyC0vsXzOrMbh/Pqtn0lDOH6HA/w==" /></div>
      <button
        class="minibutton with-count js-toggler-target"
        aria-label="Star this repository" title="Star englercj/phaser-tiled"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/englercj/phaser-tiled/stargazers">
          62
        </a>
</form>  </div>

  </li>

        <li>
          <form accept-charset="UTF-8" action="/englercj/phaser-tiled/fork" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="JxpeW7PIlTKiN5dxyCvUjnIJh6JjJWzfu4npYxPVR9Ou5TTRyEbEAzNLlJa5qce1C+9gFU4CZZoEmLiAUPHH6Q==" /></div>
            <button
                type="submit"
                class="minibutton with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of englercj/phaser-tiled to your account"
                aria-label="Fork your own copy of englercj/phaser-tiled to your account">
              <span class="octicon octicon-repo-forked"></span>
              Fork
            </button>
            <a href="/englercj/phaser-tiled/network" class="social-count">8</a>
</form>        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/englercj" class="url fn" itemprop="url" rel="author"><span itemprop="title">englercj</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/englercj/phaser-tiled" class="js-current-repository" data-pjax="#js-repo-pjax-container">phaser-tiled</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/englercj/phaser-tiled/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/englercj/phaser-tiled" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /englercj/phaser-tiled">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/englercj/phaser-tiled/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /englercj/phaser-tiled/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/englercj/phaser-tiled/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /englercj/phaser-tiled/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>


      <li class="tooltipped tooltipped-w" aria-label="Wiki">
        <a href="/englercj/phaser-tiled/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-selected-links="repo_wiki /englercj/phaser-tiled/wiki">
          <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>
  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/englercj/phaser-tiled/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /englercj/phaser-tiled/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/englercj/phaser-tiled/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /englercj/phaser-tiled/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/englercj/phaser-tiled.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="git@github.com:englercj/phaser-tiled.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/englercj/phaser-tiled" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<p class="clone-options">You can clone with
  <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>, <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>, or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save englercj/phaser-tiled to your computer and use it in GitHub Desktop." aria-label="Save englercj/phaser-tiled to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/englercj/phaser-tiled/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of englercj/phaser-tiled as a zip file"
                   title="Download the contents of englercj/phaser-tiled as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/englercj/phaser-tiled/blob/a6efff455c60be90a60500d0902c0d9e1c1a8cfc/dist/phaser-tiled.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:2755e6efc495461d4336fc931d962506 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/englercj/phaser-tiled/blob/master/dist/phaser-tiled.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="master">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.3.1/dist/phaser-tiled.js"
                 data-name="v1.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.1">v1.3.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.3.0/dist/phaser-tiled.js"
                 data-name="v1.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.0">v1.3.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.2.2/dist/phaser-tiled.js"
                 data-name="v1.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.2">v1.2.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.2.1/dist/phaser-tiled.js"
                 data-name="v1.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.1">v1.2.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.2.0/dist/phaser-tiled.js"
                 data-name="v1.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0">v1.2.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.1.3/dist/phaser-tiled.js"
                 data-name="v1.1.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.3">v1.1.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.1.2/dist/phaser-tiled.js"
                 data-name="v1.1.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.2">v1.1.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.1.1/dist/phaser-tiled.js"
                 data-name="v1.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.1">v1.1.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.1.0/dist/phaser-tiled.js"
                 data-name="v1.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.0">v1.1.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/englercj/phaser-tiled/tree/v1.0.0/dist/phaser-tiled.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="button-group right">
    <a href="/englercj/phaser-tiled/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/englercj/phaser-tiled" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">phaser-tiled</span></a></span></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/englercj/phaser-tiled/tree/master/dist" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator">/</span><strong class="final-path">phaser-tiled.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Chad Engler" class="avatar" data-user="944497" height="24" src="https://avatars3.githubusercontent.com/u/944497?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/englercj" rel="author">englercj</a></span>
        <time datetime="2015-02-09T16:11:43Z" is="relative-time">Feb 9, 2015</time>
        <div class="commit-title">
            <a href="/englercj/phaser-tiled/commit/a6efff455c60be90a60500d0902c0d9e1c1a8cfc" class="message" data-pjax="true" title="release v1.3.1">release v1.3.1</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Chad Engler" data-user="944497" height="24" src="https://avatars3.githubusercontent.com/u/944497?v=3&amp;s=48" width="24" />
            <a href="/englercj">englercj</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
    <div class="file-actions">
      <div class="button-group">
        <a href="/englercj/phaser-tiled/raw/master/dist/phaser-tiled.js" class="minibutton " id="raw-url">Raw</a>
          <a href="/englercj/phaser-tiled/blame/master/dist/phaser-tiled.js" class="minibutton js-update-url-with-hash">Blame</a>
        <a href="/englercj/phaser-tiled/commits/master/dist/phaser-tiled.js" class="minibutton " rel="nofollow">History</a>
      </div><!-- /.button-group -->

        <a class="octicon-button tooltipped tooltipped-nw"
           href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
            <span class="octicon octicon-device-desktop"></span>
        </a>

            <form accept-charset="UTF-8" action="/englercj/phaser-tiled/edit/master/dist/phaser-tiled.js" aria-label="Clicking this button will fork this project so you can edit the file" class="tooltipped tooltipped-s inline-form edit-file-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="j9l/0LGNXpoNTItF5GPmB2gDjilrT5xQpeVMqYw9FoQorR/c/FeG5OpuQ4xDWltKMP5LuhZyra4/WI2wY7xIug==" /></div>
              <button class="web-edit-button"
                      type="submit"
                      data-hotkey="e"
                      data-disable-with>
                <span class="octicon octicon-pencil"></span>
              </button>
</form>
          <form accept-charset="UTF-8" action="/englercj/phaser-tiled/delete/master/dist/phaser-tiled.js" aria-label="Fork this project and delete file" class="tooltipped tooltipped-s inline-form delete-file-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="QQBrQye/GkqtVfDt9iO+nt9KHb5HtvvRDzBkyJHWZG4QdcXR42CyQJDVZ48/55rZBU4TQP3Yko2x3SRri2CxHQ==" /></div>
            <button class="web-edit-button"
                    type="submit"
                    data-disable-with>
              <span class="octicon octicon-trashcan "></span>
            </button>
</form>      </a>
    </div><!-- /.actions -->
    <div class="file-info">
        <span class="file-mode" title="File mode">executable file</span>
        <span class="file-info-divider"></span>
        5583 lines (4689 sloc)
        <span class="file-info-divider"></span>
      193.396 kb
    </div>
  </div>
  
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==typeof</span> <span class="pl-sv">exports</span><span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=typeof</span> <span class="pl-sv">module</span>)<span class="pl-sv">module</span>.exports<span class="pl-k">=</span>e();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==typeof</span> define<span class="pl-k">&amp;&amp;</span>define.amd)define([],e);<span class="pl-k">else</span>{<span class="pl-s">var</span> n;<span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=typeof</span> <span class="pl-s3">window</span><span class="pl-k">?</span>n<span class="pl-k">=</span><span class="pl-s3">window</span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=typeof</span> <span class="pl-sv">global</span><span class="pl-k">?</span>n<span class="pl-k">=</span>global<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=typeof</span> self<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span>self);<span class="pl-s">var</span> f<span class="pl-k">=</span>n;f<span class="pl-k">=</span>f.Phaser<span class="pl-k">||</span>(f.Phaser<span class="pl-k">=</span>{}),f<span class="pl-k">=</span>f.<span class="pl-s3">Plugin</span><span class="pl-k">||</span>(f.<span class="pl-s3">Plugin</span><span class="pl-k">=</span>{}),f.Tiled<span class="pl-k">=</span>e()}}(<span class="pl-st">function</span>(){<span class="pl-s">var</span> define,<span class="pl-sv">module</span>,<span class="pl-sv">exports</span>;<span class="pl-k">return</span> (<span class="pl-st">function</span> <span class="pl-en">e</span>(<span class="pl-vpf">t</span>,<span class="pl-vpf">n</span>,<span class="pl-vpf">r</span>){<span class="pl-st">function</span> <span class="pl-en">s</span>(<span class="pl-vpf">o</span>,<span class="pl-vpf">u</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>n[o]){<span class="pl-k">if</span>(<span class="pl-k">!</span>t[o]){<span class="pl-s">var</span> a<span class="pl-k">=typeof</span> <span class="pl-s3">require</span><span class="pl-k">==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-s3">require</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>u<span class="pl-k">&amp;&amp;</span>a)<span class="pl-k">return</span> a(o,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(i)<span class="pl-k">return</span> i(o,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Cannot find module &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>o<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">throw</span> f.<span class="pl-sc">code</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>MODULE_NOT_FOUND<span class="pl-pds">&quot;</span></span>,f}<span class="pl-s">var</span> l<span class="pl-k">=</span>n[o]<span class="pl-k">=</span>{exports<span class="pl-k">:</span>{}};t[o][<span class="pl-c1">0</span>].<span class="pl-s3">call</span>(l.exports,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-s">var</span> n<span class="pl-k">=</span>t[o][<span class="pl-c1">1</span>][e];<span class="pl-k">return</span> s(n<span class="pl-k">?</span>n<span class="pl-k">:</span>e)},l,l.exports,e,t,n,r)}<span class="pl-k">return</span> n[o].exports}<span class="pl-s">var</span> i<span class="pl-k">=typeof</span> <span class="pl-s3">require</span><span class="pl-k">==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-s3">require</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span>r.<span class="pl-sc">length</span>;o<span class="pl-k">++</span>)s(r[o]);<span class="pl-k">return</span> s})({<span class="pl-c1">1</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="pl-c">/* jshint -W106 */</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="pl-s">var</span> utils <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./utils<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line">    physics <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./physics<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="pl-c"> * @class Phaser.Plugin.Tiled</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line"><span class="pl-c"> * @classdesc Phaser - Tiled Plugin</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="pl-c"> * @constructor</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line"><span class="pl-c"> * @extends Phaser.Plugin</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line"><span class="pl-c"> * @param {Phaser.Game} game - A reference to the currently running game.</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="pl-c"> * @param {Any} parent - The object that owns this plugin, usually Phaser.PluginManager.</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Tiled</span>(<span class="pl-vpf">game</span>, <span class="pl-vpf">parent</span>) {</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line">    Phaser.<span class="pl-s3">Plugin</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, game, parent);</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line"><span class="pl-c">//  Extends the Phaser.Plugin template, setting up values we need</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="pl-s3">Tiled</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-s3">Object</span>.create(Phaser.<span class="pl-s3">Plugin</span>.<span class="pl-sc">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line"><span class="pl-s3">Tiled</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">constructor</span> <span class="pl-k">=</span> Tiled;</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> Tiled;</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line">Tiled.Tile          <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./tiled/Tile<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line">Tiled.Tileset       <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./tiled/Tileset<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line">Tiled.Tilemap       <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./tiled/Tilemap<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line">Tiled.Tilelayer     <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./tiled/Tilelayer<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line">Tiled.Objectlayer   <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./tiled/Objectlayer<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line">Tiled.utils         <span class="pl-k">=</span> utils;</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line"><span class="pl-s">var</span> originals <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line">    gameObjectFactory<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line">        tiledmap<span class="pl-k">:</span> Phaser.GameObjectFactory.<span class="pl-sc">prototype</span>.tiledmap</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line">    loader<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line">        tiledmap<span class="pl-k">:</span> Phaser.Loader.<span class="pl-sc">prototype</span>.tiledmap,</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line">        loadFile<span class="pl-k">:</span> Phaser.Loader.<span class="pl-sc">prototype</span>.loadFile,</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line">        jsonLoadComplete<span class="pl-k">:</span> Phaser.Loader.<span class="pl-sc">prototype</span>.jsonLoadComplete,</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line">        xmlLoadComplete<span class="pl-k">:</span> Phaser.Loader.<span class="pl-sc">prototype</span>.xmlLoadComplete,</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line">        packLoadComplete<span class="pl-k">:</span> Phaser.Loader.<span class="pl-sc">prototype</span>.packLoadComplete</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line">    physics<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line">        p2<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line">            convertTiledmap<span class="pl-k">:</span> Phaser.Physics.P2 <span class="pl-k">?</span> Phaser.Physics.P2.<span class="pl-sc">prototype</span>.convertTiledmap <span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line">            convertTiledCollisionObjects<span class="pl-k">:</span> Phaser.Physics.P2 <span class="pl-k">?</span> Phaser.Physics.P2.<span class="pl-sc">prototype</span>.convertTiledCollisionObjects <span class="pl-k">:</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line">        ninja<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line">            convertTiledmap<span class="pl-k">:</span> Phaser.Physics.Ninja <span class="pl-k">?</span> Phaser.Physics.Ninja.<span class="pl-sc">prototype</span>.convertTiledmap <span class="pl-k">:</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line"><span class="pl-s3">Tiled</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">init</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line">    <span class="pl-s3">Phaser.GameObjectFactory</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tiledmap</span> <span class="pl-k">=</span> GameObjectFactory_tiledmap;</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tiledmap</span> <span class="pl-k">=</span> Loader_tiledmap;</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">loadFile</span> <span class="pl-k">=</span> Loader_loadFile;</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">jsonLoadComplete</span> <span class="pl-k">=</span> Loader_jsonLoadComplete;</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">xmlLoadComplete</span> <span class="pl-k">=</span> Loader_xmlLoadComplete;</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">packLoadComplete</span> <span class="pl-k">=</span> Loader_packLoadComplete;</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line">    <span class="pl-k">if</span> (Phaser.Physics.P2) {</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line">        <span class="pl-s3">Phaser.Physics.P2</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">convertTiledmap</span> <span class="pl-k">=</span> physics.p2.convertTiledmap;</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line">        <span class="pl-s3">Phaser.Physics.P2</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">convertTiledCollisionObjects</span> <span class="pl-k">=</span> physics.p2.convertTiledCollisionObjects;</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line">    <span class="pl-k">if</span> (Phaser.Physics.Ninja) {</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line">        <span class="pl-s3">Phaser.Physics.Ninja</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">convertTiledmap</span> <span class="pl-k">=</span> physics.ninja.convertTiledmap;</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line"><span class="pl-s3">Tiled</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">destroy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line">    Phaser.<span class="pl-s3">Plugin</span>.<span class="pl-sc">prototype</span>.destroy.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line">    <span class="pl-s3">Phaser.GameObjectFactory</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tiledmap</span> <span class="pl-k">=</span> originals.gameObjectFactory.tiledmap;</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tiledmap</span> <span class="pl-k">=</span> originals.loader.tiledmap;</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">loadFile</span> <span class="pl-k">=</span> originals.loader.loadFile;</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">jsonLoadComplete</span> <span class="pl-k">=</span> originals.loader.jsonLoadComplete;</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">xmlLoadComplete</span> <span class="pl-k">=</span> originals.loader.xmlLoadComplete;</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line">    <span class="pl-s3">Phaser.Loader</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">packLoadComplete</span> <span class="pl-k">=</span> originals.loader.packLoadComplete;</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line">    <span class="pl-k">if</span> (originals.physics.p2.convertTiledmap) {</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line">        <span class="pl-s3">Phaser.Physics.P2</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">convertTiledmap</span> <span class="pl-k">=</span> originals.physics.p2.convertTiledmap;</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line">        <span class="pl-s3">Phaser.Physics.P2</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">convertTiledCollisionObjects</span> <span class="pl-k">=</span> originals.physics.p2.convertTiledCollisionObjects;</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line">    <span class="pl-k">if</span> (originals.physics.ninja.convertTiledmap) {</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line">        <span class="pl-s3">Phaser.Physics.Ninja</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">convertTiledmap</span> <span class="pl-k">=</span> originals.physics.ninja.convertTiledmap;</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">GameObjectFactory_tiledmap</span>(<span class="pl-vpf">key</span>, <span class="pl-vpf">group</span>) {</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Tiled.Tilemap</span>(<span class="pl-v">this</span>.game, key, group);</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code js-file-line"><span class="pl-c"> * Add a new tilemap loading request.</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code js-file-line"><span class="pl-c"> * @method Phaser.Loader#tilemap</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code js-file-line"><span class="pl-c"> * @param {string} key - Unique asset key of the tilemap data.</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code js-file-line"><span class="pl-c"> * @param {string} [url] - The url of the map data file (csv/json)</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code js-file-line"><span class="pl-c"> * @param {object} [data] - An optional JSON data object. If given then the url is ignored and this JSON</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code js-file-line"><span class="pl-c"> *      object is used for map data instead.</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code js-file-line"><span class="pl-c"> * @param {number} [format=Tiled.Tilemap.CSV] - The format of the map data. Either Tiled.Tilemap.CSV</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code js-file-line"><span class="pl-c"> *      or Tiled.Tilemap.TILED_JSON.</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code js-file-line"><span class="pl-c"> * @return {Phaser.Loader} This Loader instance.</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Loader_tiledmap</span>(<span class="pl-vpf">key</span>, <span class="pl-vpf">url</span>, <span class="pl-vpf">data</span>, <span class="pl-vpf">format</span>) {</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> format <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { format <span class="pl-k">=</span> Tiled.Tilemap.CSV; }</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code js-file-line">    <span class="pl-c">/* jshint -W116 */</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code js-file-line">    <span class="pl-k">if</span> (url <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> data <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code js-file-line">        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Phaser.Loader.tiledmap - Both url and data are null. One must be set.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code js-file-line">    <span class="pl-c">/* jshint +W116 */</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code js-file-line">    <span class="pl-c">//  A map data object has been given</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code js-file-line">    <span class="pl-k">if</span> (data) {</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code js-file-line">        <span class="pl-k">switch</span> (format) {</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code js-file-line">            <span class="pl-c">//  A csv string or object has been given</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code js-file-line">            <span class="pl-k">case</span> Tiled.Tilemap.CSV<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code js-file-line">            <span class="pl-c">//  A json string or object has been given</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code js-file-line">            <span class="pl-k">case</span> Tiled.Tilemap.TILED_JSON<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">typeof</span> data <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code js-file-line">                    data <span class="pl-k">=</span> JSON.<span class="pl-s3">parse</span>(data);</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code js-file-line">            <span class="pl-c">//  An xml string or document has been given</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code js-file-line">            <span class="pl-k">case</span> Tiled.Tilemap.TILED_XML<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">typeof</span> data <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code js-file-line">                    data <span class="pl-k">=</span> utils.parseXML(data);</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code js-file-line">        <span class="pl-v">this</span>.game.cache.addTilemap(key, <span class="pl-c1">null</span>, data, format);</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code js-file-line">    <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code js-file-line">        <span class="pl-v">this</span>.addToFileList(<span class="pl-s1"><span class="pl-pds">&#39;</span>tiledmap<span class="pl-pds">&#39;</span></span>, key, url, { format<span class="pl-k">:</span> format });</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Loader_loadFile</span>() {</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code js-file-line">    originals.loader.loadFile.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code js-file-line">    <span class="pl-s">var</span> file <span class="pl-k">=</span> <span class="pl-v">this</span>._fileList[<span class="pl-v">this</span>._fileIndex];</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code js-file-line">    <span class="pl-k">if</span> (file.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tiledmap<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code js-file-line">        <span class="pl-k">if</span> (file.format <span class="pl-k">===</span> Tiled.Tilemap.TILED_JSON) {</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code js-file-line">            <span class="pl-v">this</span>.xhrLoad(<span class="pl-v">this</span>._fileIndex, <span class="pl-v">this</span>.baseURL <span class="pl-k">+</span> file.url, <span class="pl-s1"><span class="pl-pds">&#39;</span>text<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>jsonLoadComplete<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>dataLoadError<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> (file.format <span class="pl-k">===</span> Tiled.Tilemap.CSV) {</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code js-file-line">            <span class="pl-v">this</span>.xhrLoad(<span class="pl-v">this</span>._fileIndex, <span class="pl-v">this</span>.baseURL <span class="pl-k">+</span> file.url, <span class="pl-s1"><span class="pl-pds">&#39;</span>text<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>csvLoadComplete<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>dataLoadError<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> (file.format <span class="pl-k">===</span> Tiled.Tilemap.TILED_XML) {</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code js-file-line">            <span class="pl-v">this</span>.xhrLoad(<span class="pl-v">this</span>._fileIndex, <span class="pl-v">this</span>.baseURL <span class="pl-k">+</span> file.url, <span class="pl-s1"><span class="pl-pds">&#39;</span>text<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>xmlLoadComplete<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>dataLoadError<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code js-file-line">        <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Phaser.Loader. Invalid Tiledmap format: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> file.format);</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Loader_jsonLoadComplete</span>(<span class="pl-vpf">index</span>) {</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>._fileList[index]) {</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code js-file-line">        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Phaser.Loader jsonLoadComplete invalid index <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> index);</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code js-file-line">    <span class="pl-s">var</span> file <span class="pl-k">=</span> <span class="pl-v">this</span>._fileList[index],</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code js-file-line">        data;</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>._ajax <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>._ajax.<span class="pl-sc">responseText</span>)</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code js-file-line">        data <span class="pl-k">=</span> JSON.<span class="pl-s3">parse</span>(<span class="pl-v">this</span>._ajax.<span class="pl-sc">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code js-file-line">    <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code js-file-line">        data <span class="pl-k">=</span> JSON.<span class="pl-s3">parse</span>(<span class="pl-v">this</span>._xhr.<span class="pl-sc">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code js-file-line">    file.loaded <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code js-file-line">    <span class="pl-k">if</span> (file.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tilemap<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> file.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tiledmap<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code js-file-line">        <span class="pl-v">this</span>.game.cache.addTilemap(file.key, file.url, data, file.format);</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (file.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>json<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code js-file-line">        <span class="pl-v">this</span>.game.cache.addJSON(file.key, file.url, data);</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code js-file-line">    <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code js-file-line">        <span class="pl-v">this</span>.game.cache.addTextureAtlas(file.key, file.url, file.<span class="pl-sc">data</span>, data, file.format);</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code js-file-line">    <span class="pl-v">this</span>.nextFile(index, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code js-file-line"><span class="pl-c"> * Successfully loaded an XML file.</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code js-file-line"><span class="pl-c"> * @method Phaser.Loader#jsonLoadComplete</span></td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code js-file-line"><span class="pl-c"> * @param {number} index - The index of the file in the file queue that loaded.</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Loader_xmlLoadComplete</span>(<span class="pl-vpf">index</span>) {</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>._fileList[index]) {</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code js-file-line">        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Phaser.Loader xmlLoadComplete invalid index <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> index);</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code js-file-line">    <span class="pl-s">var</span> file <span class="pl-k">=</span> <span class="pl-v">this</span>._fileList[index],</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code js-file-line">        data;</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>._ajax <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>._ajax.<span class="pl-sc">responseText</span>) {</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code js-file-line">        data <span class="pl-k">=</span> utils.parseXML(<span class="pl-v">this</span>._ajax.<span class="pl-sc">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code js-file-line">    <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code js-file-line">        data <span class="pl-k">=</span> utils.parseXML(<span class="pl-v">this</span>._xhr.<span class="pl-sc">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code js-file-line">    file.loaded <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code js-file-line">    <span class="pl-k">if</span> (file.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tilemap<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> file.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tiledmap<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code js-file-line">        <span class="pl-v">this</span>.game.cache.addTilemap(file.key, file.url, data, file.format);</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code js-file-line">    <span class="pl-v">this</span>.nextFile(index, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code js-file-line"><span class="pl-c">// the same as the core one, but we add &#39;tiledmap&#39;</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Loader_packLoadComplete</span>(<span class="pl-vpf">index</span>, <span class="pl-vpf">parse</span>) {</td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> parse <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { parse <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>._packList[index])</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code js-file-line">        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Phaser.Loader packLoadComplete invalid index <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> index);</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code js-file-line">    <span class="pl-s">var</span> pack <span class="pl-k">=</span> <span class="pl-v">this</span>._packList[index],</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code js-file-line">        data;</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code js-file-line">    pack.loaded <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code js-file-line">    <span class="pl-k">if</span> (parse)</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code js-file-line">        data <span class="pl-k">=</span> JSON.<span class="pl-s3">parse</span>(<span class="pl-v">this</span>._xhr.<span class="pl-sc">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code js-file-line">    <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code js-file-line">        data <span class="pl-k">=</span> <span class="pl-v">this</span>._packList[index].<span class="pl-sc">data</span>;</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code js-file-line">    <span class="pl-k">if</span> (data[pack.key])</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code js-file-line">        <span class="pl-s">var</span> file;</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> data[pack.key].<span class="pl-sc">length</span>; i<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code js-file-line">            file <span class="pl-k">=</span> data[pack.key][i];</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code js-file-line">            <span class="pl-k">switch</span> (file.<span class="pl-sc">type</span>)</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>image<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code js-file-line">                    <span class="pl-v">this</span>.image(file.key, file.url, file.overwrite);</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>text<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code js-file-line">                    <span class="pl-v">this</span>.<span class="pl-sc">text</span>(file.key, file.url, file.overwrite);</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>json<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code js-file-line">                    <span class="pl-v">this</span>.json(file.key, file.url, file.overwrite);</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>script<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code js-file-line">                    <span class="pl-v">this</span>.script(file.key, file.url, file.callback, pack.callbackContext);</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>binary<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code js-file-line">                    <span class="pl-v">this</span>.binary(file.key, file.url, file.callback, pack.callbackContext);</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>spritesheet<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code js-file-line">                    <span class="pl-v">this</span>.spritesheet(file.key, file.url, file.frameWidth, file.frameHeight,</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code js-file-line">                            file.frameMax, file.margin, file.spacing);</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>audio<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code js-file-line">                    <span class="pl-v">this</span>.audio(file.key, file.urls, file.autoDecode);</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tilemap<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code js-file-line">                    <span class="pl-v">this</span>.tilemap(file.key, file.url, file.<span class="pl-sc">data</span>, Phaser.Tilemap[file.format]);</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tiledmap<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code js-file-line">                    <span class="pl-v">this</span>.tiledmap(file.key, file.url, file.<span class="pl-sc">data</span>, Tiled.Tilemap[file.format]);</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>physics<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code js-file-line">                    <span class="pl-v">this</span>.physics(file.key, file.url, file.<span class="pl-sc">data</span>, Phaser.Loader[file.format]);</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>bitmapFont<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code js-file-line">                    <span class="pl-v">this</span>.bitmapFont(file.key, file.textureURL, file.xmlURL, file.xmlData, file.xSpacing, file.ySpacing);</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>atlasJSONArray<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code js-file-line">                    <span class="pl-v">this</span>.atlasJSONArray(file.key, file.textureURL, file.atlasURL, file.atlasData);</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>atlasJSONHash<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code js-file-line">                    <span class="pl-v">this</span>.atlasJSONHash(file.key, file.textureURL, file.atlasURL, file.atlasData);</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>atlasXML<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code js-file-line">                    <span class="pl-v">this</span>.atlasXML(file.key, file.textureURL, file.atlasURL, file.atlasData);</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code js-file-line">                <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>atlas<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code js-file-line">                    <span class="pl-v">this</span>.atlas(file.key, file.textureURL, file.atlasURL, file.atlasData, Phaser.Loader[file.format]);</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code js-file-line">    <span class="pl-v">this</span>.nextPack(index, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code js-file-line"><span class="pl-c">/* jshint +W106 */</span></td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>./physics<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">11</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./tiled/Objectlayer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">12</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./tiled/Tile<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">13</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./tiled/Tilelayer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./tiled/Tilemap<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">15</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./tiled/Tileset<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">17</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./utils<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>}],<span class="pl-c1">2</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code js-file-line">;(<span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code js-file-line">  <span class="pl-s">var</span> object <span class="pl-k">=</span> <span class="pl-k">typeof</span> <span class="pl-sv">exports</span> <span class="pl-k">!=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> exports <span class="pl-k">:</span> <span class="pl-v">this</span>; <span class="pl-c">// #8: web workers</span></td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code js-file-line">  <span class="pl-s">var</span> chars <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code js-file-line">  <span class="pl-st">function</span> <span class="pl-en">InvalidCharacterError</span>(<span class="pl-vpf">message</span>) {</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code js-file-line">    <span class="pl-v">this</span>.message <span class="pl-k">=</span> message;</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code js-file-line">  <span class="pl-s3">InvalidCharacterError</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>;</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code js-file-line">  <span class="pl-s3">InvalidCharacterError</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">name</span> <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>InvalidCharacterError<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code js-file-line">  <span class="pl-c">// encoder</span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code js-file-line">  <span class="pl-c">// [https://gist.github.com/999166] by [https://github.com/nignag]</span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code js-file-line">  object.btoa <span class="pl-k">||</span> (</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code js-file-line">  <span class="pl-s3">object</span>.<span class="pl-en">btoa</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">input</span>) {</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code js-file-line">    <span class="pl-s">var</span> str <span class="pl-k">=</span> <span class="pl-s3">String</span>(input);</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code js-file-line">    <span class="pl-k">for</span> (</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code js-file-line">      <span class="pl-c">// initialize result and counter</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code js-file-line">      <span class="pl-s">var</span> block, charCode, idx <span class="pl-k">=</span> <span class="pl-c1">0</span>, map <span class="pl-k">=</span> chars, output <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code js-file-line">      <span class="pl-c">// if the next str index does not exist:</span></td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code js-file-line">      <span class="pl-c">//   change the mapping table to &quot;=&quot;</span></td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code js-file-line">      <span class="pl-c">//   check if d has no fractional digits</span></td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code js-file-line">      str.<span class="pl-s3">charAt</span>(idx | <span class="pl-c1">0</span>) <span class="pl-k">||</span> (map <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>, idx <span class="pl-k">%</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code js-file-line">      <span class="pl-c">// &quot;8 - idx % 1 * 8&quot; generates the sequence 2, 4, 6, 8</span></td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code js-file-line">      output <span class="pl-k">+=</span> map.<span class="pl-s3">charAt</span>(<span class="pl-c1">63</span> <span class="pl-k">&amp;</span> block <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">-</span> idx <span class="pl-k">%</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code js-file-line">    ) {</td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code js-file-line">      charCode <span class="pl-k">=</span> str.<span class="pl-s3">charCodeAt</span>(idx <span class="pl-k">+=</span> <span class="pl-c1">3</span>/<span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code js-file-line">      <span class="pl-k">if</span> (charCode <span class="pl-k">&gt;</span> <span class="pl-c1">0xFF</span>) {</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code js-file-line">        <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">InvalidCharacterError</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;btoa&#39; failed: The string to be encoded contains characters outside of the Latin1 range.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code js-file-line">      block <span class="pl-k">=</span> block <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span> | charCode;</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code js-file-line">    <span class="pl-k">return</span> output;</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code js-file-line">  <span class="pl-c">// decoder</span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code js-file-line">  <span class="pl-c">// [https://gist.github.com/1020396] by [https://github.com/atk]</span></td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code js-file-line">  object.atob <span class="pl-k">||</span> (</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code js-file-line">  <span class="pl-s3">object</span>.<span class="pl-en">atob</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">input</span>) {</td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code js-file-line">    <span class="pl-s">var</span> str <span class="pl-k">=</span> <span class="pl-s3">String</span>(input).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>=<span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code js-file-line">    <span class="pl-k">if</span> (str.<span class="pl-sc">length</span> <span class="pl-k">%</span> <span class="pl-c1">4</span> <span class="pl-k">==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code js-file-line">      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">InvalidCharacterError</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;atob&#39; failed: The string to be decoded is not correctly encoded.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code js-file-line">    <span class="pl-k">for</span> (</td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code js-file-line">      <span class="pl-c">// initialize result and counters</span></td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code js-file-line">      <span class="pl-s">var</span> bc <span class="pl-k">=</span> <span class="pl-c1">0</span>, bs, buffer, idx <span class="pl-k">=</span> <span class="pl-c1">0</span>, output <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code js-file-line">      <span class="pl-c">// get next character</span></td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code js-file-line">      buffer <span class="pl-k">=</span> str.<span class="pl-s3">charAt</span>(idx<span class="pl-k">++</span>);</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code js-file-line">      <span class="pl-c">// character found in table? initialize bit storage and add its ascii value;</span></td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code js-file-line">      <span class="pl-k">~</span>buffer <span class="pl-k">&amp;&amp;</span> (bs <span class="pl-k">=</span> bc <span class="pl-k">%</span> <span class="pl-c1">4</span> <span class="pl-k">?</span> bs <span class="pl-k">*</span> <span class="pl-c1">64</span> <span class="pl-k">+</span> buffer <span class="pl-k">:</span> buffer,</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code js-file-line">        <span class="pl-c">// and if not first of each 4 characters,</span></td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code js-file-line">        <span class="pl-c">// convert the first 8 bits to one ascii character</span></td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code js-file-line">        bc<span class="pl-k">++</span> <span class="pl-k">%</span> <span class="pl-c1">4</span>) <span class="pl-k">?</span> output <span class="pl-k">+=</span> <span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(<span class="pl-c1">255</span> <span class="pl-k">&amp;</span> bs <span class="pl-k">&gt;&gt;</span> (<span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> bc <span class="pl-k">&amp;</span> <span class="pl-c1">6</span>)) <span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code js-file-line">    ) {</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code js-file-line">      <span class="pl-c">// try to find character in table (0-63, not found =&gt; -1)</span></td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code js-file-line">      buffer <span class="pl-k">=</span> chars.<span class="pl-s3">indexOf</span>(buffer);</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code js-file-line">    <span class="pl-k">return</span> output;</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code js-file-line">}());</td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code js-file-line">},{}],<span class="pl-c1">3</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code js-file-line">},{}],<span class="pl-c1">4</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code js-file-line"><span class="pl-c">/*!</span></td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code js-file-line"><span class="pl-c"> * The buffer module from node.js, for the browser.</span></td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code js-file-line"><span class="pl-c"> * @author   Feross Aboukhadijeh &lt;feross@feross.org&gt; &lt;http://feross.org&gt;</span></td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code js-file-line"><span class="pl-c"> * @license  MIT</span></td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code js-file-line"><span class="pl-s">var</span> base64 <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>base64-js<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code js-file-line"><span class="pl-s">var</span> ieee754 <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>ieee754<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code js-file-line"><span class="pl-s">var</span> isArray <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>is-array<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code js-file-line"><span class="pl-sv">exports</span>.Buffer <span class="pl-k">=</span> Buffer</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code js-file-line"><span class="pl-sv">exports</span>.SlowBuffer <span class="pl-k">=</span> Buffer</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code js-file-line"><span class="pl-sv">exports</span>.INSPECT_MAX_BYTES <span class="pl-k">=</span> <span class="pl-c1">50</span></td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code js-file-line">Buffer.poolSize <span class="pl-k">=</span> <span class="pl-c1">8192</span> <span class="pl-c">// not used by this implementation</span></td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code js-file-line"><span class="pl-s">var</span> kMaxLength <span class="pl-k">=</span> <span class="pl-c1">0x3fffffff</span></td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code js-file-line"><span class="pl-c"> * If `Buffer.TYPED_ARRAY_SUPPORT`:</span></td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code js-file-line"><span class="pl-c"> *   === true    Use Uint8Array implementation (fastest)</span></td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code js-file-line"><span class="pl-c"> *   === false   Use Object implementation (most compatible, even IE6)</span></td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code js-file-line"><span class="pl-c"> * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,</span></td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code js-file-line"><span class="pl-c"> * Opera 11.6+, iOS 4.2+.</span></td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code js-file-line"><span class="pl-c"> * Note:</span></td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code js-file-line"><span class="pl-c"> * - Implementation must support adding new properties to `Uint8Array` instances.</span></td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code js-file-line"><span class="pl-c"> *   Firefox 4-29 lacked support, fixed in Firefox 30+.</span></td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code js-file-line"><span class="pl-c"> *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.</span></td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code js-file-line"><span class="pl-c"> *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.</span></td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code js-file-line"><span class="pl-c"> *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of</span></td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code js-file-line"><span class="pl-c"> *    incorrect length in some situations.</span></td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code js-file-line"><span class="pl-c"> * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will</span></td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code js-file-line"><span class="pl-c"> * get the Object implementation, which is slower but will work correctly.</span></td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code js-file-line">Buffer.TYPED_ARRAY_SUPPORT <span class="pl-k">=</span> (<span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code js-file-line">    <span class="pl-s">var</span> buf <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code js-file-line">    <span class="pl-s">var</span> arr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(buf)</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code js-file-line">    <span class="pl-s3">arr</span>.<span class="pl-en">foo</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () { <span class="pl-k">return</span> <span class="pl-c1">42</span> }</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">42</span> <span class="pl-k">===</span> arr.foo() <span class="pl-k">&amp;&amp;</span> <span class="pl-c">// typed array instances can be augmented</span></td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code js-file-line">        <span class="pl-k">typeof</span> arr.subarray <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c">// chrome 9-10 lack `subarray`</span></td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code js-file-line">        <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-c1">1</span>).subarray(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>).byteLength <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-c">// ie10 has broken `subarray`</span></td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code js-file-line">  } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code js-file-line">})()</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code js-file-line"><span class="pl-c"> * Class: Buffer</span></td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code js-file-line"><span class="pl-c"> * =============</span></td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code js-file-line"><span class="pl-c"> * The Buffer constructor returns instances of `Uint8Array` that are augmented</span></td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code js-file-line"><span class="pl-c"> * with function properties for all the node `Buffer` API functions. We use</span></td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code js-file-line"><span class="pl-c"> * `Uint8Array` so that square bracket notation works as expected -- it returns</span></td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code js-file-line"><span class="pl-c"> * a single octet.</span></td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code js-file-line"><span class="pl-c"> * By augmenting the instances, we can avoid modifying the `Uint8Array`</span></td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code js-file-line"><span class="pl-c"> * prototype.</span></td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Buffer</span> (<span class="pl-vpf">subject</span>, <span class="pl-vpf">encoding</span>, <span class="pl-vpf">noZero</span>) {</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> Buffer))</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Buffer</span>(subject, encoding, noZero)</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code js-file-line">  <span class="pl-s">var</span> type <span class="pl-k">=</span> <span class="pl-k">typeof</span> subject</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code js-file-line">  <span class="pl-c">// Find the length</span></td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code js-file-line">  <span class="pl-s">var</span> length</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code js-file-line">  <span class="pl-k">if</span> (type <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code js-file-line">    length <span class="pl-k">=</span> subject <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> subject <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code js-file-line">  <span class="pl-k">else</span> <span class="pl-k">if</span> (type <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code js-file-line">    <span class="pl-k">if</span> (encoding <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>base64<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code js-file-line">      subject <span class="pl-k">=</span> base64clean(subject)</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code js-file-line">    length <span class="pl-k">=</span> Buffer.byteLength(subject, encoding)</td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (type <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> subject <span class="pl-k">!==</span> <span class="pl-c1">null</span>) { <span class="pl-c">// assume object is array-like</span></td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code js-file-line">    <span class="pl-k">if</span> (subject.<span class="pl-sc">type</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>Buffer<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> isArray(subject.<span class="pl-sc">data</span>))</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code js-file-line">      subject <span class="pl-k">=</span> subject.<span class="pl-sc">data</span></td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code js-file-line">    length <span class="pl-k">=</span> <span class="pl-k">+</span>subject.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-k">+</span>subject.<span class="pl-sc">length</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code js-file-line">  } <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>must start with number, buffer, array or string<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> kMaxLength)</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">RangeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Attempt to allocate Buffer larger than maximum <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code js-file-line">      <span class="pl-s1"><span class="pl-pds">&#39;</span>size: 0x<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> kMaxLength.<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>) <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span> bytes<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code js-file-line">  <span class="pl-s">var</span> buf</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code js-file-line">    <span class="pl-c">// Preferred: Return an augmented `Uint8Array` instance for best performance</span></td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code js-file-line">    buf <span class="pl-k">=</span> Buffer._augment(<span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(length))</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code js-file-line">    <span class="pl-c">// Fallback: Return THIS instance of Buffer (created by `new`)</span></td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code js-file-line">    buf <span class="pl-k">=</span> <span class="pl-v">this</span></td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code js-file-line">    buf.<span class="pl-sc">length</span> <span class="pl-k">=</span> length</td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code js-file-line">    buf._isBuffer <span class="pl-k">=</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code js-file-line">  <span class="pl-s">var</span> i</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> subject.byteLength <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code js-file-line">    <span class="pl-c">// Speed optimization -- use set if we&#39;re copying from a typed array</span></td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code js-file-line">    buf._set(subject)</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (isArrayish(subject)) {</td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code js-file-line">    <span class="pl-c">// Treat array-ish objects as a byte array</span></td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code js-file-line">    <span class="pl-k">if</span> (Buffer.isBuffer(subject)) {</td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> length; i<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code js-file-line">        buf[i] <span class="pl-k">=</span> subject.readUInt8(i)</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> length; i<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code js-file-line">        buf[i] <span class="pl-k">=</span> ((subject[i] <span class="pl-k">%</span> <span class="pl-c1">256</span>) <span class="pl-k">+</span> <span class="pl-c1">256</span>) <span class="pl-k">%</span> <span class="pl-c1">256</span></td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (type <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code js-file-line">    buf.<span class="pl-s3">write</span>(subject, <span class="pl-c1">0</span>, encoding)</td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (type <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>Buffer.TYPED_ARRAY_SUPPORT <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>noZero) {</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> length; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code js-file-line">      buf[i] <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code js-file-line">  <span class="pl-k">return</span> buf</td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-en">isBuffer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">!!</span>(b <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b._isBuffer)</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-en">compare</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>Buffer.isBuffer(a) <span class="pl-k">||</span> <span class="pl-k">!</span>Buffer.isBuffer(b))</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Arguments must be Buffers<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code js-file-line">  <span class="pl-s">var</span> x <span class="pl-k">=</span> a.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code js-file-line">  <span class="pl-s">var</span> y <span class="pl-k">=</span> b.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, len <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(x, y); i <span class="pl-k">&lt;</span> len <span class="pl-k">&amp;&amp;</span> a[i] <span class="pl-k">===</span> b[i]; i<span class="pl-k">++</span>) {}</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code js-file-line">  <span class="pl-k">if</span> (i <span class="pl-k">!==</span> len) {</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code js-file-line">    x <span class="pl-k">=</span> a[i]</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code js-file-line">    y <span class="pl-k">=</span> b[i]</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code js-file-line">  <span class="pl-k">if</span> (x <span class="pl-k">&lt;</span> y) <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code js-file-line">  <span class="pl-k">if</span> (y <span class="pl-k">&lt;</span> x) <span class="pl-k">return</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-en">isEncoding</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">encoding</span>) {</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code js-file-line">  <span class="pl-k">switch</span> (<span class="pl-s3">String</span>(encoding).<span class="pl-s3">toLowerCase</span>()) {</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>hex<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ascii<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>binary<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>base64<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>raw<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs-2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code js-file-line">    <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-en">concat</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">list</span>, <span class="pl-vpf">totalLength</span>) {</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>isArray(list)) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Usage: Buffer.concat(list[, length])<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code js-file-line">  <span class="pl-k">if</span> (list.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Buffer</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (list.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code js-file-line">    <span class="pl-k">return</span> list[<span class="pl-c1">0</span>]</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code js-file-line">  <span class="pl-s">var</span> i</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code js-file-line">  <span class="pl-k">if</span> (totalLength <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code js-file-line">    totalLength <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> list.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code js-file-line">      totalLength <span class="pl-k">+=</span> list[i].<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code js-file-line">  <span class="pl-s">var</span> buf <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Buffer</span>(totalLength)</td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code js-file-line">  <span class="pl-s">var</span> pos <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code js-file-line">  <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> list.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code js-file-line">    <span class="pl-s">var</span> item <span class="pl-k">=</span> list[i]</td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code js-file-line">    item.copy(buf, pos)</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code js-file-line">    pos <span class="pl-k">+=</span> item.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code js-file-line">  <span class="pl-k">return</span> buf</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-en">byteLength</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">str</span>, <span class="pl-vpf">encoding</span>) {</td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code js-file-line">  <span class="pl-s">var</span> ret</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code js-file-line">  str <span class="pl-k">=</span> str <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code js-file-line">  <span class="pl-k">switch</span> (encoding <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ascii<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>binary<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>raw<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code js-file-line">      ret <span class="pl-k">=</span> str.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs-2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code js-file-line">      ret <span class="pl-k">=</span> str.<span class="pl-sc">length</span> <span class="pl-k">*</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>hex<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code js-file-line">      ret <span class="pl-k">=</span> str.<span class="pl-sc">length</span> <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code js-file-line">      ret <span class="pl-k">=</span> utf8ToBytes(str).<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>base64<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code js-file-line">      ret <span class="pl-k">=</span> base64ToBytes(str).<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code js-file-line">    <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code js-file-line">      ret <span class="pl-k">=</span> str.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code js-file-line">  <span class="pl-k">return</span> ret</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code js-file-line"><span class="pl-c">// pre-set for values that may exist in the future</span></td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">length</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span></td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">parent</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span></td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code js-file-line"><span class="pl-c">// toString(encoding, start=0, end=buffer.length)</span></td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">encoding</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code js-file-line">  <span class="pl-s">var</span> loweredCase <span class="pl-k">=</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code js-file-line">  start <span class="pl-k">=</span> start <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code js-file-line">  end <span class="pl-k">=</span> end <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> end <span class="pl-k">===</span> <span class="pl-c1">Infinity</span> <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span> <span class="pl-k">:</span> end <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>encoding) encoding <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code js-file-line">  <span class="pl-k">if</span> (start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) start <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>) end <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;=</span> start) <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code js-file-line">  <span class="pl-k">while</span> (<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code js-file-line">    <span class="pl-k">switch</span> (encoding) {</td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>hex<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code js-file-line">        <span class="pl-k">return</span> hexSlice(<span class="pl-v">this</span>, start, end)</td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code js-file-line">        <span class="pl-k">return</span> utf8Slice(<span class="pl-v">this</span>, start, end)</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ascii<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code js-file-line">        <span class="pl-k">return</span> asciiSlice(<span class="pl-v">this</span>, start, end)</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>binary<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code js-file-line">        <span class="pl-k">return</span> binarySlice(<span class="pl-v">this</span>, start, end)</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>base64<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code js-file-line">        <span class="pl-k">return</span> base64Slice(<span class="pl-v">this</span>, start, end)</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs-2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code js-file-line">      <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code js-file-line">        <span class="pl-k">return</span> utf16leSlice(<span class="pl-v">this</span>, start, end)</td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code js-file-line">      <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code js-file-line">        <span class="pl-k">if</span> (loweredCase)</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code js-file-line">          <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Unknown encoding: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> encoding)</td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code js-file-line">        encoding <span class="pl-k">=</span> (encoding <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-s3">toLowerCase</span>()</td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code js-file-line">        loweredCase <span class="pl-k">=</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">equals</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code js-file-line">  <span class="pl-k">if</span>(<span class="pl-k">!</span>Buffer.isBuffer(b)) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Argument must be a Buffer<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code js-file-line">  <span class="pl-k">return</span> Buffer.compare(<span class="pl-v">this</span>, b) <span class="pl-k">===</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">inspect</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code js-file-line">  <span class="pl-s">var</span> str <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code js-file-line">  <span class="pl-s">var</span> max <span class="pl-k">=</span> <span class="pl-sv">exports</span>.INSPECT_MAX_BYTES</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code js-file-line">    str <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-s3">toString</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>hex<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">0</span>, max).<span class="pl-s3">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">.</span><span class="pl-k">{2}</span><span class="pl-pds">/</span>g</span>).<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> max)</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code js-file-line">      str <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span> ... <span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;Buffer <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> str <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>&gt;<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">compare</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">b</span>) {</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>Buffer.isBuffer(b)) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Argument must be a Buffer<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code js-file-line">  <span class="pl-k">return</span> Buffer.compare(<span class="pl-v">this</span>, b)</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code js-file-line"><span class="pl-c">// `get` will be removed in Node 0.13+</span></td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">get</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code js-file-line">  <span class="pl-en">console</span><span class="pl-s3">.log</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>.get() is deprecated. Access using array indexes instead.<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.readUInt8(offset)</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code js-file-line"><span class="pl-c">// `set` will be removed in Node 0.13+</span></td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">set</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">v</span>, <span class="pl-vpf">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code js-file-line">  <span class="pl-en">console</span><span class="pl-s3">.log</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>.set() is deprecated. Access using array indexes instead.<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>.writeUInt8(v, offset)</td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">hexWrite</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code js-file-line">  offset <span class="pl-k">=</span> <span class="pl-s3">Number</span>(offset) <span class="pl-k">||</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code js-file-line">  <span class="pl-s">var</span> remaining <span class="pl-k">=</span> buf.<span class="pl-sc">length</span> <span class="pl-k">-</span> offset</td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>length) {</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code js-file-line">    length <span class="pl-k">=</span> remaining</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code js-file-line">    length <span class="pl-k">=</span> <span class="pl-s3">Number</span>(length)</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code js-file-line">    <span class="pl-k">if</span> (length <span class="pl-k">&gt;</span> remaining) {</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code js-file-line">      length <span class="pl-k">=</span> remaining</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code js-file-line">  <span class="pl-c">// must be an even number of digits</span></td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code js-file-line">  <span class="pl-s">var</span> strLen <span class="pl-k">=</span> string.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code js-file-line">  <span class="pl-k">if</span> (strLen <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Invalid hex string<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code js-file-line">  <span class="pl-k">if</span> (length <span class="pl-k">&gt;</span> strLen / <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code js-file-line">    length <span class="pl-k">=</span> strLen / <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> length; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code js-file-line">    <span class="pl-s">var</span> byte <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(string.<span class="pl-s3">substr</span>(i <span class="pl-k">*</span> <span class="pl-c1">2</span>, <span class="pl-c1">2</span>), <span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-s3">isNaN</span>(byte)) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Invalid hex string<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code js-file-line">    buf[offset <span class="pl-k">+</span> i] <span class="pl-k">=</span> byte</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code js-file-line">  <span class="pl-k">return</span> i</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">utf8Write</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code js-file-line">  <span class="pl-s">var</span> charsWritten <span class="pl-k">=</span> blitBuffer(utf8ToBytes(string), buf, offset, length)</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code js-file-line">  <span class="pl-k">return</span> charsWritten</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">asciiWrite</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code js-file-line">  <span class="pl-s">var</span> charsWritten <span class="pl-k">=</span> blitBuffer(asciiToBytes(string), buf, offset, length)</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code js-file-line">  <span class="pl-k">return</span> charsWritten</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">binaryWrite</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code js-file-line">  <span class="pl-k">return</span> asciiWrite(buf, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">base64Write</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code js-file-line">  <span class="pl-s">var</span> charsWritten <span class="pl-k">=</span> blitBuffer(base64ToBytes(string), buf, offset, length)</td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code js-file-line">  <span class="pl-k">return</span> charsWritten</td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">utf16leWrite</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code js-file-line">  <span class="pl-s">var</span> charsWritten <span class="pl-k">=</span> blitBuffer(utf16leToBytes(string), buf, offset, length)</td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code js-file-line">  <span class="pl-k">return</span> charsWritten</td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">string</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>, <span class="pl-vpf">encoding</span>) {</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code js-file-line">  <span class="pl-c">// Support both (string, offset, length, encoding)</span></td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code js-file-line">  <span class="pl-c">// and the legacy (string, encoding, offset, length)</span></td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-s3">isFinite</span>(offset)) {</td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-s3">isFinite</span>(length)) {</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code js-file-line">      encoding <span class="pl-k">=</span> length</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code js-file-line">      length <span class="pl-k">=</span> <span class="pl-c1">undefined</span></td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code js-file-line">  } <span class="pl-k">else</span> {  <span class="pl-c">// legacy</span></td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code js-file-line">    <span class="pl-s">var</span> swap <span class="pl-k">=</span> encoding</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code js-file-line">    encoding <span class="pl-k">=</span> offset</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code js-file-line">    offset <span class="pl-k">=</span> length</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code js-file-line">    length <span class="pl-k">=</span> swap</td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code js-file-line">  offset <span class="pl-k">=</span> <span class="pl-s3">Number</span>(offset) <span class="pl-k">||</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code js-file-line">  <span class="pl-s">var</span> remaining <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span> <span class="pl-k">-</span> offset</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>length) {</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code js-file-line">    length <span class="pl-k">=</span> remaining</td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code js-file-line">    length <span class="pl-k">=</span> <span class="pl-s3">Number</span>(length)</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code js-file-line">    <span class="pl-k">if</span> (length <span class="pl-k">&gt;</span> remaining) {</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code js-file-line">      length <span class="pl-k">=</span> remaining</td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code js-file-line">  encoding <span class="pl-k">=</span> <span class="pl-s3">String</span>(encoding <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span>).<span class="pl-s3">toLowerCase</span>()</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code js-file-line">  <span class="pl-s">var</span> ret</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code js-file-line">  <span class="pl-k">switch</span> (encoding) {</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>hex<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code js-file-line">      ret <span class="pl-k">=</span> hexWrite(<span class="pl-v">this</span>, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-8<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code js-file-line">      ret <span class="pl-k">=</span> utf8Write(<span class="pl-v">this</span>, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ascii<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code js-file-line">      ret <span class="pl-k">=</span> asciiWrite(<span class="pl-v">this</span>, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>binary<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code js-file-line">      ret <span class="pl-k">=</span> binaryWrite(<span class="pl-v">this</span>, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>base64<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code js-file-line">      ret <span class="pl-k">=</span> base64Write(<span class="pl-v">this</span>, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ucs-2<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code js-file-line">    <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>utf-16le<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code js-file-line">      ret <span class="pl-k">=</span> utf16leWrite(<span class="pl-v">this</span>, string, offset, length)</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code js-file-line">    <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code js-file-line">      <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Unknown encoding: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> encoding)</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code js-file-line">  <span class="pl-k">return</span> ret</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">toJSON</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code js-file-line">    type<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>Buffer<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code js-file-line">    data<span class="pl-k">:</span> <span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(<span class="pl-v">this</span>._arr <span class="pl-k">||</span> <span class="pl-v">this</span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">base64Slice</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code js-file-line">  <span class="pl-k">if</span> (start <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> end <span class="pl-k">===</span> buf.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code js-file-line">    <span class="pl-k">return</span> base64.fromByteArray(buf)</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code js-file-line">    <span class="pl-k">return</span> base64.fromByteArray(buf.<span class="pl-s3">slice</span>(start, end))</td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">utf8Slice</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code js-file-line">  <span class="pl-s">var</span> res <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code js-file-line">  <span class="pl-s">var</span> tmp <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code js-file-line">  end <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(buf.<span class="pl-sc">length</span>, end)</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> start; i <span class="pl-k">&lt;</span> end; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code js-file-line">    <span class="pl-k">if</span> (buf[i] <span class="pl-k">&lt;=</span> <span class="pl-c1">0x7F</span>) {</td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code js-file-line">      res <span class="pl-k">+=</span> decodeUtf8Char(tmp) <span class="pl-k">+</span> <span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(buf[i])</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code js-file-line">      tmp <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code js-file-line">      tmp <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>%<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> buf[i].<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code js-file-line">  <span class="pl-k">return</span> res <span class="pl-k">+</span> decodeUtf8Char(tmp)</td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">asciiSlice</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code js-file-line">  <span class="pl-s">var</span> ret <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code js-file-line">  end <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(buf.<span class="pl-sc">length</span>, end)</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> start; i <span class="pl-k">&lt;</span> end; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code js-file-line">    ret <span class="pl-k">+=</span> <span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(buf[i])</td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code js-file-line">  <span class="pl-k">return</span> ret</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">binarySlice</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code js-file-line">  <span class="pl-k">return</span> asciiSlice(buf, start, end)</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">hexSlice</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code js-file-line">  <span class="pl-s">var</span> len <span class="pl-k">=</span> buf.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>start <span class="pl-k">||</span> start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) start <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>end <span class="pl-k">||</span> end <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> end <span class="pl-k">&gt;</span> len) end <span class="pl-k">=</span> len</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code js-file-line">  <span class="pl-s">var</span> out <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> start; i <span class="pl-k">&lt;</span> end; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code js-file-line">    out <span class="pl-k">+=</span> toHex(buf[i])</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code js-file-line">  <span class="pl-k">return</span> out</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">utf16leSlice</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code js-file-line">  <span class="pl-s">var</span> bytes <span class="pl-k">=</span> buf.<span class="pl-s3">slice</span>(start, end)</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code js-file-line">  <span class="pl-s">var</span> res <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> bytes.<span class="pl-sc">length</span>; i <span class="pl-k">+=</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code js-file-line">    res <span class="pl-k">+=</span> <span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(bytes[i] <span class="pl-k">+</span> bytes[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">*</span> <span class="pl-c1">256</span>)</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code js-file-line">  <span class="pl-k">return</span> res</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">slice</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code js-file-line">  <span class="pl-s">var</span> len <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code js-file-line">  start <span class="pl-k">=</span> <span class="pl-k">~~</span>start</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code js-file-line">  end <span class="pl-k">=</span> end <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> len <span class="pl-k">:</span> <span class="pl-k">~~</span>end</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code js-file-line">  <span class="pl-k">if</span> (start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code js-file-line">    start <span class="pl-k">+=</span> len;</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code js-file-line">    <span class="pl-k">if</span> (start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code js-file-line">      start <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (start <span class="pl-k">&gt;</span> len) {</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code js-file-line">    start <span class="pl-k">=</span> len</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code js-file-line">    end <span class="pl-k">+=</span> len</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code js-file-line">    <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code js-file-line">      end <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (end <span class="pl-k">&gt;</span> len) {</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code js-file-line">    end <span class="pl-k">=</span> len</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> start)</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code js-file-line">    end <span class="pl-k">=</span> start</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code js-file-line">    <span class="pl-k">return</span> Buffer._augment(<span class="pl-v">this</span>.subarray(start, end))</td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code js-file-line">    <span class="pl-s">var</span> sliceLen <span class="pl-k">=</span> end <span class="pl-k">-</span> start</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code js-file-line">    <span class="pl-s">var</span> newBuf <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Buffer</span>(sliceLen, <span class="pl-c1">undefined</span>, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> sliceLen; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code js-file-line">      newBuf[i] <span class="pl-k">=</span> <span class="pl-v">this</span>[i <span class="pl-k">+</span> start]</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code js-file-line">    <span class="pl-k">return</span> newBuf</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code js-file-line"><span class="pl-c"> * Need to make sure that buffer isn&#39;t trying to write out of bounds.</span></td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">checkOffset</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">ext</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code js-file-line">  <span class="pl-k">if</span> ((offset <span class="pl-k">%</span> <span class="pl-c1">1</span>) <span class="pl-k">!==</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> offset <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">RangeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>offset is not uint<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code js-file-line">  <span class="pl-k">if</span> (offset <span class="pl-k">+</span> ext <span class="pl-k">&gt;</span> length)</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">RangeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Trying to access beyond buffer length<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readUInt8</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">1</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>[offset]</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readUInt16LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">2</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span>[offset] | (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readUInt16BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">2</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code js-file-line">  <span class="pl-k">return</span> (<span class="pl-v">this</span>[offset] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) | <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>]</td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readUInt32LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">4</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code js-file-line">  <span class="pl-k">return</span> ((<span class="pl-v">this</span>[offset]) |</td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) |</td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">16</span>)) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>] <span class="pl-k">*</span> <span class="pl-c1">0x1000000</span>)</td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readUInt32BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">4</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code js-file-line">  <span class="pl-k">return</span> (<span class="pl-v">this</span>[offset] <span class="pl-k">*</span> <span class="pl-c1">0x1000000</span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code js-file-line">      ((<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">16</span>) |</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) |</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code js-file-line">      <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>])</td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readInt8</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">1</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-v">this</span>[offset] <span class="pl-k">&amp;</span> <span class="pl-c1">0x80</span>))</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code js-file-line">    <span class="pl-k">return</span> (<span class="pl-v">this</span>[offset])</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code js-file-line">  <span class="pl-k">return</span> ((<span class="pl-c1">0xff</span> <span class="pl-k">-</span> <span class="pl-v">this</span>[offset] <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-k">-</span><span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readInt16LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">2</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code js-file-line">  <span class="pl-s">var</span> val <span class="pl-k">=</span> <span class="pl-v">this</span>[offset] | (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code js-file-line">  <span class="pl-k">return</span> (val <span class="pl-k">&amp;</span> <span class="pl-c1">0x8000</span>) <span class="pl-k">?</span> val | <span class="pl-c1">0xFFFF0000</span> <span class="pl-k">:</span> val</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readInt16BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">2</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code js-file-line">  <span class="pl-s">var</span> val <span class="pl-k">=</span> <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] | (<span class="pl-v">this</span>[offset] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code js-file-line">  <span class="pl-k">return</span> (val <span class="pl-k">&amp;</span> <span class="pl-c1">0x8000</span>) <span class="pl-k">?</span> val | <span class="pl-c1">0xFFFF0000</span> <span class="pl-k">:</span> val</td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readInt32LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">4</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code js-file-line">  <span class="pl-k">return</span> (<span class="pl-v">this</span>[offset]) |</td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) |</td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">16</span>) |</td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">24</span>)</td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readInt32BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">4</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code js-file-line">  <span class="pl-k">return</span> (<span class="pl-v">this</span>[offset] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">24</span>) |</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">16</span>) |</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) |</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code js-file-line">      (<span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>])</td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readFloatLE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">4</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code js-file-line">  <span class="pl-k">return</span> ieee754.read(<span class="pl-v">this</span>, offset, <span class="pl-c1">true</span>, <span class="pl-c1">23</span>, <span class="pl-c1">4</span>)</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readFloatBE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">4</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code js-file-line">  <span class="pl-k">return</span> ieee754.read(<span class="pl-v">this</span>, offset, <span class="pl-c1">false</span>, <span class="pl-c1">23</span>, <span class="pl-c1">4</span>)</td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readDoubleLE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">8</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code js-file-line">  <span class="pl-k">return</span> ieee754.read(<span class="pl-v">this</span>, offset, <span class="pl-c1">true</span>, <span class="pl-c1">52</span>, <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">readDoubleBE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code js-file-line">    checkOffset(offset, <span class="pl-c1">8</span>, <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code js-file-line">  <span class="pl-k">return</span> ieee754.read(<span class="pl-v">this</span>, offset, <span class="pl-c1">false</span>, <span class="pl-c1">52</span>, <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">checkInt</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">ext</span>, <span class="pl-vpf">max</span>, <span class="pl-vpf">min</span>) {</td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>Buffer.isBuffer(buf)) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>buffer must be a Buffer instance<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&gt;</span> max <span class="pl-k">||</span> value <span class="pl-k">&lt;</span> min) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value is out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code js-file-line">  <span class="pl-k">if</span> (offset <span class="pl-k">+</span> ext <span class="pl-k">&gt;</span> buf.<span class="pl-sc">length</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>index out of range<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeUInt8</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">1</span>, <span class="pl-c1">0xff</span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>Buffer.TYPED_ARRAY_SUPPORT) value <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(value)</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code js-file-line">  <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">objectWriteUInt16</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">littleEndian</span>) {</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) value <span class="pl-k">=</span> <span class="pl-c1">0xffff</span> <span class="pl-k">+</span> value <span class="pl-k">+</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, j <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(buf.<span class="pl-sc">length</span> <span class="pl-k">-</span> offset, <span class="pl-c1">2</span>); i <span class="pl-k">&lt;</span> j; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code js-file-line">    buf[offset <span class="pl-k">+</span> i] <span class="pl-k">=</span> (value <span class="pl-k">&amp;</span> (<span class="pl-c1">0xff</span> <span class="pl-k">&lt;&lt;</span> (<span class="pl-c1">8</span> <span class="pl-k">*</span> (littleEndian <span class="pl-k">?</span> i <span class="pl-k">:</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> i)))) <span class="pl-k">&gt;&gt;&gt;</span></td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code js-file-line">      (littleEndian <span class="pl-k">?</span> i <span class="pl-k">:</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> i) <span class="pl-k">*</span> <span class="pl-c1">8</span></td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeUInt16LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">2</span>, <span class="pl-c1">0xffff</span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt16(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeUInt16BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">2</span>, <span class="pl-c1">0xffff</span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt16(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">false</span>)</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">objectWriteUInt32</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">littleEndian</span>) {</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) value <span class="pl-k">=</span> <span class="pl-c1">0xffffffff</span> <span class="pl-k">+</span> value <span class="pl-k">+</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, j <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(buf.<span class="pl-sc">length</span> <span class="pl-k">-</span> offset, <span class="pl-c1">4</span>); i <span class="pl-k">&lt;</span> j; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code js-file-line">    buf[offset <span class="pl-k">+</span> i] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> (littleEndian <span class="pl-k">?</span> i <span class="pl-k">:</span> <span class="pl-c1">3</span> <span class="pl-k">-</span> i) <span class="pl-k">*</span> <span class="pl-c1">8</span>) <span class="pl-k">&amp;</span> <span class="pl-c1">0xff</span></td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeUInt32LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">4</span>, <span class="pl-c1">0xffffffff</span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">24</span>)</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt32(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">4</span></td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeUInt32BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">4</span>, <span class="pl-c1">0xffffffff</span>, <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">24</span>)</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt32(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">false</span>)</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">4</span></td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeInt8</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">1</span>, <span class="pl-c1">0x7f</span>, <span class="pl-k">-</span><span class="pl-c1">0x80</span>)</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>Buffer.TYPED_ARRAY_SUPPORT) value <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(value)</td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) value <span class="pl-k">=</span> <span class="pl-c1">0xff</span> <span class="pl-k">+</span> value <span class="pl-k">+</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code js-file-line">  <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeInt16LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">2</span>, <span class="pl-c1">0x7fff</span>, <span class="pl-k">-</span><span class="pl-c1">0x8000</span>)</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt16(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeInt16BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">2</span>, <span class="pl-c1">0x7fff</span>, <span class="pl-k">-</span><span class="pl-c1">0x8000</span>)</td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt16(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">false</span>)</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeInt32LE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">4</span>, <span class="pl-c1">0x7fffffff</span>, <span class="pl-k">-</span><span class="pl-c1">0x80000000</span>)</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">24</span>)</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt32(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">4</span></td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeInt32BE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-k">+</span>value</td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code js-file-line">  offset <span class="pl-k">=</span> offset <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code js-file-line">    checkInt(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">4</span>, <span class="pl-c1">0x7fffffff</span>, <span class="pl-k">-</span><span class="pl-c1">0x80000000</span>)</td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) value <span class="pl-k">=</span> <span class="pl-c1">0xffffffff</span> <span class="pl-k">+</span> value <span class="pl-k">+</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code js-file-line">  <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">24</span>)</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">2</span>] <span class="pl-k">=</span> (value <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code js-file-line">    <span class="pl-v">this</span>[offset <span class="pl-k">+</span> <span class="pl-c1">3</span>] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code js-file-line">  } <span class="pl-k">else</span> objectWriteUInt32(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">false</span>)</td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">4</span></td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">checkIEEE754</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">ext</span>, <span class="pl-vpf">max</span>, <span class="pl-vpf">min</span>) {</td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&gt;</span> max <span class="pl-k">||</span> value <span class="pl-k">&lt;</span> min) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value is out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code js-file-line">  <span class="pl-k">if</span> (offset <span class="pl-k">+</span> ext <span class="pl-k">&gt;</span> buf.<span class="pl-sc">length</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>index out of range<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">writeFloat</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">littleEndian</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code js-file-line">    checkIEEE754(buf, value, offset, <span class="pl-c1">4</span>, <span class="pl-c1">3.4028234663852886e+38</span>, <span class="pl-k">-</span><span class="pl-c1">3.4028234663852886e+38</span>)</td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code js-file-line">  ieee754.<span class="pl-s3">write</span>(buf, value, offset, littleEndian, <span class="pl-c1">23</span>, <span class="pl-c1">4</span>)</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">4</span></td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeFloatLE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code js-file-line">  <span class="pl-k">return</span> writeFloat(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">true</span>, noAssert)</td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeFloatBE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code js-file-line">  <span class="pl-k">return</span> writeFloat(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">false</span>, noAssert)</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">writeDouble</span> (<span class="pl-vpf">buf</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">littleEndian</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>noAssert)</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code js-file-line">    checkIEEE754(buf, value, offset, <span class="pl-c1">8</span>, <span class="pl-c1">1.7976931348623157E+308</span>, <span class="pl-k">-</span><span class="pl-c1">1.7976931348623157E+308</span>)</td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code js-file-line">  ieee754.<span class="pl-s3">write</span>(buf, value, offset, littleEndian, <span class="pl-c1">52</span>, <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code js-file-line">  <span class="pl-k">return</span> offset <span class="pl-k">+</span> <span class="pl-c1">8</span></td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeDoubleLE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code js-file-line">  <span class="pl-k">return</span> writeDouble(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">true</span>, noAssert)</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">writeDoubleBE</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">noAssert</span>) {</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code js-file-line">  <span class="pl-k">return</span> writeDouble(<span class="pl-v">this</span>, value, offset, <span class="pl-c1">false</span>, noAssert)</td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code js-file-line"><span class="pl-c">// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)</span></td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">target</span>, <span class="pl-vpf">target_start</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code js-file-line">  <span class="pl-s">var</span> source <span class="pl-k">=</span> <span class="pl-v">this</span></td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>start) start <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>end <span class="pl-k">&amp;&amp;</span> end <span class="pl-k">!==</span> <span class="pl-c1">0</span>) end <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>target_start) target_start <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code js-file-line">  <span class="pl-c">// Copy 0 bytes; we&#39;re done</span></td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">===</span> start) <span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code js-file-line">  <span class="pl-k">if</span> (target.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> source.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code js-file-line">  <span class="pl-c">// Fatal error conditions</span></td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> start) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>sourceEnd &lt; sourceStart<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code js-file-line">  <span class="pl-k">if</span> (target_start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> target_start <span class="pl-k">&gt;=</span> target.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>targetStart out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code js-file-line">  <span class="pl-k">if</span> (start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> start <span class="pl-k">&gt;=</span> source.<span class="pl-sc">length</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>sourceStart out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> end <span class="pl-k">&gt;</span> source.<span class="pl-sc">length</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>sourceEnd out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code js-file-line">  <span class="pl-c">// Are we oob?</span></td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code js-file-line">    end <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code js-file-line">  <span class="pl-k">if</span> (target.<span class="pl-sc">length</span> <span class="pl-k">-</span> target_start <span class="pl-k">&lt;</span> end <span class="pl-k">-</span> start)</td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code js-file-line">    end <span class="pl-k">=</span> target.<span class="pl-sc">length</span> <span class="pl-k">-</span> target_start <span class="pl-k">+</span> start</td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code js-file-line">  <span class="pl-s">var</span> len <span class="pl-k">=</span> end <span class="pl-k">-</span> start</td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code js-file-line">  <span class="pl-k">if</span> (len <span class="pl-k">&lt;</span> <span class="pl-c1">100</span> <span class="pl-k">||</span> <span class="pl-k">!</span>Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> len; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code js-file-line">      target[i <span class="pl-k">+</span> target_start] <span class="pl-k">=</span> <span class="pl-v">this</span>[i <span class="pl-k">+</span> start]</td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code js-file-line">    target._set(<span class="pl-v">this</span>.subarray(start, start <span class="pl-k">+</span> len), target_start)</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code js-file-line"><span class="pl-c">// fill(value, start=0, end=buffer.length)</span></td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">fill</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>, <span class="pl-vpf">start</span>, <span class="pl-vpf">end</span>) {</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>value) value <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>start) start <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>end) end <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> start) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>end &lt; start<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code js-file-line">  <span class="pl-c">// Fill 0 bytes; we&#39;re done</span></td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">===</span> start) <span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code js-file-line">  <span class="pl-k">if</span> (start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> start <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>start out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code js-file-line">  <span class="pl-k">if</span> (end <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> end <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>end out of bounds<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code js-file-line">  <span class="pl-s">var</span> i</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> start; i <span class="pl-k">&lt;</span> end; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code js-file-line">      <span class="pl-v">this</span>[i] <span class="pl-k">=</span> value</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code js-file-line">    <span class="pl-s">var</span> bytes <span class="pl-k">=</span> utf8ToBytes(value.<span class="pl-s3">toString</span>())</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code js-file-line">    <span class="pl-s">var</span> len <span class="pl-k">=</span> bytes.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> start; i <span class="pl-k">&lt;</span> end; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code js-file-line">      <span class="pl-v">this</span>[i] <span class="pl-k">=</span> bytes[i <span class="pl-k">%</span> len]</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-v">this</span></td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code js-file-line"><span class="pl-c"> * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.</span></td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code js-file-line"><span class="pl-c"> * Added in Node 0.12. Only available in browsers that support ArrayBuffer.</span></td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">toArrayBuffer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> Uint8Array <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code js-file-line">    <span class="pl-k">if</span> (Buffer.TYPED_ARRAY_SUPPORT) {</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code js-file-line">      <span class="pl-k">return</span> (<span class="pl-k">new</span> <span class="pl-en">Buffer</span>(<span class="pl-v">this</span>)).buffer</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code js-file-line">      <span class="pl-s">var</span> buf <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-v">this</span>.<span class="pl-sc">length</span>)</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code js-file-line">      <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, len <span class="pl-k">=</span> buf.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> len; i <span class="pl-k">+=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code js-file-line">        buf[i] <span class="pl-k">=</span> <span class="pl-v">this</span>[i]</td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code js-file-line">      <span class="pl-k">return</span> buf.buffer</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Buffer.toArrayBuffer not supported in this browser<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code js-file-line"><span class="pl-c">// HELPER FUNCTIONS</span></td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code js-file-line"><span class="pl-c">// ================</span></td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code js-file-line"><span class="pl-s">var</span> BP <span class="pl-k">=</span> Buffer.<span class="pl-sc">prototype</span></td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code js-file-line"><span class="pl-c"> * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods</span></td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code js-file-line"><span class="pl-s3">Buffer</span>.<span class="pl-en">_augment</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">arr</span>) {</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code js-file-line">  arr._isBuffer <span class="pl-k">=</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code js-file-line">  <span class="pl-c">// save reference to original Uint8Array get/set methods before overwriting</span></td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code js-file-line">  arr._get <span class="pl-k">=</span> arr.get</td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code js-file-line">  arr._set <span class="pl-k">=</span> arr.set</td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code js-file-line">  <span class="pl-c">// deprecated, will be removed in node 0.13+</span></td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code js-file-line">  arr.get <span class="pl-k">=</span> BP.get</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code js-file-line">  arr.set <span class="pl-k">=</span> BP.set</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code js-file-line">  arr.write <span class="pl-k">=</span> BP.write</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code js-file-line">  arr.toString <span class="pl-k">=</span> BP.toString</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code js-file-line">  arr.toLocaleString <span class="pl-k">=</span> BP.toString</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code js-file-line">  arr.toJSON <span class="pl-k">=</span> BP.toJSON</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code js-file-line">  arr.equals <span class="pl-k">=</span> BP.equals</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code js-file-line">  arr.compare <span class="pl-k">=</span> BP.compare</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code js-file-line">  arr.copy <span class="pl-k">=</span> BP.copy</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code js-file-line">  arr.slice <span class="pl-k">=</span> BP.slice</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code js-file-line">  arr.readUInt8 <span class="pl-k">=</span> BP.readUInt8</td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code js-file-line">  arr.readUInt16LE <span class="pl-k">=</span> BP.readUInt16LE</td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code js-file-line">  arr.readUInt16BE <span class="pl-k">=</span> BP.readUInt16BE</td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code js-file-line">  arr.readUInt32LE <span class="pl-k">=</span> BP.readUInt32LE</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code js-file-line">  arr.readUInt32BE <span class="pl-k">=</span> BP.readUInt32BE</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code js-file-line">  arr.readInt8 <span class="pl-k">=</span> BP.readInt8</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code js-file-line">  arr.readInt16LE <span class="pl-k">=</span> BP.readInt16LE</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code js-file-line">  arr.readInt16BE <span class="pl-k">=</span> BP.readInt16BE</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code js-file-line">  arr.readInt32LE <span class="pl-k">=</span> BP.readInt32LE</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code js-file-line">  arr.readInt32BE <span class="pl-k">=</span> BP.readInt32BE</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code js-file-line">  arr.readFloatLE <span class="pl-k">=</span> BP.readFloatLE</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code js-file-line">  arr.readFloatBE <span class="pl-k">=</span> BP.readFloatBE</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code js-file-line">  arr.readDoubleLE <span class="pl-k">=</span> BP.readDoubleLE</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code js-file-line">  arr.readDoubleBE <span class="pl-k">=</span> BP.readDoubleBE</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code js-file-line">  arr.writeUInt8 <span class="pl-k">=</span> BP.writeUInt8</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code js-file-line">  arr.writeUInt16LE <span class="pl-k">=</span> BP.writeUInt16LE</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code js-file-line">  arr.writeUInt16BE <span class="pl-k">=</span> BP.writeUInt16BE</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code js-file-line">  arr.writeUInt32LE <span class="pl-k">=</span> BP.writeUInt32LE</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code js-file-line">  arr.writeUInt32BE <span class="pl-k">=</span> BP.writeUInt32BE</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code js-file-line">  arr.writeInt8 <span class="pl-k">=</span> BP.writeInt8</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code js-file-line">  arr.writeInt16LE <span class="pl-k">=</span> BP.writeInt16LE</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code js-file-line">  arr.writeInt16BE <span class="pl-k">=</span> BP.writeInt16BE</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code js-file-line">  arr.writeInt32LE <span class="pl-k">=</span> BP.writeInt32LE</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code js-file-line">  arr.writeInt32BE <span class="pl-k">=</span> BP.writeInt32BE</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code js-file-line">  arr.writeFloatLE <span class="pl-k">=</span> BP.writeFloatLE</td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code js-file-line">  arr.writeFloatBE <span class="pl-k">=</span> BP.writeFloatBE</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code js-file-line">  arr.writeDoubleLE <span class="pl-k">=</span> BP.writeDoubleLE</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code js-file-line">  arr.writeDoubleBE <span class="pl-k">=</span> BP.writeDoubleBE</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code js-file-line">  arr.fill <span class="pl-k">=</span> BP.fill</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code js-file-line">  arr.inspect <span class="pl-k">=</span> BP.inspect</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code js-file-line">  arr.toArrayBuffer <span class="pl-k">=</span> BP.toArrayBuffer</td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code js-file-line">  <span class="pl-k">return</span> arr</td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code js-file-line"><span class="pl-s">var</span> INVALID_BASE64_RE <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-k">^</span>+<span class="pl-cce">\/</span><span class="pl-c1">0-9A-z</span>]</span><span class="pl-pds">/</span>g</span></td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">base64clean</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code js-file-line">  <span class="pl-c">// Node strips out invalid characters like \n and \t from the string, base64-js does not</span></td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code js-file-line">  str <span class="pl-k">=</span> stringtrim(str).<span class="pl-s3">replace</span>(INVALID_BASE64_RE, <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code js-file-line">  <span class="pl-c">// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not</span></td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code js-file-line">  <span class="pl-k">while</span> (str.<span class="pl-sc">length</span> <span class="pl-k">%</span> <span class="pl-c1">4</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code js-file-line">    str <span class="pl-k">=</span> str <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code js-file-line">  <span class="pl-k">return</span> str</td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">stringtrim</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code js-file-line">  <span class="pl-k">if</span> (str.trim) <span class="pl-k">return</span> str.trim()</td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code js-file-line">  <span class="pl-k">return</span> str.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">|</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">isArrayish</span> (<span class="pl-vpf">subject</span>) {</td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code js-file-line">  <span class="pl-k">return</span> isArray(subject) <span class="pl-k">||</span> Buffer.isBuffer(subject) <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code js-file-line">      subject <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> subject <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code js-file-line">      <span class="pl-k">typeof</span> subject.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">toHex</span> (<span class="pl-vpf">n</span>) {</td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code js-file-line">  <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">16</span>) <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> n.<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code js-file-line">  <span class="pl-k">return</span> n.<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">utf8ToBytes</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code js-file-line">  <span class="pl-s">var</span> byteArray <span class="pl-k">=</span> []</td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> str.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code js-file-line">    <span class="pl-s">var</span> b <span class="pl-k">=</span> str.<span class="pl-s3">charCodeAt</span>(i)</td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code js-file-line">    <span class="pl-k">if</span> (b <span class="pl-k">&lt;=</span> <span class="pl-c1">0x7F</span>) {</td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code js-file-line">      byteArray.<span class="pl-s3">push</span>(b)</td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code js-file-line">      <span class="pl-s">var</span> start <span class="pl-k">=</span> i</td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code js-file-line">      <span class="pl-k">if</span> (b <span class="pl-k">&gt;=</span> <span class="pl-c1">0xD800</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&lt;=</span> <span class="pl-c1">0xDFFF</span>) i<span class="pl-k">++</span></td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code js-file-line">      <span class="pl-s">var</span> h <span class="pl-k">=</span> encodeURIComponent(str.<span class="pl-s3">slice</span>(start, i<span class="pl-k">+</span><span class="pl-c1">1</span>)).<span class="pl-s3">substr</span>(<span class="pl-c1">1</span>).<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>%<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code js-file-line">      <span class="pl-k">for</span> (<span class="pl-s">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> h.<span class="pl-sc">length</span>; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code js-file-line">        byteArray.<span class="pl-s3">push</span>(<span class="pl-s3">parseInt</span>(h[j], <span class="pl-c1">16</span>))</td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code js-file-line">  <span class="pl-k">return</span> byteArray</td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">asciiToBytes</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code js-file-line">  <span class="pl-s">var</span> byteArray <span class="pl-k">=</span> []</td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> str.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code js-file-line">    <span class="pl-c">// Node&#39;s code seems to be doing this and not &amp; 0x7F..</span></td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code js-file-line">    byteArray.<span class="pl-s3">push</span>(str.<span class="pl-s3">charCodeAt</span>(i) <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF</span>)</td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code js-file-line">  <span class="pl-k">return</span> byteArray</td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">utf16leToBytes</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code js-file-line">  <span class="pl-s">var</span> c, hi, lo</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code js-file-line">  <span class="pl-s">var</span> byteArray <span class="pl-k">=</span> []</td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> str.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code js-file-line">    c <span class="pl-k">=</span> str.<span class="pl-s3">charCodeAt</span>(i)</td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code js-file-line">    hi <span class="pl-k">=</span> c <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">8</span></td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code js-file-line">    lo <span class="pl-k">=</span> c <span class="pl-k">%</span> <span class="pl-c1">256</span></td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code js-file-line">    byteArray.<span class="pl-s3">push</span>(lo)</td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code js-file-line">    byteArray.<span class="pl-s3">push</span>(hi)</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code js-file-line">  <span class="pl-k">return</span> byteArray</td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">base64ToBytes</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code js-file-line">  <span class="pl-k">return</span> base64.toByteArray(str)</td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">blitBuffer</span> (<span class="pl-vpf">src</span>, <span class="pl-vpf">dst</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code js-file-line">  <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> length; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code js-file-line">    <span class="pl-k">if</span> ((i <span class="pl-k">+</span> offset <span class="pl-k">&gt;=</span> dst.<span class="pl-sc">length</span>) <span class="pl-k">||</span> (i <span class="pl-k">&gt;=</span> src.<span class="pl-sc">length</span>))</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code js-file-line">      <span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code js-file-line">    dst[i <span class="pl-k">+</span> offset] <span class="pl-k">=</span> src[i]</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code js-file-line">  <span class="pl-k">return</span> i</td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">decodeUtf8Char</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code js-file-line">    <span class="pl-k">return</span> decodeURIComponent(str)</td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code js-file-line">  } <span class="pl-k">catch</span> (err) {</td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(<span class="pl-c1">0xFFFD</span>) <span class="pl-c">// UTF 8 invalid char</span></td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>base64-js<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>ieee754<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">6</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>is-array<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">7</span>}],<span class="pl-c1">5</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code js-file-line"><span class="pl-s">var</span> lookup <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code js-file-line">;(<span class="pl-st">function</span> (<span class="pl-vpf">exports</span>) {</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code js-file-line">	<span class="pl-s1"><span class="pl-pds">&#39;</span>use strict<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code js-file-line">  <span class="pl-s">var</span> Arr <span class="pl-k">=</span> (<span class="pl-k">typeof</span> Uint8Array <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code js-file-line">    <span class="pl-k">?</span> Uint8Array</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code js-file-line">    <span class="pl-k">:</span> <span class="pl-s3">Array</span></td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code js-file-line">	<span class="pl-s">var</span> PLUS   <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span>.<span class="pl-s3">charCodeAt</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code js-file-line">	<span class="pl-s">var</span> SLASH  <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>.<span class="pl-s3">charCodeAt</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code js-file-line">	<span class="pl-s">var</span> NUMBER <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>.<span class="pl-s3">charCodeAt</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code js-file-line">	<span class="pl-s">var</span> LOWER  <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>.<span class="pl-s3">charCodeAt</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code js-file-line">	<span class="pl-s">var</span> UPPER  <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>.<span class="pl-s3">charCodeAt</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code js-file-line">	<span class="pl-st">function</span> <span class="pl-en">decode</span> (<span class="pl-vpf">elt</span>) {</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code js-file-line">		<span class="pl-s">var</span> code <span class="pl-k">=</span> elt.<span class="pl-s3">charCodeAt</span>(<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code js-file-line">		<span class="pl-k">if</span> (code <span class="pl-k">===</span> PLUS)</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code js-file-line">			<span class="pl-k">return</span> <span class="pl-c1">62</span> <span class="pl-c">// &#39;+&#39;</span></td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code js-file-line">		<span class="pl-k">if</span> (code <span class="pl-k">===</span> SLASH)</td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code js-file-line">			<span class="pl-k">return</span> <span class="pl-c1">63</span> <span class="pl-c">// &#39;/&#39;</span></td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code js-file-line">		<span class="pl-k">if</span> (code <span class="pl-k">&lt;</span> NUMBER)</td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code js-file-line">			<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-c">//no match</span></td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code js-file-line">		<span class="pl-k">if</span> (code <span class="pl-k">&lt;</span> NUMBER <span class="pl-k">+</span> <span class="pl-c1">10</span>)</td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code js-file-line">			<span class="pl-k">return</span> code <span class="pl-k">-</span> NUMBER <span class="pl-k">+</span> <span class="pl-c1">26</span> <span class="pl-k">+</span> <span class="pl-c1">26</span></td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code js-file-line">		<span class="pl-k">if</span> (code <span class="pl-k">&lt;</span> UPPER <span class="pl-k">+</span> <span class="pl-c1">26</span>)</td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code js-file-line">			<span class="pl-k">return</span> code <span class="pl-k">-</span> UPPER</td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code js-file-line">		<span class="pl-k">if</span> (code <span class="pl-k">&lt;</span> LOWER <span class="pl-k">+</span> <span class="pl-c1">26</span>)</td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code js-file-line">			<span class="pl-k">return</span> code <span class="pl-k">-</span> LOWER <span class="pl-k">+</span> <span class="pl-c1">26</span></td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code js-file-line">	<span class="pl-st">function</span> <span class="pl-en">b64ToByteArray</span> (<span class="pl-vpf">b64</span>) {</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code js-file-line">		<span class="pl-s">var</span> i, j, l, tmp, placeHolders, arr</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code js-file-line">		<span class="pl-k">if</span> (b64.<span class="pl-sc">length</span> <span class="pl-k">%</span> <span class="pl-c1">4</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code js-file-line">			<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Invalid string. Length must be a multiple of 4<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code js-file-line">		<span class="pl-c">// the number of equal signs (place holders)</span></td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code js-file-line">		<span class="pl-c">// if there are two placeholders, than the two characters before it</span></td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code js-file-line">		<span class="pl-c">// represent one byte</span></td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code js-file-line">		<span class="pl-c">// if there is only one, then the three characters before it represent 2 bytes</span></td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code js-file-line">		<span class="pl-c">// this is just a cheap hack to not do indexOf twice</span></td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code js-file-line">		<span class="pl-s">var</span> len <span class="pl-k">=</span> b64.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code js-file-line">		placeHolders <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span> <span class="pl-k">===</span> b64.<span class="pl-s3">charAt</span>(len <span class="pl-k">-</span> <span class="pl-c1">2</span>) <span class="pl-k">?</span> <span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span> <span class="pl-k">===</span> b64.<span class="pl-s3">charAt</span>(len <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code js-file-line">		<span class="pl-c">// base64 is 4/3 + up to two characters of the original data</span></td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code js-file-line">		arr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Arr</span>(b64.<span class="pl-sc">length</span> <span class="pl-k">*</span> <span class="pl-c1">3</span> / <span class="pl-c1">4</span> <span class="pl-k">-</span> placeHolders)</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code js-file-line">		<span class="pl-c">// if there are placeholders, only get up to the last complete 4 chars</span></td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code js-file-line">		l <span class="pl-k">=</span> placeHolders <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> b64.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">4</span> <span class="pl-k">:</span> b64.<span class="pl-sc">length</span></td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code js-file-line">		<span class="pl-s">var</span> L <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code js-file-line">		<span class="pl-st">function</span> <span class="pl-en">push</span> (<span class="pl-vpf">v</span>) {</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code js-file-line">			arr[L<span class="pl-k">++</span>] <span class="pl-k">=</span> v</td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code js-file-line">		<span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, j <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> l; i <span class="pl-k">+=</span> <span class="pl-c1">4</span>, j <span class="pl-k">+=</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code js-file-line">			tmp <span class="pl-k">=</span> (decode(b64.<span class="pl-s3">charAt</span>(i)) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">18</span>) | (decode(b64.<span class="pl-s3">charAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>)) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">12</span>) | (decode(b64.<span class="pl-s3">charAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">2</span>)) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">6</span>) | decode(b64.<span class="pl-s3">charAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">3</span>))</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code js-file-line">			<span class="pl-s3">push</span>((tmp <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF0000</span>) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">16</span>)</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code js-file-line">			<span class="pl-s3">push</span>((tmp <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF00</span>) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">8</span>)</td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code js-file-line">			<span class="pl-s3">push</span>(tmp <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF</span>)</td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code js-file-line">		<span class="pl-k">if</span> (placeHolders <span class="pl-k">===</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code js-file-line">			tmp <span class="pl-k">=</span> (decode(b64.<span class="pl-s3">charAt</span>(i)) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">2</span>) | (decode(b64.<span class="pl-s3">charAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>)) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">4</span>)</td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code js-file-line">			<span class="pl-s3">push</span>(tmp <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF</span>)</td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code js-file-line">		} <span class="pl-k">else</span> <span class="pl-k">if</span> (placeHolders <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code js-file-line">			tmp <span class="pl-k">=</span> (decode(b64.<span class="pl-s3">charAt</span>(i)) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">10</span>) | (decode(b64.<span class="pl-s3">charAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>)) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">4</span>) | (decode(b64.<span class="pl-s3">charAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">2</span>)) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">2</span>)</td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code js-file-line">			<span class="pl-s3">push</span>((tmp <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">8</span>) <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF</span>)</td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code js-file-line">			<span class="pl-s3">push</span>(tmp <span class="pl-k">&amp;</span> <span class="pl-c1">0xFF</span>)</td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code js-file-line">		<span class="pl-k">return</span> arr</td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code js-file-line">	<span class="pl-st">function</span> <span class="pl-en">uint8ToBase64</span> (<span class="pl-vpf">uint8</span>) {</td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code js-file-line">		<span class="pl-s">var</span> i,</td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code js-file-line">			extraBytes <span class="pl-k">=</span> uint8.<span class="pl-sc">length</span> <span class="pl-k">%</span> <span class="pl-c1">3</span>, <span class="pl-c">// if we have 1 byte left, pad 2 bytes</span></td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code js-file-line">			output <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code js-file-line">			temp, length</td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code js-file-line">		<span class="pl-st">function</span> <span class="pl-en">encode</span> (<span class="pl-vpf">num</span>) {</td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code js-file-line">			<span class="pl-k">return</span> lookup.<span class="pl-s3">charAt</span>(num)</td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code js-file-line">		<span class="pl-st">function</span> <span class="pl-en">tripletToBase64</span> (<span class="pl-vpf">num</span>) {</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code js-file-line">			<span class="pl-k">return</span> encode(num <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">18</span> <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>) <span class="pl-k">+</span> encode(num <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">12</span> <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>) <span class="pl-k">+</span> encode(num <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">6</span> <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>) <span class="pl-k">+</span> encode(num <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>)</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code js-file-line">		<span class="pl-c">// go through the array every three bytes, we&#39;ll deal with trailing stuff later</span></td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code js-file-line">		<span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, length <span class="pl-k">=</span> uint8.<span class="pl-sc">length</span> <span class="pl-k">-</span> extraBytes; i <span class="pl-k">&lt;</span> length; i <span class="pl-k">+=</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code js-file-line">			temp <span class="pl-k">=</span> (uint8[i] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">16</span>) <span class="pl-k">+</span> (uint8[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) <span class="pl-k">+</span> (uint8[i <span class="pl-k">+</span> <span class="pl-c1">2</span>])</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code js-file-line">			output <span class="pl-k">+=</span> tripletToBase64(temp)</td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code js-file-line">		<span class="pl-c">// pad the end with zeros, but make sure to not forget the extra bytes</span></td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code js-file-line">		<span class="pl-k">switch</span> (extraBytes) {</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code js-file-line">			<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code js-file-line">				temp <span class="pl-k">=</span> uint8[uint8.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>]</td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code js-file-line">				output <span class="pl-k">+=</span> encode(temp <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">2</span>)</td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code js-file-line">				output <span class="pl-k">+=</span> encode((temp <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">4</span>) <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>)</td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code js-file-line">				output <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>==<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code js-file-line">				<span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code js-file-line">			<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code js-file-line">				temp <span class="pl-k">=</span> (uint8[uint8.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">2</span>] <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">8</span>) <span class="pl-k">+</span> (uint8[uint8.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code js-file-line">				output <span class="pl-k">+=</span> encode(temp <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">10</span>)</td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code js-file-line">				output <span class="pl-k">+=</span> encode((temp <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">4</span>) <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>)</td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code js-file-line">				output <span class="pl-k">+=</span> encode((temp <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">&amp;</span> <span class="pl-c1">0x3F</span>)</td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code js-file-line">				output <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code js-file-line">				<span class="pl-k">break</span></td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code js-file-line">		<span class="pl-k">return</span> output</td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code js-file-line">	<span class="pl-sv">exports</span>.toByteArray <span class="pl-k">=</span> b64ToByteArray</td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code js-file-line">	<span class="pl-sv">exports</span>.fromByteArray <span class="pl-k">=</span> uint8ToBase64</td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code js-file-line">}(<span class="pl-k">typeof</span> <span class="pl-sv">exports</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> (<span class="pl-v">this</span>.base64js <span class="pl-k">=</span> {}) <span class="pl-k">:</span> <span class="pl-sv">exports</span>))</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code js-file-line">},{}],<span class="pl-c1">6</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code js-file-line"><span class="pl-s3">exports</span>.<span class="pl-en">read</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">buffer</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">isLE</span>, <span class="pl-vpf">mLen</span>, <span class="pl-vpf">nBytes</span>) {</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code js-file-line">  <span class="pl-s">var</span> e, m,</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code js-file-line">      eLen <span class="pl-k">=</span> nBytes <span class="pl-k">*</span> <span class="pl-c1">8</span> <span class="pl-k">-</span> mLen <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code js-file-line">      eMax <span class="pl-k">=</span> (<span class="pl-c1">1</span> <span class="pl-k">&lt;&lt;</span> eLen) <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code js-file-line">      eBias <span class="pl-k">=</span> eMax <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code js-file-line">      nBits <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">7</span>,</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code js-file-line">      i <span class="pl-k">=</span> isLE <span class="pl-k">?</span> (nBytes <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code js-file-line">      d <span class="pl-k">=</span> isLE <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code js-file-line">      s <span class="pl-k">=</span> buffer[offset <span class="pl-k">+</span> i];</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code js-file-line">  i <span class="pl-k">+=</span> d;</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code js-file-line">  e <span class="pl-k">=</span> s <span class="pl-k">&amp;</span> ((<span class="pl-c1">1</span> <span class="pl-k">&lt;&lt;</span> (<span class="pl-k">-</span>nBits)) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code js-file-line">  s <span class="pl-k">&gt;&gt;=</span> (<span class="pl-k">-</span>nBits);</td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code js-file-line">  nBits <span class="pl-k">+=</span> eLen;</td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code js-file-line">  <span class="pl-k">for</span> (; nBits <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>; e <span class="pl-k">=</span> e <span class="pl-k">*</span> <span class="pl-c1">256</span> <span class="pl-k">+</span> buffer[offset <span class="pl-k">+</span> i], i <span class="pl-k">+=</span> d, nBits <span class="pl-k">-=</span> <span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code js-file-line">  m <span class="pl-k">=</span> e <span class="pl-k">&amp;</span> ((<span class="pl-c1">1</span> <span class="pl-k">&lt;&lt;</span> (<span class="pl-k">-</span>nBits)) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code js-file-line">  e <span class="pl-k">&gt;&gt;=</span> (<span class="pl-k">-</span>nBits);</td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code js-file-line">  nBits <span class="pl-k">+=</span> mLen;</td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code js-file-line">  <span class="pl-k">for</span> (; nBits <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>; m <span class="pl-k">=</span> m <span class="pl-k">*</span> <span class="pl-c1">256</span> <span class="pl-k">+</span> buffer[offset <span class="pl-k">+</span> i], i <span class="pl-k">+=</span> d, nBits <span class="pl-k">-=</span> <span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code js-file-line">  <span class="pl-k">if</span> (e <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code js-file-line">    e <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> eBias;</td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (e <span class="pl-k">===</span> eMax) {</td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code js-file-line">    <span class="pl-k">return</span> m <span class="pl-k">?</span> <span class="pl-c1">NaN</span> <span class="pl-k">:</span> ((s <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code js-file-line">    m <span class="pl-k">=</span> m <span class="pl-k">+</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, mLen);</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code js-file-line">    e <span class="pl-k">=</span> e <span class="pl-k">-</span> eBias;</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code js-file-line">  <span class="pl-k">return</span> (s <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> m <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, e <span class="pl-k">-</span> mLen);</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code js-file-line"><span class="pl-s3">exports</span>.<span class="pl-en">write</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">buffer</span>, <span class="pl-vpf">value</span>, <span class="pl-vpf">offset</span>, <span class="pl-vpf">isLE</span>, <span class="pl-vpf">mLen</span>, <span class="pl-vpf">nBytes</span>) {</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code js-file-line">  <span class="pl-s">var</span> e, m, c,</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code js-file-line">      eLen <span class="pl-k">=</span> nBytes <span class="pl-k">*</span> <span class="pl-c1">8</span> <span class="pl-k">-</span> mLen <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code js-file-line">      eMax <span class="pl-k">=</span> (<span class="pl-c1">1</span> <span class="pl-k">&lt;&lt;</span> eLen) <span class="pl-k">-</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code js-file-line">      eBias <span class="pl-k">=</span> eMax <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code js-file-line">      rt <span class="pl-k">=</span> (mLen <span class="pl-k">===</span> <span class="pl-c1">23</span> <span class="pl-k">?</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">24</span>) <span class="pl-k">-</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">77</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code js-file-line">      i <span class="pl-k">=</span> isLE <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> (nBytes <span class="pl-k">-</span> <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code js-file-line">      d <span class="pl-k">=</span> isLE <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code js-file-line">      s <span class="pl-k">=</span> value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> (value <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">1</span> / value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code js-file-line">  value <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(value);</td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code js-file-line">  <span class="pl-k">if</span> (<span class="pl-s3">isNaN</span>(value) <span class="pl-k">||</span> value <span class="pl-k">===</span> <span class="pl-c1">Infinity</span>) {</td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code js-file-line">    m <span class="pl-k">=</span> <span class="pl-s3">isNaN</span>(value) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code js-file-line">    e <span class="pl-k">=</span> eMax;</td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code js-file-line">    e <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-s3">Math</span><span class="pl-s3">.log</span>(value) / <span class="pl-s3">Math</span>.<span class="pl-sc">LN2</span>);</td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">*</span> (c <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span>e)) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code js-file-line">      e<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code js-file-line">      c <span class="pl-k">*=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code js-file-line">    <span class="pl-k">if</span> (e <span class="pl-k">+</span> eBias <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code js-file-line">      value <span class="pl-k">+=</span> rt / c;</td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code js-file-line">      value <span class="pl-k">+=</span> rt <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span> <span class="pl-k">-</span> eBias);</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">*</span> c <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code js-file-line">      e<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code js-file-line">      c <span class="pl-k">/=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code js-file-line">    <span class="pl-k">if</span> (e <span class="pl-k">+</span> eBias <span class="pl-k">&gt;=</span> eMax) {</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code js-file-line">      m <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code js-file-line">      e <span class="pl-k">=</span> eMax;</td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (e <span class="pl-k">+</span> eBias <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code js-file-line">      m <span class="pl-k">=</span> (value <span class="pl-k">*</span> c <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, mLen);</td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code js-file-line">      e <span class="pl-k">=</span> e <span class="pl-k">+</span> eBias;</td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code js-file-line">      m <span class="pl-k">=</span> value <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, eBias <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>, mLen);</td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code js-file-line">      e <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code js-file-line">  <span class="pl-k">for</span> (; mLen <span class="pl-k">&gt;=</span> <span class="pl-c1">8</span>; buffer[offset <span class="pl-k">+</span> i] <span class="pl-k">=</span> m <span class="pl-k">&amp;</span> <span class="pl-c1">0xff</span>, i <span class="pl-k">+=</span> d, m <span class="pl-k">/=</span> <span class="pl-c1">256</span>, mLen <span class="pl-k">-=</span> <span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code js-file-line">  e <span class="pl-k">=</span> (e <span class="pl-k">&lt;&lt;</span> mLen) | m;</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code js-file-line">  eLen <span class="pl-k">+=</span> mLen;</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code js-file-line">  <span class="pl-k">for</span> (; eLen <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>; buffer[offset <span class="pl-k">+</span> i] <span class="pl-k">=</span> e <span class="pl-k">&amp;</span> <span class="pl-c1">0xff</span>, i <span class="pl-k">+=</span> d, e <span class="pl-k">/=</span> <span class="pl-c1">256</span>, eLen <span class="pl-k">-=</span> <span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code js-file-line">  buffer[offset <span class="pl-k">+</span> i <span class="pl-k">-</span> d] |<span class="pl-k">=</span> s <span class="pl-k">*</span> <span class="pl-c1">128</span>;</td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code js-file-line">},{}],<span class="pl-c1">7</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code js-file-line"><span class="pl-c"> * isArray</span></td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code js-file-line"><span class="pl-s">var</span> isArray <span class="pl-k">=</span> <span class="pl-s3">Array</span>.isArray;</td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code js-file-line"><span class="pl-c"> * toString</span></td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code js-file-line"><span class="pl-s">var</span> str <span class="pl-k">=</span> <span class="pl-s3">Object</span>.<span class="pl-sc">prototype</span>.toString;</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code js-file-line"><span class="pl-c"> * Whether or not the given `val`</span></td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code js-file-line"><span class="pl-c"> * is an array.</span></td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code js-file-line"><span class="pl-c"> * example:</span></td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code js-file-line"><span class="pl-c"> *        isArray([]);</span></td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code js-file-line"><span class="pl-c"> *        // &gt; true</span></td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code js-file-line"><span class="pl-c"> *        isArray(arguments);</span></td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code js-file-line"><span class="pl-c"> *        // &gt; false</span></td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code js-file-line"><span class="pl-c"> *        isArray(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code js-file-line"><span class="pl-c"> *        // &gt; false</span></td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code js-file-line"><span class="pl-c"> * @param {mixed} val</span></td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code js-file-line"><span class="pl-c"> * @return {bool}</span></td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> isArray <span class="pl-k">||</span> <span class="pl-st">function</span> (<span class="pl-vpf">val</span>) {</td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code js-file-line">  <span class="pl-k">return</span> <span class="pl-k">!!</span> val <span class="pl-k">&amp;&amp;</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>[object Array]<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> str.<span class="pl-s3">call</span>(val);</td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code js-file-line">},{}],<span class="pl-c1">8</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code js-file-line"><span class="pl-c">// shim for using process in browser</span></td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code js-file-line"><span class="pl-s">var</span> <span class="pl-sv">process</span> <span class="pl-k">=</span> <span class="pl-sv">module</span>.exports <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code js-file-line"><span class="pl-sv">process</span>.nextTick <span class="pl-k">=</span> (<span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code js-file-line">    <span class="pl-s">var</span> canSetImmediate <span class="pl-k">=</span> <span class="pl-k">typeof</span> <span class="pl-s3">window</span> <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code js-file-line">    <span class="pl-k">&amp;&amp;</span> <span class="pl-s3">window</span>.setImmediate;</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code js-file-line">    <span class="pl-s">var</span> canPost <span class="pl-k">=</span> <span class="pl-k">typeof</span> <span class="pl-s3">window</span> <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code js-file-line">    <span class="pl-k">&amp;&amp;</span> <span class="pl-s3">window</span>.postMessage <span class="pl-k">&amp;&amp;</span> <span class="pl-s3">window</span>.addEventListener</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code js-file-line">    ;</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code js-file-line">    <span class="pl-k">if</span> (canSetImmediate) {</td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-st">function</span> (<span class="pl-vpf">f</span>) { <span class="pl-k">return</span> <span class="pl-s3">window</span>.setImmediate(f) };</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code js-file-line">    <span class="pl-k">if</span> (canPost) {</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code js-file-line">        <span class="pl-s">var</span> queue <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code js-file-line">        <span class="pl-s3">window</span>.addEventListener(<span class="pl-s1"><span class="pl-pds">&#39;</span>message<span class="pl-pds">&#39;</span></span>, <span class="pl-st">function</span> (<span class="pl-vpf">ev</span>) {</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code js-file-line">            <span class="pl-s">var</span> source <span class="pl-k">=</span> ev.<span class="pl-sc">source</span>;</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code js-file-line">            <span class="pl-k">if</span> ((source <span class="pl-k">===</span> <span class="pl-s3">window</span> <span class="pl-k">||</span> source <span class="pl-k">===</span> <span class="pl-c1">null</span>) <span class="pl-k">&amp;&amp;</span> ev.<span class="pl-sc">data</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>process-tick<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code js-file-line">                ev.stopPropagation();</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code js-file-line">                <span class="pl-k">if</span> (queue.<span class="pl-sc">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code js-file-line">                    <span class="pl-s">var</span> fn <span class="pl-k">=</span> queue.<span class="pl-s3">shift</span>();</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code js-file-line">                    fn();</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code js-file-line">        }, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-st">function</span> <span class="pl-en">nextTick</span>(<span class="pl-vpf">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code js-file-line">            queue.<span class="pl-s3">push</span>(fn);</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code js-file-line">            <span class="pl-s3">window</span>.postMessage(<span class="pl-s1"><span class="pl-pds">&#39;</span>process-tick<span class="pl-pds">&#39;</span></span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>*<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-st">function</span> <span class="pl-en">nextTick</span>(<span class="pl-vpf">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code js-file-line">        <span class="pl-s3">setTimeout</span>(fn, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code js-file-line">})();</td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code js-file-line"><span class="pl-sv">process</span>.<span class="pl-sc">title</span> <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>browser<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code js-file-line"><span class="pl-sv">process</span>.browser <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code js-file-line"><span class="pl-sv">process</span>.env <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code js-file-line"><span class="pl-sv">process</span>.argv <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">noop</span>() {}</td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code js-file-line"><span class="pl-sv">process</span>.on <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code js-file-line"><span class="pl-sv">process</span>.addListener <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code js-file-line"><span class="pl-sv">process</span>.once <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code js-file-line"><span class="pl-sv">process</span>.off <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code js-file-line"><span class="pl-sv">process</span>.removeListener <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code js-file-line"><span class="pl-sv">process</span>.removeAllListeners <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code js-file-line"><span class="pl-sv">process</span>.emit <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code js-file-line"><span class="pl-s3">process</span>.<span class="pl-en">binding</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>process.binding is not supported<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code js-file-line"><span class="pl-c">// TODO(shtylman)</span></td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code js-file-line"><span class="pl-s3">process</span>.<span class="pl-en">cwd</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () { <span class="pl-k">return</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span> };</td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code js-file-line"><span class="pl-s3">process</span>.<span class="pl-en">chdir</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">dir</span>) {</td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>process.chdir is not supported<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code js-file-line">},{}],<span class="pl-c1">9</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code js-file-line">(<span class="pl-st">function</span> (<span class="pl-vpf">process</span>,<span class="pl-vpf">Buffer</span>){</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code js-file-line"><span class="pl-c">/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */</span>(<span class="pl-st">function</span>() {<span class="pl-s1"><span class="pl-pds">&#39;</span>use strict<span class="pl-pds">&#39;</span></span>;<span class="pl-st">function</span> <span class="pl-en">q</span>(<span class="pl-vpf">b</span>){<span class="pl-k">throw</span> b;}<span class="pl-s">var</span> t<span class="pl-k">=void</span> <span class="pl-c1">0</span>,v<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-s">var</span> A<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> Uint8Array<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> Uint16Array<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> Uint32Array<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> DataView;<span class="pl-st">function</span> <span class="pl-en">E</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">index</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.buffer<span class="pl-k">=</span>b <span class="pl-k">instanceof</span>(A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)<span class="pl-k">?</span>b<span class="pl-k">:new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">32768</span>);<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.buffer.<span class="pl-sc">length</span><span class="pl-k">&lt;=</span><span class="pl-v">this</span>.<span class="pl-sc">index</span><span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid index<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.buffer.<span class="pl-sc">length</span><span class="pl-k">&lt;=</span><span class="pl-v">this</span>.<span class="pl-sc">index</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.f()}<span class="pl-s3">E</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.buffer,a,c<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,d<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(c<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(A)d.set(b);<span class="pl-k">else</span> <span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>a)d[a]<span class="pl-k">=</span>b[a];<span class="pl-k">return</span> <span class="pl-v">this</span>.buffer<span class="pl-k">=</span>d};</td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code js-file-line"><span class="pl-s3">E</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.buffer,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">index</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.m,g<span class="pl-k">=</span>d[e],k;c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">8</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span>(G[b<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>|G[b<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span>|G[b<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>|G[b<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>])<span class="pl-k">&gt;&gt;</span><span class="pl-c1">32</span><span class="pl-k">-</span>a<span class="pl-k">:</span>G[b]<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">-</span>a);<span class="pl-k">if</span>(<span class="pl-c1">8</span><span class="pl-k">&gt;</span>a<span class="pl-k">+</span>f)g<span class="pl-k">=</span>g<span class="pl-k">&lt;&lt;</span>a|b,f<span class="pl-k">+=</span>a;<span class="pl-k">else</span> <span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>a;<span class="pl-k">++</span>k)g<span class="pl-k">=</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>|b<span class="pl-k">&gt;&gt;</span>a<span class="pl-k">-</span>k<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;</span><span class="pl-c1">1</span>,<span class="pl-c1">8</span><span class="pl-k">===++</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>,d[e<span class="pl-k">++</span>]<span class="pl-k">=</span>G[g],g<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">===</span>d.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.f()));d[e]<span class="pl-k">=</span>g;<span class="pl-v">this</span>.buffer<span class="pl-k">=</span>d;<span class="pl-v">this</span>.m<span class="pl-k">=</span>f;<span class="pl-v">this</span>.<span class="pl-sc">index</span><span class="pl-k">=</span>e};<span class="pl-s3">E</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">finish</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.buffer,a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">index</span>,c;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.m<span class="pl-k">&amp;&amp;</span>(b[a]<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">8</span><span class="pl-k">-</span><span class="pl-v">this</span>.m,b[a]<span class="pl-k">=</span>G[b[a]],a<span class="pl-k">++</span>);A<span class="pl-k">?</span>c<span class="pl-k">=</span>b.subarray(<span class="pl-c1">0</span>,a)<span class="pl-k">:</span>(b.<span class="pl-sc">length</span><span class="pl-k">=</span>a,c<span class="pl-k">=</span>b);<span class="pl-k">return</span> c};</td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code js-file-line"><span class="pl-s">var</span> aa<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">256</span>),J;<span class="pl-k">for</span>(J<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">256</span><span class="pl-k">&gt;</span>J;<span class="pl-k">++</span>J){<span class="pl-k">for</span>(<span class="pl-s">var</span> N<span class="pl-k">=</span>J,Q<span class="pl-k">=</span>N,ba<span class="pl-k">=</span><span class="pl-c1">7</span>,N<span class="pl-k">=</span>N<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">1</span>;N;N<span class="pl-k">&gt;&gt;&gt;=</span><span class="pl-c1">1</span>)Q<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>,Q|<span class="pl-k">=</span>N<span class="pl-k">&amp;</span><span class="pl-c1">1</span>,<span class="pl-k">--</span>ba;aa[J]<span class="pl-k">=</span>(Q<span class="pl-k">&lt;&lt;</span>ba<span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>}<span class="pl-s">var</span> G<span class="pl-k">=</span>aa;<span class="pl-st">function</span> <span class="pl-en">R</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> a<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> c<span class="pl-k">?</span>c<span class="pl-k">:</span>b.<span class="pl-sc">length</span>;d<span class="pl-k">=-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span>f<span class="pl-k">&amp;</span><span class="pl-c1">7</span>;e<span class="pl-k">--</span>;<span class="pl-k">++</span>a)d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>];<span class="pl-k">for</span>(e<span class="pl-k">=</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">3</span>;e<span class="pl-k">--</span>;a<span class="pl-k">+=</span><span class="pl-c1">8</span>)d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">1</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">2</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">3</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">4</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">5</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">6</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],d<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>S[(d<span class="pl-k">^</span>b[a<span class="pl-k">+</span><span class="pl-c1">7</span>])<span class="pl-k">&amp;</span><span class="pl-c1">255</span>];<span class="pl-k">return</span>(d<span class="pl-k">^</span><span class="pl-c1">4294967295</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>}</td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code js-file-line"><span class="pl-s">var</span> ga<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1996959894</span>,<span class="pl-c1">3993919788</span>,<span class="pl-c1">2567524794</span>,<span class="pl-c1">124634137</span>,<span class="pl-c1">1886057615</span>,<span class="pl-c1">3915621685</span>,<span class="pl-c1">2657392035</span>,<span class="pl-c1">249268274</span>,<span class="pl-c1">2044508324</span>,<span class="pl-c1">3772115230</span>,<span class="pl-c1">2547177864</span>,<span class="pl-c1">162941995</span>,<span class="pl-c1">2125561021</span>,<span class="pl-c1">3887607047</span>,<span class="pl-c1">2428444049</span>,<span class="pl-c1">498536548</span>,<span class="pl-c1">1789927666</span>,<span class="pl-c1">4089016648</span>,<span class="pl-c1">2227061214</span>,<span class="pl-c1">450548861</span>,<span class="pl-c1">1843258603</span>,<span class="pl-c1">4107580753</span>,<span class="pl-c1">2211677639</span>,<span class="pl-c1">325883990</span>,<span class="pl-c1">1684777152</span>,<span class="pl-c1">4251122042</span>,<span class="pl-c1">2321926636</span>,<span class="pl-c1">335633487</span>,<span class="pl-c1">1661365465</span>,<span class="pl-c1">4195302755</span>,<span class="pl-c1">2366115317</span>,<span class="pl-c1">997073096</span>,<span class="pl-c1">1281953886</span>,<span class="pl-c1">3579855332</span>,<span class="pl-c1">2724688242</span>,<span class="pl-c1">1006888145</span>,<span class="pl-c1">1258607687</span>,<span class="pl-c1">3524101629</span>,<span class="pl-c1">2768942443</span>,<span class="pl-c1">901097722</span>,<span class="pl-c1">1119000684</span>,<span class="pl-c1">3686517206</span>,<span class="pl-c1">2898065728</span>,<span class="pl-c1">853044451</span>,<span class="pl-c1">1172266101</span>,<span class="pl-c1">3705015759</span>,</td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code js-file-line"><span class="pl-c1">2882616665</span>,<span class="pl-c1">651767980</span>,<span class="pl-c1">1373503546</span>,<span class="pl-c1">3369554304</span>,<span class="pl-c1">3218104598</span>,<span class="pl-c1">565507253</span>,<span class="pl-c1">1454621731</span>,<span class="pl-c1">3485111705</span>,<span class="pl-c1">3099436303</span>,<span class="pl-c1">671266974</span>,<span class="pl-c1">1594198024</span>,<span class="pl-c1">3322730930</span>,<span class="pl-c1">2970347812</span>,<span class="pl-c1">795835527</span>,<span class="pl-c1">1483230225</span>,<span class="pl-c1">3244367275</span>,<span class="pl-c1">3060149565</span>,<span class="pl-c1">1994146192</span>,<span class="pl-c1">31158534</span>,<span class="pl-c1">2563907772</span>,<span class="pl-c1">4023717930</span>,<span class="pl-c1">1907459465</span>,<span class="pl-c1">112637215</span>,<span class="pl-c1">2680153253</span>,<span class="pl-c1">3904427059</span>,<span class="pl-c1">2013776290</span>,<span class="pl-c1">251722036</span>,<span class="pl-c1">2517215374</span>,<span class="pl-c1">3775830040</span>,<span class="pl-c1">2137656763</span>,<span class="pl-c1">141376813</span>,<span class="pl-c1">2439277719</span>,<span class="pl-c1">3865271297</span>,<span class="pl-c1">1802195444</span>,<span class="pl-c1">476864866</span>,<span class="pl-c1">2238001368</span>,<span class="pl-c1">4066508878</span>,<span class="pl-c1">1812370925</span>,<span class="pl-c1">453092731</span>,<span class="pl-c1">2181625025</span>,<span class="pl-c1">4111451223</span>,<span class="pl-c1">1706088902</span>,<span class="pl-c1">314042704</span>,<span class="pl-c1">2344532202</span>,<span class="pl-c1">4240017532</span>,<span class="pl-c1">1658658271</span>,<span class="pl-c1">366619977</span>,</td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code js-file-line"><span class="pl-c1">2362670323</span>,<span class="pl-c1">4224994405</span>,<span class="pl-c1">1303535960</span>,<span class="pl-c1">984961486</span>,<span class="pl-c1">2747007092</span>,<span class="pl-c1">3569037538</span>,<span class="pl-c1">1256170817</span>,<span class="pl-c1">1037604311</span>,<span class="pl-c1">2765210733</span>,<span class="pl-c1">3554079995</span>,<span class="pl-c1">1131014506</span>,<span class="pl-c1">879679996</span>,<span class="pl-c1">2909243462</span>,<span class="pl-c1">3663771856</span>,<span class="pl-c1">1141124467</span>,<span class="pl-c1">855842277</span>,<span class="pl-c1">2852801631</span>,<span class="pl-c1">3708648649</span>,<span class="pl-c1">1342533948</span>,<span class="pl-c1">654459306</span>,<span class="pl-c1">3188396048</span>,<span class="pl-c1">3373015174</span>,<span class="pl-c1">1466479909</span>,<span class="pl-c1">544179635</span>,<span class="pl-c1">3110523913</span>,<span class="pl-c1">3462522015</span>,<span class="pl-c1">1591671054</span>,<span class="pl-c1">702138776</span>,<span class="pl-c1">2966460450</span>,<span class="pl-c1">3352799412</span>,<span class="pl-c1">1504918807</span>,<span class="pl-c1">783551873</span>,<span class="pl-c1">3082640443</span>,<span class="pl-c1">3233442989</span>,<span class="pl-c1">3988292384</span>,<span class="pl-c1">2596254646</span>,<span class="pl-c1">62317068</span>,<span class="pl-c1">1957810842</span>,<span class="pl-c1">3939845945</span>,<span class="pl-c1">2647816111</span>,<span class="pl-c1">81470997</span>,<span class="pl-c1">1943803523</span>,<span class="pl-c1">3814918930</span>,<span class="pl-c1">2489596804</span>,<span class="pl-c1">225274430</span>,<span class="pl-c1">2053790376</span>,<span class="pl-c1">3826175755</span>,</td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code js-file-line"><span class="pl-c1">2466906013</span>,<span class="pl-c1">167816743</span>,<span class="pl-c1">2097651377</span>,<span class="pl-c1">4027552580</span>,<span class="pl-c1">2265490386</span>,<span class="pl-c1">503444072</span>,<span class="pl-c1">1762050814</span>,<span class="pl-c1">4150417245</span>,<span class="pl-c1">2154129355</span>,<span class="pl-c1">426522225</span>,<span class="pl-c1">1852507879</span>,<span class="pl-c1">4275313526</span>,<span class="pl-c1">2312317920</span>,<span class="pl-c1">282753626</span>,<span class="pl-c1">1742555852</span>,<span class="pl-c1">4189708143</span>,<span class="pl-c1">2394877945</span>,<span class="pl-c1">397917763</span>,<span class="pl-c1">1622183637</span>,<span class="pl-c1">3604390888</span>,<span class="pl-c1">2714866558</span>,<span class="pl-c1">953729732</span>,<span class="pl-c1">1340076626</span>,<span class="pl-c1">3518719985</span>,<span class="pl-c1">2797360999</span>,<span class="pl-c1">1068828381</span>,<span class="pl-c1">1219638859</span>,<span class="pl-c1">3624741850</span>,<span class="pl-c1">2936675148</span>,<span class="pl-c1">906185462</span>,<span class="pl-c1">1090812512</span>,<span class="pl-c1">3747672003</span>,<span class="pl-c1">2825379669</span>,<span class="pl-c1">829329135</span>,<span class="pl-c1">1181335161</span>,<span class="pl-c1">3412177804</span>,<span class="pl-c1">3160834842</span>,<span class="pl-c1">628085408</span>,<span class="pl-c1">1382605366</span>,<span class="pl-c1">3423369109</span>,<span class="pl-c1">3138078467</span>,<span class="pl-c1">570562233</span>,<span class="pl-c1">1426400815</span>,<span class="pl-c1">3317316542</span>,<span class="pl-c1">2998733608</span>,<span class="pl-c1">733239954</span>,<span class="pl-c1">1555261956</span>,</td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code js-file-line"><span class="pl-c1">3268935591</span>,<span class="pl-c1">3050360625</span>,<span class="pl-c1">752459403</span>,<span class="pl-c1">1541320221</span>,<span class="pl-c1">2607071920</span>,<span class="pl-c1">3965973030</span>,<span class="pl-c1">1969922972</span>,<span class="pl-c1">40735498</span>,<span class="pl-c1">2617837225</span>,<span class="pl-c1">3943577151</span>,<span class="pl-c1">1913087877</span>,<span class="pl-c1">83908371</span>,<span class="pl-c1">2512341634</span>,<span class="pl-c1">3803740692</span>,<span class="pl-c1">2075208622</span>,<span class="pl-c1">213261112</span>,<span class="pl-c1">2463272603</span>,<span class="pl-c1">3855990285</span>,<span class="pl-c1">2094854071</span>,<span class="pl-c1">198958881</span>,<span class="pl-c1">2262029012</span>,<span class="pl-c1">4057260610</span>,<span class="pl-c1">1759359992</span>,<span class="pl-c1">534414190</span>,<span class="pl-c1">2176718541</span>,<span class="pl-c1">4139329115</span>,<span class="pl-c1">1873836001</span>,<span class="pl-c1">414664567</span>,<span class="pl-c1">2282248934</span>,<span class="pl-c1">4279200368</span>,<span class="pl-c1">1711684554</span>,<span class="pl-c1">285281116</span>,<span class="pl-c1">2405801727</span>,<span class="pl-c1">4167216745</span>,<span class="pl-c1">1634467795</span>,<span class="pl-c1">376229701</span>,<span class="pl-c1">2685067896</span>,<span class="pl-c1">3608007406</span>,<span class="pl-c1">1308918612</span>,<span class="pl-c1">956543938</span>,<span class="pl-c1">2808555105</span>,<span class="pl-c1">3495958263</span>,<span class="pl-c1">1231636301</span>,<span class="pl-c1">1047427035</span>,<span class="pl-c1">2932959818</span>,<span class="pl-c1">3654703836</span>,<span class="pl-c1">1088359270</span>,</td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code js-file-line"><span class="pl-c1">936918E3</span>,<span class="pl-c1">2847714899</span>,<span class="pl-c1">3736837829</span>,<span class="pl-c1">1202900863</span>,<span class="pl-c1">817233897</span>,<span class="pl-c1">3183342108</span>,<span class="pl-c1">3401237130</span>,<span class="pl-c1">1404277552</span>,<span class="pl-c1">615818150</span>,<span class="pl-c1">3134207493</span>,<span class="pl-c1">3453421203</span>,<span class="pl-c1">1423857449</span>,<span class="pl-c1">601450431</span>,<span class="pl-c1">3009837614</span>,<span class="pl-c1">3294710456</span>,<span class="pl-c1">1567103746</span>,<span class="pl-c1">711928724</span>,<span class="pl-c1">3020668471</span>,<span class="pl-c1">3272380065</span>,<span class="pl-c1">1510334235</span>,<span class="pl-c1">755167117</span>],S<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(ga)<span class="pl-k">:</span>ga;<span class="pl-st">function</span> <span class="pl-en">ha</span>(){};<span class="pl-st">function</span> <span class="pl-en">ia</span>(<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.buffer<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint16Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">2</span><span class="pl-k">*</span>b);<span class="pl-v">this</span>.<span class="pl-sc">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-s3">ia</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getParent</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-c1">2</span><span class="pl-k">*</span>((b<span class="pl-k">-</span><span class="pl-c1">2</span>)/<span class="pl-c1">4</span>|<span class="pl-c1">0</span>)};<span class="pl-s3">ia</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">push</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.buffer,f;c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">length</span>;e[<span class="pl-v">this</span>.<span class="pl-sc">length</span><span class="pl-k">++</span>]<span class="pl-k">=</span>a;<span class="pl-k">for</span>(e[<span class="pl-v">this</span>.<span class="pl-sc">length</span><span class="pl-k">++</span>]<span class="pl-k">=</span>b;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>c;)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.getParent(c),e[c]<span class="pl-k">&gt;</span>e[d])f<span class="pl-k">=</span>e[c],e[c]<span class="pl-k">=</span>e[d],e[d]<span class="pl-k">=</span>f,f<span class="pl-k">=</span>e[c<span class="pl-k">+</span><span class="pl-c1">1</span>],e[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>e[d<span class="pl-k">+</span><span class="pl-c1">1</span>],e[d<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>f,c<span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">break</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">length</span>};</td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code js-file-line">ia.prototype.pop=function(){var b,a,c=this.buffer,d,e,f;a=c[0];b=c[1];this.length-=2;c[0]=c[this.length];c[1]=c[this.length+1];for(f=0;;){e=2*f+2;if(e&gt;=this.length)break;e+2&lt;this.length&amp;&amp;c[e+2]&gt;c[e]&amp;&amp;(e+=2);if(c[e]&gt;c[f])d=c[f],c[f]=c[e],c[e]=d,d=c[f+1],c[f+1]=c[e+1],c[e+1]=d;else break;f=e}return{index:b,value:a,length:this.length}};function ja(b){var a=b.length,c=0,d=Number.POSITIVE_INFINITY,e,f,g,k,h,l,s,p,m,n;for(p=0;p&lt;a;++p)b[p]&gt;c&amp;&amp;(c=b[p]),b[p]&lt;d&amp;&amp;(d=b[p]);e=1&lt;&lt;c;f=new (A?Uint32Array:Array)(e);g=1;k=0;for(h=2;g&lt;=c;){for(p=0;p&lt;a;++p)if(b[p]===g){l=0;s=k;for(m=0;m&lt;g;++m)l=l&lt;&lt;1|s&amp;1,s&gt;&gt;=1;n=g&lt;&lt;16|p;for(m=l;m&lt;e;m+=h)f[m]=n;++k}++g;k&lt;&lt;=1;h&lt;&lt;=1}return[f,c,d]};function ma(b,a){this.k=na;this.F=0;this.input=A&amp;&amp;b instanceof Array?new Uint8Array(b):b;this.b=0;a&amp;&amp;(a.lazy&amp;&amp;(this.F=a.lazy),&quot;number&quot;===typeof a.compressionType&amp;&amp;(this.k=a.compressionType),a.outputBuffer&amp;&amp;(this.a=A&amp;&amp;a.outputBuffer instanceof Array?new Uint8Array(a.outputBuffer):a.outputBuffer),&quot;number&quot;===typeof a.outputIndex&amp;&amp;(this.b=a.outputIndex));this.a||(this.a=new (A?Uint8Array:Array)(32768))}var na=2,oa={NONE:0,M:1,t:na,Y:3},pa=[],T;</td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code js-file-line"><span class="pl-k">for</span>(T<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">288</span><span class="pl-k">&gt;</span>T;T<span class="pl-k">++</span>)<span class="pl-k">switch</span>(v){<span class="pl-k">case</span> <span class="pl-c1">143</span><span class="pl-k">&gt;=</span>T<span class="pl-k">:</span>pa.<span class="pl-s3">push</span>([T<span class="pl-k">+</span><span class="pl-c1">48</span>,<span class="pl-c1">8</span>]);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">255</span><span class="pl-k">&gt;=</span>T<span class="pl-k">:</span>pa.<span class="pl-s3">push</span>([T<span class="pl-k">-</span><span class="pl-c1">144</span><span class="pl-k">+</span><span class="pl-c1">400</span>,<span class="pl-c1">9</span>]);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">279</span><span class="pl-k">&gt;=</span>T<span class="pl-k">:</span>pa.<span class="pl-s3">push</span>([T<span class="pl-k">-</span><span class="pl-c1">256</span><span class="pl-k">+</span><span class="pl-c1">0</span>,<span class="pl-c1">7</span>]);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">287</span><span class="pl-k">&gt;=</span>T<span class="pl-k">:</span>pa.<span class="pl-s3">push</span>([T<span class="pl-k">-</span><span class="pl-c1">280</span><span class="pl-k">+</span><span class="pl-c1">192</span>,<span class="pl-c1">8</span>]);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid literal: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>T)}</td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code js-file-line"><span class="pl-s3">ma</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b,a,c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>;<span class="pl-k">switch</span>(<span class="pl-v">this</span>.k){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;c<span class="pl-k">&lt;</span>d;){a<span class="pl-k">=</span>A<span class="pl-k">?</span>e.subarray(c,c<span class="pl-k">+</span><span class="pl-c1">65535</span>)<span class="pl-k">:</span>e.<span class="pl-s3">slice</span>(c,c<span class="pl-k">+</span><span class="pl-c1">65535</span>);c<span class="pl-k">+=</span>a.<span class="pl-sc">length</span>;<span class="pl-s">var</span> f<span class="pl-k">=</span>a,g<span class="pl-k">=</span>c<span class="pl-k">===</span>d,k<span class="pl-k">=</span>t,h<span class="pl-k">=</span>t,l<span class="pl-k">=</span>t,s<span class="pl-k">=</span>t,p<span class="pl-k">=</span>t,m<span class="pl-k">=</span><span class="pl-v">this</span>.a,n<span class="pl-k">=</span><span class="pl-v">this</span>.b;<span class="pl-k">if</span>(A){<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-v">this</span>.a.buffer);m.<span class="pl-sc">length</span><span class="pl-k">&lt;=</span>n<span class="pl-k">+</span>f.<span class="pl-sc">length</span><span class="pl-k">+</span><span class="pl-c1">5</span>;)m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(m.<span class="pl-sc">length</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>);m.set(<span class="pl-v">this</span>.a)}k<span class="pl-k">=</span>g<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>k|<span class="pl-c1">0</span>;h<span class="pl-k">=</span>f.<span class="pl-sc">length</span>;l<span class="pl-k">=~</span>h<span class="pl-k">+</span><span class="pl-c1">65536</span><span class="pl-k">&amp;</span><span class="pl-c1">65535</span>;m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>h<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>h<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>l<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;<span class="pl-k">if</span>(A)m.set(f,n),n<span class="pl-k">+=</span>f.<span class="pl-sc">length</span>,m<span class="pl-k">=</span>m.subarray(<span class="pl-c1">0</span>,n);<span class="pl-k">else</span>{s<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(p<span class="pl-k">=</span>f.<span class="pl-sc">length</span>;s<span class="pl-k">&lt;</span>p;<span class="pl-k">++</span>s)m[n<span class="pl-k">++</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code js-file-line">f[s];m.<span class="pl-sc">length</span><span class="pl-k">=</span>n}<span class="pl-v">this</span>.b<span class="pl-k">=</span>n;<span class="pl-v">this</span>.a<span class="pl-k">=</span>m}<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-s">var</span> r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">E</span>(A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-v">this</span>.a.buffer)<span class="pl-k">:</span><span class="pl-v">this</span>.a,<span class="pl-v">this</span>.b);r.d(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,v);r.d(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,v);<span class="pl-s">var</span> u<span class="pl-k">=</span>qa(<span class="pl-v">this</span>,e),x,O,y;x<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(O<span class="pl-k">=</span>u.<span class="pl-sc">length</span>;x<span class="pl-k">&lt;</span>O;x<span class="pl-k">++</span>)<span class="pl-k">if</span>(y<span class="pl-k">=</span>u[x],E.<span class="pl-sc">prototype</span>.d.<span class="pl-s3">apply</span>(r,pa[y]),<span class="pl-c1">256</span><span class="pl-k">&lt;</span>y)r.d(u[<span class="pl-k">++</span>x],u[<span class="pl-k">++</span>x],v),r.d(u[<span class="pl-k">++</span>x],<span class="pl-c1">5</span>),r.d(u[<span class="pl-k">++</span>x],u[<span class="pl-k">++</span>x],v);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">256</span><span class="pl-k">===</span>y)<span class="pl-k">break</span>;<span class="pl-v">this</span>.a<span class="pl-k">=</span>r.finish();<span class="pl-v">this</span>.b<span class="pl-k">=</span><span class="pl-v">this</span>.a.<span class="pl-sc">length</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> na<span class="pl-k">:</span><span class="pl-s">var</span> D<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">E</span>(A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-v">this</span>.a.buffer)<span class="pl-k">:</span><span class="pl-v">this</span>.a,<span class="pl-v">this</span>.b),Ea,P,U,V,W,qb<span class="pl-k">=</span>[<span class="pl-c1">16</span>,<span class="pl-c1">17</span>,<span class="pl-c1">18</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">7</span>,<span class="pl-c1">9</span>,<span class="pl-c1">6</span>,<span class="pl-c1">10</span>,<span class="pl-c1">5</span>,<span class="pl-c1">11</span>,<span class="pl-c1">4</span>,<span class="pl-c1">12</span>,<span class="pl-c1">3</span>,<span class="pl-c1">13</span>,<span class="pl-c1">2</span>,<span class="pl-c1">14</span>,<span class="pl-c1">1</span>,<span class="pl-c1">15</span>],ca,Fa,da,Ga,ka,sa<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">19</span>),</td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code js-file-line">Ha,X,la,B,Ia;Ea<span class="pl-k">=</span>na;D.d(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,v);D.d(Ea,<span class="pl-c1">2</span>,v);P<span class="pl-k">=</span>qa(<span class="pl-v">this</span>,e);ca<span class="pl-k">=</span>ra(<span class="pl-v">this</span>.V,<span class="pl-c1">15</span>);Fa<span class="pl-k">=</span>ta(ca);da<span class="pl-k">=</span>ra(<span class="pl-v">this</span>.U,<span class="pl-c1">7</span>);Ga<span class="pl-k">=</span>ta(da);<span class="pl-k">for</span>(U<span class="pl-k">=</span><span class="pl-c1">286</span>;<span class="pl-c1">257</span><span class="pl-k">&lt;</span>U<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>ca[U<span class="pl-k">-</span><span class="pl-c1">1</span>];U<span class="pl-k">--</span>);<span class="pl-k">for</span>(V<span class="pl-k">=</span><span class="pl-c1">30</span>;<span class="pl-c1">1</span><span class="pl-k">&lt;</span>V<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>da[V<span class="pl-k">-</span><span class="pl-c1">1</span>];V<span class="pl-k">--</span>);<span class="pl-s">var</span> Ja<span class="pl-k">=</span>U,Ka<span class="pl-k">=</span>V,I<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint32Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(Ja<span class="pl-k">+</span>Ka),w,K,z,ea,H<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint32Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">316</span>),F,C,L<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">19</span>);<span class="pl-k">for</span>(w<span class="pl-k">=</span>K<span class="pl-k">=</span><span class="pl-c1">0</span>;w<span class="pl-k">&lt;</span>Ja;w<span class="pl-k">++</span>)I[K<span class="pl-k">++</span>]<span class="pl-k">=</span>ca[w];<span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-c1">0</span>;w<span class="pl-k">&lt;</span>Ka;w<span class="pl-k">++</span>)I[K<span class="pl-k">++</span>]<span class="pl-k">=</span>da[w];<span class="pl-k">if</span>(<span class="pl-k">!</span>A){w<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(ea<span class="pl-k">=</span>L.<span class="pl-sc">length</span>;w<span class="pl-k">&lt;</span>ea;<span class="pl-k">++</span>w)L[w]<span class="pl-k">=</span><span class="pl-c1">0</span>}w<span class="pl-k">=</span>F<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(ea<span class="pl-k">=</span>I.<span class="pl-sc">length</span>;w<span class="pl-k">&lt;</span>ea;w<span class="pl-k">+=</span>K){<span class="pl-k">for</span>(K<span class="pl-k">=</span><span class="pl-c1">1</span>;w<span class="pl-k">+</span>K<span class="pl-k">&lt;</span>ea<span class="pl-k">&amp;&amp;</span>I[w<span class="pl-k">+</span>K]<span class="pl-k">===</span>I[w];<span class="pl-k">++</span>K);z<span class="pl-k">=</span>K;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>I[w])<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">&gt;</span>z)<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code js-file-line">z<span class="pl-k">--</span>;)H[F<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,L[<span class="pl-c1">0</span>]<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>z;)C<span class="pl-k">=</span><span class="pl-c1">138</span><span class="pl-k">&gt;</span>z<span class="pl-k">?</span>z<span class="pl-k">:</span><span class="pl-c1">138</span>,C<span class="pl-k">&gt;</span>z<span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>C<span class="pl-k">&lt;</span>z<span class="pl-k">&amp;&amp;</span>(C<span class="pl-k">=</span>z<span class="pl-k">-</span><span class="pl-c1">3</span>),<span class="pl-c1">10</span><span class="pl-k">&gt;=</span>C<span class="pl-k">?</span>(H[F<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">17</span>,H[F<span class="pl-k">++</span>]<span class="pl-k">=</span>C<span class="pl-k">-</span><span class="pl-c1">3</span>,L[<span class="pl-c1">17</span>]<span class="pl-k">++</span>)<span class="pl-k">:</span>(H[F<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">18</span>,H[F<span class="pl-k">++</span>]<span class="pl-k">=</span>C<span class="pl-k">-</span><span class="pl-c1">11</span>,L[<span class="pl-c1">18</span>]<span class="pl-k">++</span>),z<span class="pl-k">-=</span>C;<span class="pl-k">else</span> <span class="pl-k">if</span>(H[F<span class="pl-k">++</span>]<span class="pl-k">=</span>I[w],L[I[w]]<span class="pl-k">++</span>,z<span class="pl-k">--</span>,<span class="pl-c1">3</span><span class="pl-k">&gt;</span>z)<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>z<span class="pl-k">--</span>;)H[F<span class="pl-k">++</span>]<span class="pl-k">=</span>I[w],L[I[w]]<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>z;)C<span class="pl-k">=</span><span class="pl-c1">6</span><span class="pl-k">&gt;</span>z<span class="pl-k">?</span>z<span class="pl-k">:</span><span class="pl-c1">6</span>,C<span class="pl-k">&gt;</span>z<span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>C<span class="pl-k">&lt;</span>z<span class="pl-k">&amp;&amp;</span>(C<span class="pl-k">=</span>z<span class="pl-k">-</span><span class="pl-c1">3</span>),H[F<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">16</span>,H[F<span class="pl-k">++</span>]<span class="pl-k">=</span>C<span class="pl-k">-</span><span class="pl-c1">3</span>,L[<span class="pl-c1">16</span>]<span class="pl-k">++</span>,z<span class="pl-k">-=</span>C}b<span class="pl-k">=</span>A<span class="pl-k">?</span>H.subarray(<span class="pl-c1">0</span>,F)<span class="pl-k">:</span>H.<span class="pl-s3">slice</span>(<span class="pl-c1">0</span>,F);ka<span class="pl-k">=</span>ra(L,<span class="pl-c1">7</span>);<span class="pl-k">for</span>(B<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">19</span><span class="pl-k">&gt;</span>B;B<span class="pl-k">++</span>)sa[B]<span class="pl-k">=</span>ka[qb[B]];<span class="pl-k">for</span>(W<span class="pl-k">=</span><span class="pl-c1">19</span>;<span class="pl-c1">4</span><span class="pl-k">&lt;</span>W<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>sa[W<span class="pl-k">-</span><span class="pl-c1">1</span>];W<span class="pl-k">--</span>);Ha<span class="pl-k">=</span>ta(ka);D.d(U<span class="pl-k">-</span><span class="pl-c1">257</span>,<span class="pl-c1">5</span>,v);D.d(V<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">5</span>,v);D.d(W<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">4</span>,v);<span class="pl-k">for</span>(B<span class="pl-k">=</span><span class="pl-c1">0</span>;B<span class="pl-k">&lt;</span>W;B<span class="pl-k">++</span>)D.d(sa[B],<span class="pl-c1">3</span>,v);B<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(Ia<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;B<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code js-file-line">Ia;B<span class="pl-k">++</span>)<span class="pl-k">if</span>(X<span class="pl-k">=</span>b[B],D.d(Ha[X],ka[X],v),<span class="pl-c1">16</span><span class="pl-k">&lt;=</span>X){B<span class="pl-k">++</span>;<span class="pl-k">switch</span>(X){<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>la<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>la<span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span>la<span class="pl-k">=</span><span class="pl-c1">7</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid code: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>X)}D.d(b[B],la,v)}<span class="pl-s">var</span> La<span class="pl-k">=</span>[Fa,ca],Ma<span class="pl-k">=</span>[Ga,da],M,Na,fa,va,Oa,Pa,Qa,Ra;Oa<span class="pl-k">=</span>La[<span class="pl-c1">0</span>];Pa<span class="pl-k">=</span>La[<span class="pl-c1">1</span>];Qa<span class="pl-k">=</span>Ma[<span class="pl-c1">0</span>];Ra<span class="pl-k">=</span>Ma[<span class="pl-c1">1</span>];M<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(Na<span class="pl-k">=</span>P.<span class="pl-sc">length</span>;M<span class="pl-k">&lt;</span>Na;<span class="pl-k">++</span>M)<span class="pl-k">if</span>(fa<span class="pl-k">=</span>P[M],D.d(Oa[fa],Pa[fa],v),<span class="pl-c1">256</span><span class="pl-k">&lt;</span>fa)D.d(P[<span class="pl-k">++</span>M],P[<span class="pl-k">++</span>M],v),va<span class="pl-k">=</span>P[<span class="pl-k">++</span>M],D.d(Qa[va],Ra[va],v),D.d(P[<span class="pl-k">++</span>M],P[<span class="pl-k">++</span>M],v);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">256</span><span class="pl-k">===</span>fa)<span class="pl-k">break</span>;<span class="pl-v">this</span>.a<span class="pl-k">=</span>D.finish();<span class="pl-v">this</span>.b<span class="pl-k">=</span><span class="pl-v">this</span>.a.<span class="pl-sc">length</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid compression type<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">return</span> <span class="pl-v">this</span>.a};</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">ua</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">length</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.O<span class="pl-k">=</span>a}</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code js-file-line"><span class="pl-s">var</span> <span class="pl-en">wa</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">b</span>(<span class="pl-vpf">a</span>){<span class="pl-k">switch</span>(v){<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">257</span>,a<span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">258</span>,a<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">259</span>,a<span class="pl-k">-</span><span class="pl-c1">5</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">260</span>,a<span class="pl-k">-</span><span class="pl-c1">6</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">261</span>,a<span class="pl-k">-</span><span class="pl-c1">7</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">262</span>,a<span class="pl-k">-</span><span class="pl-c1">8</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">263</span>,a<span class="pl-k">-</span><span class="pl-c1">9</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">264</span>,a<span class="pl-k">-</span><span class="pl-c1">10</span>,<span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">265</span>,a<span class="pl-k">-</span><span class="pl-c1">11</span>,<span class="pl-c1">1</span>];<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">266</span>,a<span class="pl-k">-</span><span class="pl-c1">13</span>,<span class="pl-c1">1</span>];<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">267</span>,a<span class="pl-k">-</span><span class="pl-c1">15</span>,<span class="pl-c1">1</span>];<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">268</span>,a<span class="pl-k">-</span><span class="pl-c1">17</span>,<span class="pl-c1">1</span>];<span class="pl-k">case</span> <span class="pl-c1">22</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">269</span>,a<span class="pl-k">-</span><span class="pl-c1">19</span>,<span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-c1">26</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">270</span>,a<span class="pl-k">-</span><span class="pl-c1">23</span>,<span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-c1">30</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">271</span>,a<span class="pl-k">-</span><span class="pl-c1">27</span>,<span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-c1">34</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">272</span>,</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code js-file-line">a<span class="pl-k">-</span><span class="pl-c1">31</span>,<span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-c1">42</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">273</span>,a<span class="pl-k">-</span><span class="pl-c1">35</span>,<span class="pl-c1">3</span>];<span class="pl-k">case</span> <span class="pl-c1">50</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">274</span>,a<span class="pl-k">-</span><span class="pl-c1">43</span>,<span class="pl-c1">3</span>];<span class="pl-k">case</span> <span class="pl-c1">58</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">275</span>,a<span class="pl-k">-</span><span class="pl-c1">51</span>,<span class="pl-c1">3</span>];<span class="pl-k">case</span> <span class="pl-c1">66</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">276</span>,a<span class="pl-k">-</span><span class="pl-c1">59</span>,<span class="pl-c1">3</span>];<span class="pl-k">case</span> <span class="pl-c1">82</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">277</span>,a<span class="pl-k">-</span><span class="pl-c1">67</span>,<span class="pl-c1">4</span>];<span class="pl-k">case</span> <span class="pl-c1">98</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">278</span>,a<span class="pl-k">-</span><span class="pl-c1">83</span>,<span class="pl-c1">4</span>];<span class="pl-k">case</span> <span class="pl-c1">114</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">279</span>,a<span class="pl-k">-</span><span class="pl-c1">99</span>,<span class="pl-c1">4</span>];<span class="pl-k">case</span> <span class="pl-c1">130</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">280</span>,a<span class="pl-k">-</span><span class="pl-c1">115</span>,<span class="pl-c1">4</span>];<span class="pl-k">case</span> <span class="pl-c1">162</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">281</span>,a<span class="pl-k">-</span><span class="pl-c1">131</span>,<span class="pl-c1">5</span>];<span class="pl-k">case</span> <span class="pl-c1">194</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">282</span>,a<span class="pl-k">-</span><span class="pl-c1">163</span>,<span class="pl-c1">5</span>];<span class="pl-k">case</span> <span class="pl-c1">226</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">283</span>,a<span class="pl-k">-</span><span class="pl-c1">195</span>,<span class="pl-c1">5</span>];<span class="pl-k">case</span> <span class="pl-c1">257</span><span class="pl-k">&gt;=</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">284</span>,a<span class="pl-k">-</span><span class="pl-c1">227</span>,<span class="pl-c1">5</span>];<span class="pl-k">case</span> <span class="pl-c1">258</span><span class="pl-k">===</span>a<span class="pl-k">:</span><span class="pl-k">return</span>[<span class="pl-c1">285</span>,a<span class="pl-k">-</span><span class="pl-c1">258</span>,<span class="pl-c1">0</span>];<span class="pl-k">default</span><span class="pl-k">:</span>q(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid length: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a)}}<span class="pl-s">var</span> a<span class="pl-k">=</span>[],c,d;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-c1">258</span><span class="pl-k">&gt;=</span>c;c<span class="pl-k">++</span>)d<span class="pl-k">=</span>b(c),a[c]<span class="pl-k">=</span>d[<span class="pl-c1">2</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>|d[<span class="pl-c1">1</span>]<span class="pl-k">&lt;&lt;</span></td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code js-file-line"><span class="pl-c1">16</span>|d[<span class="pl-c1">0</span>];<span class="pl-k">return</span> a}(),xa<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(wa)<span class="pl-k">:</span>wa;</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">qa</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">c</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>a.O,d<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>,e;e<span class="pl-k">=</span>xa[a.<span class="pl-sc">length</span>];d[f<span class="pl-k">++</span>]<span class="pl-k">=</span>e<span class="pl-k">&amp;</span><span class="pl-c1">65535</span>;d[f<span class="pl-k">++</span>]<span class="pl-k">=</span>e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;d[f<span class="pl-k">++</span>]<span class="pl-k">=</span>e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span>;<span class="pl-s">var</span> g;<span class="pl-k">switch</span>(v){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">===</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">0</span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">===</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-c1">0</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">===</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">2</span>,b<span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-c1">0</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">===</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">3</span>,b<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">0</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">4</span>,b<span class="pl-k">-</span><span class="pl-c1">5</span>,<span class="pl-c1">1</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">5</span>,b<span class="pl-k">-</span><span class="pl-c1">7</span>,<span class="pl-c1">1</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">6</span>,b<span class="pl-k">-</span><span class="pl-c1">9</span>,<span class="pl-c1">2</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">7</span>,b<span class="pl-k">-</span><span class="pl-c1">13</span>,<span class="pl-c1">2</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">24</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">8</span>,b<span class="pl-k">-</span><span class="pl-c1">17</span>,<span class="pl-c1">3</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">32</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">9</span>,b<span class="pl-k">-</span><span class="pl-c1">25</span>,<span class="pl-c1">3</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">48</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">10</span>,b<span class="pl-k">-</span><span class="pl-c1">33</span>,<span class="pl-c1">4</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">64</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">11</span>,b<span class="pl-k">-</span><span class="pl-c1">49</span>,<span class="pl-c1">4</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">96</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">12</span>,b<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code js-file-line"><span class="pl-c1">65</span>,<span class="pl-c1">5</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">128</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">13</span>,b<span class="pl-k">-</span><span class="pl-c1">97</span>,<span class="pl-c1">5</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">192</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">14</span>,b<span class="pl-k">-</span><span class="pl-c1">129</span>,<span class="pl-c1">6</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">256</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">15</span>,b<span class="pl-k">-</span><span class="pl-c1">193</span>,<span class="pl-c1">6</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">384</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">16</span>,b<span class="pl-k">-</span><span class="pl-c1">257</span>,<span class="pl-c1">7</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">512</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">17</span>,b<span class="pl-k">-</span><span class="pl-c1">385</span>,<span class="pl-c1">7</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">768</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">18</span>,b<span class="pl-k">-</span><span class="pl-c1">513</span>,<span class="pl-c1">8</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1024</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">19</span>,b<span class="pl-k">-</span><span class="pl-c1">769</span>,<span class="pl-c1">8</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1536</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">20</span>,b<span class="pl-k">-</span><span class="pl-c1">1025</span>,<span class="pl-c1">9</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2048</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">21</span>,b<span class="pl-k">-</span><span class="pl-c1">1537</span>,<span class="pl-c1">9</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3072</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">22</span>,b<span class="pl-k">-</span><span class="pl-c1">2049</span>,<span class="pl-c1">10</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4096</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">23</span>,b<span class="pl-k">-</span><span class="pl-c1">3073</span>,<span class="pl-c1">10</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6144</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">24</span>,b<span class="pl-k">-</span><span class="pl-c1">4097</span>,<span class="pl-c1">11</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8192</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">25</span>,b<span class="pl-k">-</span><span class="pl-c1">6145</span>,<span class="pl-c1">11</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12288</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">26</span>,b<span class="pl-k">-</span><span class="pl-c1">8193</span>,<span class="pl-c1">12</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16384</span><span class="pl-k">&gt;=</span></td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code js-file-line">b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">27</span>,b<span class="pl-k">-</span><span class="pl-c1">12289</span>,<span class="pl-c1">12</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">24576</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">28</span>,b<span class="pl-k">-</span><span class="pl-c1">16385</span>,<span class="pl-c1">13</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">32768</span><span class="pl-k">&gt;=</span>b<span class="pl-k">:</span>g<span class="pl-k">=</span>[<span class="pl-c1">29</span>,b<span class="pl-k">-</span><span class="pl-c1">24577</span>,<span class="pl-c1">13</span>];<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid distance<span class="pl-pds">&quot;</span></span>)}e<span class="pl-k">=</span>g;d[f<span class="pl-k">++</span>]<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];d[f<span class="pl-k">++</span>]<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];d[f<span class="pl-k">++</span>]<span class="pl-k">=</span>e[<span class="pl-c1">2</span>];<span class="pl-s">var</span> h,k;h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;h<span class="pl-k">&lt;</span>k;<span class="pl-k">++</span>h)m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>d[h];u[d[<span class="pl-c1">0</span>]]<span class="pl-k">++</span>;x[d[<span class="pl-c1">3</span>]]<span class="pl-k">++</span>;r<span class="pl-k">=</span>a.<span class="pl-sc">length</span><span class="pl-k">+</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>;p<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-s">var</span> d,e,f,g,k,h<span class="pl-k">=</span>{},l,s,p,m<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>a.<span class="pl-sc">length</span>)<span class="pl-k">:</span>[],n<span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-c1">0</span>,u<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint32Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">286</span>),x<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint32Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">30</span>),O<span class="pl-k">=</span>b.F,y;<span class="pl-k">if</span>(<span class="pl-k">!</span>A){<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">285</span><span class="pl-k">&gt;=</span>f;)u[f<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">29</span><span class="pl-k">&gt;=</span>f;)x[f<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}u[<span class="pl-c1">256</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;d<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>d){f<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code js-file-line"><span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">3</span>;f<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">+</span>f<span class="pl-k">!==</span>e;<span class="pl-k">++</span>f)k<span class="pl-k">=</span>k<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>|a[d<span class="pl-k">+</span>f];h[k]<span class="pl-k">===</span>t<span class="pl-k">&amp;&amp;</span>(h[k]<span class="pl-k">=</span>[]);l<span class="pl-k">=</span>h[k];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>r<span class="pl-k">--</span>)){<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>l.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">32768</span><span class="pl-k">&lt;</span>d<span class="pl-k">-</span>l[<span class="pl-c1">0</span>];)l.<span class="pl-s3">shift</span>();<span class="pl-k">if</span>(d<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">&gt;=</span>e){p<span class="pl-k">&amp;&amp;</span>c(p,<span class="pl-k">-</span><span class="pl-c1">1</span>);f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>e<span class="pl-k">-</span>d;f<span class="pl-k">&lt;</span>g;<span class="pl-k">++</span>f)y<span class="pl-k">=</span>a[d<span class="pl-k">+</span>f],m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>y,<span class="pl-k">++</span>u[y];<span class="pl-k">break</span>}<span class="pl-c1">0</span><span class="pl-k">&lt;</span>l.<span class="pl-sc">length</span><span class="pl-k">?</span>(s<span class="pl-k">=</span>ya(a,d,l),p<span class="pl-k">?</span>p.<span class="pl-sc">length</span><span class="pl-k">&lt;</span>s.<span class="pl-sc">length</span><span class="pl-k">?</span>(y<span class="pl-k">=</span>a[d<span class="pl-k">-</span><span class="pl-c1">1</span>],m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>y,<span class="pl-k">++</span>u[y],c(s,<span class="pl-c1">0</span>))<span class="pl-k">:</span>c(p,<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>s.<span class="pl-sc">length</span><span class="pl-k">&lt;</span>O<span class="pl-k">?</span>p<span class="pl-k">=</span>s<span class="pl-k">:</span>c(s,<span class="pl-c1">0</span>))<span class="pl-k">:</span>p<span class="pl-k">?</span>c(p,<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(y<span class="pl-k">=</span>a[d],m[n<span class="pl-k">++</span>]<span class="pl-k">=</span>y,<span class="pl-k">++</span>u[y])}l.<span class="pl-s3">push</span>(d)}m[n<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">256</span>;u[<span class="pl-c1">256</span>]<span class="pl-k">++</span>;b.V<span class="pl-k">=</span>u;b.U<span class="pl-k">=</span>x;<span class="pl-k">return</span> A<span class="pl-k">?</span>m.subarray(<span class="pl-c1">0</span>,n)<span class="pl-k">:</span>m}</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">ya</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g,k,h,l,s<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;k<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;a<span class="pl-k">:</span><span class="pl-k">for</span>(;k<span class="pl-k">&lt;</span>l;k<span class="pl-k">++</span>){d<span class="pl-k">=</span>c[l<span class="pl-k">-</span>k<span class="pl-k">-</span><span class="pl-c1">1</span>];g<span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">&lt;</span>f){<span class="pl-k">for</span>(h<span class="pl-k">=</span>f;<span class="pl-c1">3</span><span class="pl-k">&lt;</span>h;h<span class="pl-k">--</span>)<span class="pl-k">if</span>(b[d<span class="pl-k">+</span>h<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span>b[a<span class="pl-k">+</span>h<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">continue</span> a;g<span class="pl-k">=</span>f}<span class="pl-k">for</span>(;<span class="pl-c1">258</span><span class="pl-k">&gt;</span>g<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">+</span>g<span class="pl-k">&lt;</span>s<span class="pl-k">&amp;&amp;</span>b[d<span class="pl-k">+</span>g]<span class="pl-k">===</span>b[a<span class="pl-k">+</span>g];)<span class="pl-k">++</span>g;g<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d,f<span class="pl-k">=</span>g);<span class="pl-k">if</span>(<span class="pl-c1">258</span><span class="pl-k">===</span>g)<span class="pl-k">break</span>}<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ua</span>(f,a<span class="pl-k">-</span>e)}</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">ra</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ia</span>(<span class="pl-c1">572</span>),e<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(c),f,g,k,h,l;<span class="pl-k">if</span>(<span class="pl-k">!</span>A)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c;h<span class="pl-k">++</span>)e[h]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>h)<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b[h]<span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">push</span>(h,b[h]);f<span class="pl-k">=</span><span class="pl-s3">Array</span>(d.<span class="pl-sc">length</span>/<span class="pl-c1">2</span>);g<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint32Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(d.<span class="pl-sc">length</span>/<span class="pl-c1">2</span>);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>f.<span class="pl-sc">length</span>)<span class="pl-k">return</span> e[d.<span class="pl-s3">pop</span>().<span class="pl-sc">index</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>,e;h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span>d.<span class="pl-sc">length</span>/<span class="pl-c1">2</span>;h<span class="pl-k">&lt;</span>l;<span class="pl-k">++</span>h)f[h]<span class="pl-k">=</span>d.<span class="pl-s3">pop</span>(),g[h]<span class="pl-k">=</span>f[h].<span class="pl-sc">value</span>;k<span class="pl-k">=</span>za(g,g.<span class="pl-sc">length</span>,a);h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span>f.<span class="pl-sc">length</span>;h<span class="pl-k">&lt;</span>l;<span class="pl-k">++</span>h)e[f[h].<span class="pl-sc">index</span>]<span class="pl-k">=</span>k[h];<span class="pl-k">return</span> e}</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">za</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>h[b][l[b]];c<span class="pl-k">===</span>a<span class="pl-k">?</span>(d(b<span class="pl-k">+</span><span class="pl-c1">1</span>),d(b<span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">:--</span>g[c];<span class="pl-k">++</span>l[b]}<span class="pl-s">var</span> e<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint16Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(c),f<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(c),g<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(a),k<span class="pl-k">=</span><span class="pl-s3">Array</span>(c),h<span class="pl-k">=</span><span class="pl-s3">Array</span>(c),l<span class="pl-k">=</span><span class="pl-s3">Array</span>(c),s<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>c)<span class="pl-k">-</span>a,p<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>,m,n,r,u,x;e[c<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>a;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>n)s<span class="pl-k">&lt;</span>p<span class="pl-k">?</span>f[n]<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span>(f[n]<span class="pl-k">=</span><span class="pl-c1">1</span>,s<span class="pl-k">-=</span>p),s<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>,e[c<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">-</span>n]<span class="pl-k">=</span>(e[c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>n]/<span class="pl-c1">2</span>|<span class="pl-c1">0</span>)<span class="pl-k">+</span>a;e[<span class="pl-c1">0</span>]<span class="pl-k">=</span>f[<span class="pl-c1">0</span>];k[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-s3">Array</span>(e[<span class="pl-c1">0</span>]);h[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-s3">Array</span>(e[<span class="pl-c1">0</span>]);<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">1</span>;n<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>n)e[n]<span class="pl-k">&gt;</span><span class="pl-c1">2</span><span class="pl-k">*</span>e[n<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>f[n]<span class="pl-k">&amp;&amp;</span>(e[n]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e[n<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>f[n]),k[n]<span class="pl-k">=</span><span class="pl-s3">Array</span>(e[n]),h[n]<span class="pl-k">=</span><span class="pl-s3">Array</span>(e[n]);<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>a;<span class="pl-k">++</span>m)g[m]<span class="pl-k">=</span>c;<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>e[c<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">++</span>r)k[c<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code js-file-line"><span class="pl-c1">1</span>][r]<span class="pl-k">=</span>b[r],h[c<span class="pl-k">-</span><span class="pl-c1">1</span>][r]<span class="pl-k">=</span>r;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>m)l[m]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">1</span><span class="pl-k">===</span>f[c<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">--</span>g[<span class="pl-c1">0</span>],<span class="pl-k">++</span>l[c<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-k">for</span>(n<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">2</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>n;<span class="pl-k">--</span>n){u<span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">=</span>l[n<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>e[n];r<span class="pl-k">++</span>)u<span class="pl-k">=</span>k[n<span class="pl-k">+</span><span class="pl-c1">1</span>][x]<span class="pl-k">+</span>k[n<span class="pl-k">+</span><span class="pl-c1">1</span>][x<span class="pl-k">+</span><span class="pl-c1">1</span>],u<span class="pl-k">&gt;</span>b[m]<span class="pl-k">?</span>(k[n][r]<span class="pl-k">=</span>u,h[n][r]<span class="pl-k">=</span>a,x<span class="pl-k">+=</span><span class="pl-c1">2</span>)<span class="pl-k">:</span>(k[n][r]<span class="pl-k">=</span>b[m],h[n][r]<span class="pl-k">=</span>m,<span class="pl-k">++</span>m);l[n]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">1</span><span class="pl-k">===</span>f[n]<span class="pl-k">&amp;&amp;</span>d(n)}<span class="pl-k">return</span> g}</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">ta</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint16Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(b.<span class="pl-sc">length</span>),c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,f,g,k,h;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)c[b[f]]<span class="pl-k">=</span>(c[b[f]]|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">16</span>;f<span class="pl-k">&lt;=</span>g;f<span class="pl-k">++</span>)d[f]<span class="pl-k">=</span>e,e<span class="pl-k">+=</span>c[f]|<span class="pl-c1">0</span>,e<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>){e<span class="pl-k">=</span>d[b[f]];d[b[f]]<span class="pl-k">+=</span><span class="pl-c1">1</span>;k<span class="pl-k">=</span>a[f]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span>b[f];k<span class="pl-k">&lt;</span>h;k<span class="pl-k">++</span>)a[f]<span class="pl-k">=</span>a[f]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>|e<span class="pl-k">&amp;</span><span class="pl-c1">1</span>,e<span class="pl-k">&gt;&gt;&gt;=</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> a};<span class="pl-st">function</span> <span class="pl-en">Aa</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">input</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.b<span class="pl-k">=</span><span class="pl-v">this</span>.c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.g<span class="pl-k">=</span>{};a<span class="pl-k">&amp;&amp;</span>(a.flags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.g<span class="pl-k">=</span>a.flags),<span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> a.<span class="pl-sc">filename</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">filename</span><span class="pl-k">=</span>a.<span class="pl-sc">filename</span>),<span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> a.comment<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.w<span class="pl-k">=</span>a.comment),a.deflateOptions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.l<span class="pl-k">=</span>a.deflateOptions));<span class="pl-v">this</span>.l<span class="pl-k">||</span>(<span class="pl-v">this</span>.l<span class="pl-k">=</span>{})}</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code js-file-line"><span class="pl-s3">Aa</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b,a,c,d,e,f,g,k,h<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">32768</span>),l<span class="pl-k">=</span><span class="pl-c1">0</span>,s<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>,p<span class="pl-k">=</span><span class="pl-v">this</span>.c,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">filename</span>,n<span class="pl-k">=</span><span class="pl-v">this</span>.w;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">31</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">139</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">8</span>;b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.g.fname<span class="pl-k">&amp;&amp;</span>(b|<span class="pl-k">=</span>Ba);<span class="pl-v">this</span>.g.fcomment<span class="pl-k">&amp;&amp;</span>(b|<span class="pl-k">=</span>Ca);<span class="pl-v">this</span>.g.fhcrc<span class="pl-k">&amp;&amp;</span>(b|<span class="pl-k">=</span>Da);h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>b;a<span class="pl-k">=</span>(<span class="pl-s3">Date</span>.now<span class="pl-k">?</span><span class="pl-s3">Date</span>.now()<span class="pl-k">:+</span><span class="pl-k">new</span> <span class="pl-en">Date</span>)/<span class="pl-c1">1E3</span>|<span class="pl-c1">0</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>a<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>a<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>a<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>a<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>Sa;<span class="pl-k">if</span>(<span class="pl-v">this</span>.g.fname<span class="pl-k">!==</span>t){g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span>m.<span class="pl-sc">length</span>;g<span class="pl-k">&lt;</span>k;<span class="pl-k">++</span>g)f<span class="pl-k">=</span>m.<span class="pl-s3">charCodeAt</span>(g),<span class="pl-c1">255</span><span class="pl-k">&lt;</span>f<span class="pl-k">&amp;&amp;</span>(h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>),h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">if</span>(<span class="pl-v">this</span>.g.comment){g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span>n.<span class="pl-sc">length</span>;g<span class="pl-k">&lt;</span>k;<span class="pl-k">++</span>g)f<span class="pl-k">=</span>n.<span class="pl-s3">charCodeAt</span>(g),<span class="pl-c1">255</span><span class="pl-k">&lt;</span>f<span class="pl-k">&amp;&amp;</span>(h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>),h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-v">this</span>.g.fhcrc<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>R(h,<span class="pl-c1">0</span>,l)<span class="pl-k">&amp;</span><span class="pl-c1">65535</span>,h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>c<span class="pl-k">&amp;</span><span class="pl-c1">255</span>,h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>c<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>);<span class="pl-v">this</span>.l.outputBuffer<span class="pl-k">=</span>h;<span class="pl-v">this</span>.l.outputIndex<span class="pl-k">=</span>l;e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ma</span>(s,<span class="pl-v">this</span>.l);h<span class="pl-k">=</span>e.h();l<span class="pl-k">=</span>e.b;A<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">+</span><span class="pl-c1">8</span><span class="pl-k">&gt;</span>h.buffer.byteLength<span class="pl-k">?</span>(<span class="pl-v">this</span>.a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(l<span class="pl-k">+</span><span class="pl-c1">8</span>),<span class="pl-v">this</span>.a.set(<span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(h.buffer)),h<span class="pl-k">=</span><span class="pl-v">this</span>.a)<span class="pl-k">:</span>h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(h.buffer));d<span class="pl-k">=</span>R(s,t,t);h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>d<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;k<span class="pl-k">=</span>s.<span class="pl-sc">length</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>k<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>k<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span>k<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;h[l<span class="pl-k">++</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code js-file-line">k<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;<span class="pl-v">this</span>.c<span class="pl-k">=</span>p;A<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&lt;</span>h.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.a<span class="pl-k">=</span>h<span class="pl-k">=</span>h.subarray(<span class="pl-c1">0</span>,l));<span class="pl-k">return</span> h};<span class="pl-s">var</span> Sa<span class="pl-k">=</span><span class="pl-c1">255</span>,Da<span class="pl-k">=</span><span class="pl-c1">2</span>,Ba<span class="pl-k">=</span><span class="pl-c1">8</span>,Ca<span class="pl-k">=</span><span class="pl-c1">16</span>;<span class="pl-st">function</span> <span class="pl-en">Y</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.o<span class="pl-k">=</span>[];<span class="pl-v">this</span>.p<span class="pl-k">=</span><span class="pl-c1">32768</span>;<span class="pl-v">this</span>.e<span class="pl-k">=</span><span class="pl-v">this</span>.j<span class="pl-k">=</span><span class="pl-v">this</span>.c<span class="pl-k">=</span><span class="pl-v">this</span>.s<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-sc">input</span><span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(b)<span class="pl-k">:</span>b;<span class="pl-v">this</span>.u<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.q<span class="pl-k">=</span>Ta;<span class="pl-v">this</span>.L<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(a<span class="pl-k">||!</span>(a<span class="pl-k">=</span>{}))a.<span class="pl-sc">index</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.c<span class="pl-k">=</span>a.<span class="pl-sc">index</span>),a.bufferSize<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.p<span class="pl-k">=</span>a.bufferSize),a.bufferType<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.q<span class="pl-k">=</span>a.bufferType),a.resize<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.L<span class="pl-k">=</span>a.resize);<span class="pl-k">switch</span>(<span class="pl-v">this</span>.q){<span class="pl-k">case</span> Ua<span class="pl-k">:</span><span class="pl-v">this</span>.b<span class="pl-k">=</span><span class="pl-c1">32768</span>;<span class="pl-v">this</span>.a<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">32768</span><span class="pl-k">+</span><span class="pl-v">this</span>.p<span class="pl-k">+</span><span class="pl-c1">258</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> Ta<span class="pl-k">:</span><span class="pl-v">this</span>.b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.a<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-v">this</span>.p);<span class="pl-v">this</span>.f<span class="pl-k">=</span><span class="pl-v">this</span>.T;<span class="pl-v">this</span>.z<span class="pl-k">=</span><span class="pl-v">this</span>.P;<span class="pl-v">this</span>.r<span class="pl-k">=</span><span class="pl-v">this</span>.R;<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid inflate mode<span class="pl-pds">&quot;</span></span>))}}</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code js-file-line"><span class="pl-s">var</span> Ua<span class="pl-k">=</span><span class="pl-c1">0</span>,Ta<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code js-file-line"><span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">i</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">for</span>(;<span class="pl-k">!</span><span class="pl-v">this</span>.u;){<span class="pl-s">var</span> b<span class="pl-k">=</span>Z(<span class="pl-v">this</span>,<span class="pl-c1">3</span>);b<span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.u<span class="pl-k">=</span>v);b<span class="pl-k">&gt;&gt;&gt;=</span><span class="pl-c1">1</span>;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.c,d<span class="pl-k">=</span><span class="pl-v">this</span>.a,e<span class="pl-k">=</span><span class="pl-v">this</span>.b,f<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,g<span class="pl-k">=</span>t,k<span class="pl-k">=</span>t,h<span class="pl-k">=</span>d.<span class="pl-sc">length</span>,l<span class="pl-k">=</span>t;<span class="pl-v">this</span>.e<span class="pl-k">=</span><span class="pl-v">this</span>.j<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>f<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid uncompressed block header: LEN<span class="pl-pds">&quot;</span></span>));g<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]|a[c<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>;c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>f<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid uncompressed block header: NLEN<span class="pl-pds">&quot;</span></span>));k<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]|a[c<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>;g<span class="pl-k">===~</span>k<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid uncompressed block header: length verify<span class="pl-pds">&quot;</span></span>));c<span class="pl-k">+</span>g<span class="pl-k">&gt;</span>a.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>input buffer is broken<span class="pl-pds">&quot;</span></span>));<span class="pl-k">switch</span>(<span class="pl-v">this</span>.q){<span class="pl-k">case</span> Ua<span class="pl-k">:</span><span class="pl-k">for</span>(;e<span class="pl-k">+</span>g<span class="pl-k">&gt;</span>d.<span class="pl-sc">length</span>;){l<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code js-file-line">h<span class="pl-k">-</span>e;g<span class="pl-k">-=</span>l;<span class="pl-k">if</span>(A)d.set(a.subarray(c,c<span class="pl-k">+</span>l),e),e<span class="pl-k">+=</span>l,c<span class="pl-k">+=</span>l;<span class="pl-k">else</span> <span class="pl-k">for</span>(;l<span class="pl-k">--</span>;)d[e<span class="pl-k">++</span>]<span class="pl-k">=</span>a[c<span class="pl-k">++</span>];<span class="pl-v">this</span>.b<span class="pl-k">=</span>e;d<span class="pl-k">=</span><span class="pl-v">this</span>.f();e<span class="pl-k">=</span><span class="pl-v">this</span>.b}<span class="pl-k">break</span>;<span class="pl-k">case</span> Ta<span class="pl-k">:</span><span class="pl-k">for</span>(;e<span class="pl-k">+</span>g<span class="pl-k">&gt;</span>d.<span class="pl-sc">length</span>;)d<span class="pl-k">=</span><span class="pl-v">this</span>.f({B<span class="pl-k">:</span><span class="pl-c1">2</span>});<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid inflate mode<span class="pl-pds">&quot;</span></span>))}<span class="pl-k">if</span>(A)d.set(a.subarray(c,c<span class="pl-k">+</span>g),e),e<span class="pl-k">+=</span>g,c<span class="pl-k">+=</span>g;<span class="pl-k">else</span> <span class="pl-k">for</span>(;g<span class="pl-k">--</span>;)d[e<span class="pl-k">++</span>]<span class="pl-k">=</span>a[c<span class="pl-k">++</span>];<span class="pl-v">this</span>.c<span class="pl-k">=</span>c;<span class="pl-v">this</span>.b<span class="pl-k">=</span>e;<span class="pl-v">this</span>.a<span class="pl-k">=</span>d;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-v">this</span>.r(Va,Wa);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>Xa(<span class="pl-v">this</span>);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>unknown BTYPE: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b))}}<span class="pl-k">return</span> <span class="pl-v">this</span>.z()};</td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code js-file-line"><span class="pl-s">var</span> Ya<span class="pl-k">=</span>[<span class="pl-c1">16</span>,<span class="pl-c1">17</span>,<span class="pl-c1">18</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">7</span>,<span class="pl-c1">9</span>,<span class="pl-c1">6</span>,<span class="pl-c1">10</span>,<span class="pl-c1">5</span>,<span class="pl-c1">11</span>,<span class="pl-c1">4</span>,<span class="pl-c1">12</span>,<span class="pl-c1">3</span>,<span class="pl-c1">13</span>,<span class="pl-c1">2</span>,<span class="pl-c1">14</span>,<span class="pl-c1">1</span>,<span class="pl-c1">15</span>],Za<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>(Ya)<span class="pl-k">:</span>Ya,$a<span class="pl-k">=</span>[<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">10</span>,<span class="pl-c1">11</span>,<span class="pl-c1">13</span>,<span class="pl-c1">15</span>,<span class="pl-c1">17</span>,<span class="pl-c1">19</span>,<span class="pl-c1">23</span>,<span class="pl-c1">27</span>,<span class="pl-c1">31</span>,<span class="pl-c1">35</span>,<span class="pl-c1">43</span>,<span class="pl-c1">51</span>,<span class="pl-c1">59</span>,<span class="pl-c1">67</span>,<span class="pl-c1">83</span>,<span class="pl-c1">99</span>,<span class="pl-c1">115</span>,<span class="pl-c1">131</span>,<span class="pl-c1">163</span>,<span class="pl-c1">195</span>,<span class="pl-c1">227</span>,<span class="pl-c1">258</span>,<span class="pl-c1">258</span>,<span class="pl-c1">258</span>],ab<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>($a)<span class="pl-k">:</span>$a,bb<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],cb<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(bb)<span class="pl-k">:</span>bb,db<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">7</span>,<span class="pl-c1">9</span>,<span class="pl-c1">13</span>,<span class="pl-c1">17</span>,<span class="pl-c1">25</span>,<span class="pl-c1">33</span>,<span class="pl-c1">49</span>,<span class="pl-c1">65</span>,<span class="pl-c1">97</span>,<span class="pl-c1">129</span>,<span class="pl-c1">193</span>,<span class="pl-c1">257</span>,<span class="pl-c1">385</span>,<span class="pl-c1">513</span>,<span class="pl-c1">769</span>,<span class="pl-c1">1025</span>,<span class="pl-c1">1537</span>,<span class="pl-c1">2049</span>,<span class="pl-c1">3073</span>,<span class="pl-c1">4097</span>,<span class="pl-c1">6145</span>,<span class="pl-c1">8193</span>,<span class="pl-c1">12289</span>,<span class="pl-c1">16385</span>,<span class="pl-c1">24577</span>],eb<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>(db)<span class="pl-k">:</span>db,fb<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">10</span>,</td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code js-file-line"><span class="pl-c1">10</span>,<span class="pl-c1">11</span>,<span class="pl-c1">11</span>,<span class="pl-c1">12</span>,<span class="pl-c1">12</span>,<span class="pl-c1">13</span>,<span class="pl-c1">13</span>],gb<span class="pl-k">=</span>A<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(fb)<span class="pl-k">:</span>fb,hb<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">288</span>),$,ib;$<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(ib<span class="pl-k">=</span>hb.<span class="pl-sc">length</span>;$<span class="pl-k">&lt;</span>ib;<span class="pl-k">++</span>$)hb[$]<span class="pl-k">=</span><span class="pl-c1">143</span><span class="pl-k">&gt;=</span>$<span class="pl-k">?</span><span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-c1">255</span><span class="pl-k">&gt;=</span>$<span class="pl-k">?</span><span class="pl-c1">9</span><span class="pl-k">:</span><span class="pl-c1">279</span><span class="pl-k">&gt;=</span>$<span class="pl-k">?</span><span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-c1">8</span>;<span class="pl-s">var</span> Va<span class="pl-k">=</span>ja(hb),jb<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">30</span>),kb,lb;kb<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(lb<span class="pl-k">=</span>jb.<span class="pl-sc">length</span>;kb<span class="pl-k">&lt;</span>lb;<span class="pl-k">++</span>kb)jb[kb]<span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-s">var</span> Wa<span class="pl-k">=</span>ja(jb);<span class="pl-st">function</span> <span class="pl-en">Z</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>b.j,d<span class="pl-k">=</span>b.e,e<span class="pl-k">=</span>b.<span class="pl-sc">input</span>,f<span class="pl-k">=</span>b.c,g<span class="pl-k">=</span>e.<span class="pl-sc">length</span>,k;d<span class="pl-k">&lt;</span>a;)f<span class="pl-k">&gt;=</span>g<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>input buffer is broken<span class="pl-pds">&quot;</span></span>)),c|<span class="pl-k">=</span>e[f<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span>d,d<span class="pl-k">+=</span><span class="pl-c1">8</span>;k<span class="pl-k">=</span>c<span class="pl-k">&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a)<span class="pl-k">-</span><span class="pl-c1">1</span>;b.j<span class="pl-k">=</span>c<span class="pl-k">&gt;&gt;&gt;</span>a;b.e<span class="pl-k">=</span>d<span class="pl-k">-</span>a;b.c<span class="pl-k">=</span>f;<span class="pl-k">return</span> k}</td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">mb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>b.j,d<span class="pl-k">=</span>b.e,e<span class="pl-k">=</span>b.<span class="pl-sc">input</span>,f<span class="pl-k">=</span>b.c,g<span class="pl-k">=</span>e.<span class="pl-sc">length</span>,k<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],h<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l,s;d<span class="pl-k">&lt;</span>h<span class="pl-k">&amp;&amp;!</span>(f<span class="pl-k">&gt;=</span>g);)c|<span class="pl-k">=</span>e[f<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span>d,d<span class="pl-k">+=</span><span class="pl-c1">8</span>;l<span class="pl-k">=</span>k[c<span class="pl-k">&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>h)<span class="pl-k">-</span><span class="pl-c1">1</span>];s<span class="pl-k">=</span>l<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span>;b.j<span class="pl-k">=</span>c<span class="pl-k">&gt;&gt;</span>s;b.e<span class="pl-k">=</span>d<span class="pl-k">-</span>s;b.c<span class="pl-k">=</span>f;<span class="pl-k">return</span> l<span class="pl-k">&amp;</span><span class="pl-c1">65535</span>}</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Xa</span>(<span class="pl-vpf">b</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e<span class="pl-k">=</span><span class="pl-v">this</span>.I,f,g;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>a;)<span class="pl-k">switch</span>(d<span class="pl-k">=</span>mb(<span class="pl-v">this</span>,b),d){<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span><span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">+</span>Z(<span class="pl-v">this</span>,<span class="pl-c1">2</span>);f<span class="pl-k">--</span>;)c[g<span class="pl-k">++</span>]<span class="pl-k">=</span>e;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span><span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">+</span>Z(<span class="pl-v">this</span>,<span class="pl-c1">3</span>);f<span class="pl-k">--</span>;)c[g<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">11</span><span class="pl-k">+</span>Z(<span class="pl-v">this</span>,<span class="pl-c1">7</span>);f<span class="pl-k">--</span>;)c[g<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>e<span class="pl-k">=</span>c[g<span class="pl-k">++</span>]<span class="pl-k">=</span>d}<span class="pl-v">this</span>.I<span class="pl-k">=</span>e;<span class="pl-k">return</span> c}<span class="pl-s">var</span> c<span class="pl-k">=</span>Z(b,<span class="pl-c1">5</span>)<span class="pl-k">+</span><span class="pl-c1">257</span>,d<span class="pl-k">=</span>Z(b,<span class="pl-c1">5</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span>Z(b,<span class="pl-c1">4</span>)<span class="pl-k">+</span><span class="pl-c1">4</span>,f<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(Za.<span class="pl-sc">length</span>),g,k,h,l;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>l)f[Za[l]]<span class="pl-k">=</span>Z(b,<span class="pl-c1">3</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>A){l<span class="pl-k">=</span>e;<span class="pl-k">for</span>(e<span class="pl-k">=</span>f.<span class="pl-sc">length</span>;l<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>l)f[Za[l]]<span class="pl-k">=</span><span class="pl-c1">0</span>}g<span class="pl-k">=</span>ja(f);k<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(c);h<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(d);</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code js-file-line">b.I<span class="pl-k">=</span><span class="pl-c1">0</span>;b.r(ja(a.<span class="pl-s3">call</span>(b,c,g,k)),ja(a.<span class="pl-s3">call</span>(b,d,g,h)))}<span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">r</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.a,d<span class="pl-k">=</span><span class="pl-v">this</span>.b;<span class="pl-v">this</span>.A<span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span>c.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">258</span>,f,g,k,h;<span class="pl-c1">256</span><span class="pl-k">!==</span>(f<span class="pl-k">=</span>mb(<span class="pl-v">this</span>,b));)<span class="pl-k">if</span>(<span class="pl-c1">256</span><span class="pl-k">&gt;</span>f)d<span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.b<span class="pl-k">=</span>d,c<span class="pl-k">=</span><span class="pl-v">this</span>.f(),d<span class="pl-k">=</span><span class="pl-v">this</span>.b),c[d<span class="pl-k">++</span>]<span class="pl-k">=</span>f;<span class="pl-k">else</span>{g<span class="pl-k">=</span>f<span class="pl-k">-</span><span class="pl-c1">257</span>;h<span class="pl-k">=</span>ab[g];<span class="pl-c1">0</span><span class="pl-k">&lt;</span>cb[g]<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span>Z(<span class="pl-v">this</span>,cb[g]));f<span class="pl-k">=</span>mb(<span class="pl-v">this</span>,a);k<span class="pl-k">=</span>eb[f];<span class="pl-c1">0</span><span class="pl-k">&lt;</span>gb[f]<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">+=</span>Z(<span class="pl-v">this</span>,gb[f]));d<span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.b<span class="pl-k">=</span>d,c<span class="pl-k">=</span><span class="pl-v">this</span>.f(),d<span class="pl-k">=</span><span class="pl-v">this</span>.b);<span class="pl-k">for</span>(;h<span class="pl-k">--</span>;)c[d]<span class="pl-k">=</span>c[d<span class="pl-k">++-</span>k]}<span class="pl-k">for</span>(;<span class="pl-c1">8</span><span class="pl-k">&lt;=</span><span class="pl-v">this</span>.e;)<span class="pl-v">this</span>.e<span class="pl-k">-=</span><span class="pl-c1">8</span>,<span class="pl-v">this</span>.c<span class="pl-k">--</span>;<span class="pl-v">this</span>.b<span class="pl-k">=</span>d};</td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code js-file-line"><span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">R</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.a,d<span class="pl-k">=</span><span class="pl-v">this</span>.b;<span class="pl-v">this</span>.A<span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span>c.<span class="pl-sc">length</span>,f,g,k,h;<span class="pl-c1">256</span><span class="pl-k">!==</span>(f<span class="pl-k">=</span>mb(<span class="pl-v">this</span>,b));)<span class="pl-k">if</span>(<span class="pl-c1">256</span><span class="pl-k">&gt;</span>f)d<span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.f(),e<span class="pl-k">=</span>c.<span class="pl-sc">length</span>),c[d<span class="pl-k">++</span>]<span class="pl-k">=</span>f;<span class="pl-k">else</span>{g<span class="pl-k">=</span>f<span class="pl-k">-</span><span class="pl-c1">257</span>;h<span class="pl-k">=</span>ab[g];<span class="pl-c1">0</span><span class="pl-k">&lt;</span>cb[g]<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span>Z(<span class="pl-v">this</span>,cb[g]));f<span class="pl-k">=</span>mb(<span class="pl-v">this</span>,a);k<span class="pl-k">=</span>eb[f];<span class="pl-c1">0</span><span class="pl-k">&lt;</span>gb[f]<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">+=</span>Z(<span class="pl-v">this</span>,gb[f]));d<span class="pl-k">+</span>h<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.f(),e<span class="pl-k">=</span>c.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(;h<span class="pl-k">--</span>;)c[d]<span class="pl-k">=</span>c[d<span class="pl-k">++-</span>k]}<span class="pl-k">for</span>(;<span class="pl-c1">8</span><span class="pl-k">&lt;=</span><span class="pl-v">this</span>.e;)<span class="pl-v">this</span>.e<span class="pl-k">-=</span><span class="pl-c1">8</span>,<span class="pl-v">this</span>.c<span class="pl-k">--</span>;<span class="pl-v">this</span>.b<span class="pl-k">=</span>d};</td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code js-file-line"><span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-v">this</span>.b<span class="pl-k">-</span><span class="pl-c1">32768</span>),a<span class="pl-k">=</span><span class="pl-v">this</span>.b<span class="pl-k">-</span><span class="pl-c1">32768</span>,c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.a;<span class="pl-k">if</span>(A)b.set(e.subarray(<span class="pl-c1">32768</span>,b.<span class="pl-sc">length</span>));<span class="pl-k">else</span>{c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;c<span class="pl-k">&lt;</span>d;<span class="pl-k">++</span>c)b[c]<span class="pl-k">=</span>e[c<span class="pl-k">+</span><span class="pl-c1">32768</span>]}<span class="pl-v">this</span>.o.<span class="pl-s3">push</span>(b);<span class="pl-v">this</span>.s<span class="pl-k">+=</span>b.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(A)e.set(e.subarray(a,a<span class="pl-k">+</span><span class="pl-c1">32768</span>));<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">32768</span><span class="pl-k">&gt;</span>c;<span class="pl-k">++</span>c)e[c]<span class="pl-k">=</span>e[a<span class="pl-k">+</span>c];<span class="pl-v">this</span>.b<span class="pl-k">=</span><span class="pl-c1">32768</span>;<span class="pl-k">return</span> e};</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code js-file-line"><span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">T</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>.<span class="pl-sc">length</span>/<span class="pl-v">this</span>.c<span class="pl-k">+</span><span class="pl-c1">1</span>|<span class="pl-c1">0</span>,d,e,f,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.a;b<span class="pl-k">&amp;&amp;</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> b.B<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>b.B),<span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> b.N<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span>b.N));<span class="pl-c1">2</span><span class="pl-k">&gt;</span>c<span class="pl-k">?</span>(d<span class="pl-k">=</span>(g.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-v">this</span>.c)/<span class="pl-v">this</span>.A[<span class="pl-c1">2</span>],f<span class="pl-k">=</span><span class="pl-c1">258</span><span class="pl-k">*</span>(d/<span class="pl-c1">2</span>)|<span class="pl-c1">0</span>,e<span class="pl-k">=</span>f<span class="pl-k">&lt;</span>k.<span class="pl-sc">length</span><span class="pl-k">?</span>k.<span class="pl-sc">length</span><span class="pl-k">+</span>f<span class="pl-k">:</span>k.<span class="pl-sc">length</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>e<span class="pl-k">=</span>k.<span class="pl-sc">length</span><span class="pl-k">*</span>c;A<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(e),a.set(k))<span class="pl-k">:</span>a<span class="pl-k">=</span>k;<span class="pl-k">return</span> <span class="pl-v">this</span>.a<span class="pl-k">=</span>a};</td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code js-file-line"><span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">z</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-v">this</span>.a,c<span class="pl-k">=</span><span class="pl-v">this</span>.o,d,e<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-v">this</span>.s<span class="pl-k">+</span>(<span class="pl-v">this</span>.b<span class="pl-k">-</span><span class="pl-c1">32768</span>)),f,g,k,h;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>c.<span class="pl-sc">length</span>)<span class="pl-k">return</span> A<span class="pl-k">?</span><span class="pl-v">this</span>.a.subarray(<span class="pl-c1">32768</span>,<span class="pl-v">this</span>.b)<span class="pl-k">:</span><span class="pl-v">this</span>.a.<span class="pl-s3">slice</span>(<span class="pl-c1">32768</span>,<span class="pl-v">this</span>.b);f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>g;<span class="pl-k">++</span>f){d<span class="pl-k">=</span>c[f];k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;k<span class="pl-k">&lt;</span>h;<span class="pl-k">++</span>k)e[b<span class="pl-k">++</span>]<span class="pl-k">=</span>d[k]}f<span class="pl-k">=</span><span class="pl-c1">32768</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-v">this</span>.b;f<span class="pl-k">&lt;</span>g;<span class="pl-k">++</span>f)e[b<span class="pl-k">++</span>]<span class="pl-k">=</span>a[f];<span class="pl-v">this</span>.o<span class="pl-k">=</span>[];<span class="pl-k">return</span> <span class="pl-v">this</span>.buffer<span class="pl-k">=</span>e};</td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code js-file-line"><span class="pl-s3">Y</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">P</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b,a<span class="pl-k">=</span><span class="pl-v">this</span>.b;A<span class="pl-k">?</span><span class="pl-v">this</span>.L<span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a),b.set(<span class="pl-v">this</span>.a.subarray(<span class="pl-c1">0</span>,a)))<span class="pl-k">:</span>b<span class="pl-k">=</span><span class="pl-v">this</span>.a.subarray(<span class="pl-c1">0</span>,a)<span class="pl-k">:</span>(<span class="pl-v">this</span>.a.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.a.<span class="pl-sc">length</span><span class="pl-k">=</span>a),b<span class="pl-k">=</span><span class="pl-v">this</span>.a);<span class="pl-k">return</span> <span class="pl-v">this</span>.buffer<span class="pl-k">=</span>b};<span class="pl-st">function</span> <span class="pl-en">nb</span>(<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.<span class="pl-sc">input</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.G<span class="pl-k">=</span>[];<span class="pl-v">this</span>.S<span class="pl-k">=!</span><span class="pl-c1">1</span>}</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code js-file-line"><span class="pl-s3">nb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">i</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>.<span class="pl-sc">length</span>;<span class="pl-v">this</span>.c<span class="pl-k">&lt;</span>b;){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ha</span>,c<span class="pl-k">=</span>t,d<span class="pl-k">=</span>t,e<span class="pl-k">=</span>t,f<span class="pl-k">=</span>t,g<span class="pl-k">=</span>t,k<span class="pl-k">=</span>t,h<span class="pl-k">=</span>t,l<span class="pl-k">=</span>t,s<span class="pl-k">=</span>t,p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>,m<span class="pl-k">=</span><span class="pl-v">this</span>.c;a.C<span class="pl-k">=</span>p[m<span class="pl-k">++</span>];a.D<span class="pl-k">=</span>p[m<span class="pl-k">++</span>];(<span class="pl-c1">31</span><span class="pl-k">!==</span>a.C<span class="pl-k">||</span><span class="pl-c1">139</span><span class="pl-k">!==</span>a.D)<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid file signature:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.C<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.D));a.v<span class="pl-k">=</span>p[m<span class="pl-k">++</span>];<span class="pl-k">switch</span>(a.v){<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>unknown compression method: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.v))}a.n<span class="pl-k">=</span>p[m<span class="pl-k">++</span>];l<span class="pl-k">=</span>p[m<span class="pl-k">++</span>]|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span>|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>;a.aa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-c1">1E3</span><span class="pl-k">*</span>l);a.ca<span class="pl-k">=</span>p[m<span class="pl-k">++</span>];a.ba<span class="pl-k">=</span>p[m<span class="pl-k">++</span>];<span class="pl-c1">0</span><span class="pl-k">&lt;</span>(a.n<span class="pl-k">&amp;</span><span class="pl-c1">4</span>)<span class="pl-k">&amp;&amp;</span>(a.X<span class="pl-k">=</span>p[m<span class="pl-k">++</span>]|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>,m<span class="pl-k">+=</span>a.X);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>(a.n<span class="pl-k">&amp;</span>Ba)){h<span class="pl-k">=</span>[];<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>(g<span class="pl-k">=</span>p[m<span class="pl-k">++</span>]);)h[k<span class="pl-k">++</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code js-file-line"><span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(g);a.<span class="pl-sc">name</span><span class="pl-k">=</span>h.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>(a.n<span class="pl-k">&amp;</span>Ca)){h<span class="pl-k">=</span>[];<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>(g<span class="pl-k">=</span>p[m<span class="pl-k">++</span>]);)h[k<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(g);a.w<span class="pl-k">=</span>h.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-c1">0</span><span class="pl-k">&lt;</span>(a.n<span class="pl-k">&amp;</span>Da)<span class="pl-k">&amp;&amp;</span>(a.Q<span class="pl-k">=</span>R(p,<span class="pl-c1">0</span>,m)<span class="pl-k">&amp;</span><span class="pl-c1">65535</span>,a.Q<span class="pl-k">!==</span>(p[m<span class="pl-k">++</span>]|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>)<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid header crc16<span class="pl-pds">&quot;</span></span>)));c<span class="pl-k">=</span>p[p.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">4</span>]|p[p.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">3</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>|p[p.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span>|p[p.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>;p.<span class="pl-sc">length</span><span class="pl-k">-</span>m<span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-c1">512</span><span class="pl-k">*</span>c<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>c);d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Y</span>(p,{index<span class="pl-k">:</span>m,bufferSize<span class="pl-k">:</span>f});a.<span class="pl-sc">data</span><span class="pl-k">=</span>e<span class="pl-k">=</span>d.i();m<span class="pl-k">=</span>d.c;a.Z<span class="pl-k">=</span>s<span class="pl-k">=</span>(p[m<span class="pl-k">++</span>]|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span>|p[m<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>;R(e,t,t)<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid CRC-32 checksum: 0x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>R(e,t,t).<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> / 0x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code js-file-line">s.toString(16)));a.$=c=(p[m++]|p[m++]&lt;&lt;8|p[m++]&lt;&lt;16|p[m++]&lt;&lt;24)&gt;&gt;&gt;0;(e.length&amp;4294967295)!==c&amp;&amp;q(Error(&quot;invalid input size: &quot;+(e.length&amp;4294967295)+&quot; / &quot;+c));this.G.push(a);this.c=m}this.S=v;var n=this.G,r,u,x=0,O=0,y;r=0;for(u=n.length;r&lt;u;++r)O+=n[r].data.length;if(A){y=new Uint8Array(O);for(r=0;r&lt;u;++r)y.set(n[r].data,x),x+=n[r].data.length}else{y=[];for(r=0;r&lt;u;++r)y[r]=n[r].data;y=Array.prototype.concat.apply([],y)}return y};function ob(b){if(&quot;string&quot;===typeof b){var a=b.split(&quot;&quot;),c,d;c=0;for(d=a.length;c&lt;d;c++)a[c]=(a[c].charCodeAt(0)&amp;255)&gt;&gt;&gt;0;b=a}for(var e=1,f=0,g=b.length,k,h=0;0&lt;g;){k=1024&lt;g?1024:g;g-=k;do e+=b[h++],f+=e;while(--k);e%=65521;f%=65521}return(f&lt;&lt;16|e)&gt;&gt;&gt;0};function pb(b,a){var c,d;this.input=b;this.c=0;if(a||!(a={}))a.index&amp;&amp;(this.c=a.index),a.verify&amp;&amp;(this.W=a.verify);c=b[this.c++];d=b[this.c++];switch(c&amp;15){case rb:this.method=rb;break;default:q(Error(&quot;unsupported compression method&quot;))}0!==((c&lt;&lt;8)+d)%31&amp;&amp;q(Error(&quot;invalid fcheck flag:&quot;+((c&lt;&lt;8)+d)%31));d&amp;32&amp;&amp;q(Error(&quot;fdict flag is not supported&quot;));this.K=new Y(b,{index:this.c,bufferSize:a.bufferSize,bufferType:a.bufferType,resize:a.resize})}</td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code js-file-line"><span class="pl-s3">pb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">i</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">input</span>,a,c;a<span class="pl-k">=</span><span class="pl-v">this</span>.K.i();<span class="pl-v">this</span>.c<span class="pl-k">=</span><span class="pl-v">this</span>.K.c;<span class="pl-v">this</span>.W<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>(b[<span class="pl-v">this</span>.c<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>|b[<span class="pl-v">this</span>.c<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span>|b[<span class="pl-v">this</span>.c<span class="pl-k">++</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>|b[<span class="pl-v">this</span>.c<span class="pl-k">++</span>])<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>,c<span class="pl-k">!==</span>ob(a)<span class="pl-k">&amp;&amp;</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid adler-32 checksum<span class="pl-pds">&quot;</span></span>)));<span class="pl-k">return</span> a};<span class="pl-s">var</span> rb<span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-st">function</span> <span class="pl-en">sb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">input</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.a<span class="pl-k">=new</span> (A<span class="pl-k">?</span>Uint8Array<span class="pl-k">:</span><span class="pl-s3">Array</span>)(<span class="pl-c1">32768</span>);<span class="pl-v">this</span>.k<span class="pl-k">=</span>tb.t;<span class="pl-s">var</span> c<span class="pl-k">=</span>{},d;<span class="pl-k">if</span>((a<span class="pl-k">||!</span>(a<span class="pl-k">=</span>{}))<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> a.compressionType)<span class="pl-v">this</span>.k<span class="pl-k">=</span>a.compressionType;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)c[d]<span class="pl-k">=</span>a[d];c.outputBuffer<span class="pl-k">=</span><span class="pl-v">this</span>.a;<span class="pl-v">this</span>.J<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ma</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>,c)}<span class="pl-s">var</span> tb<span class="pl-k">=</span>oa;</td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code js-file-line"><span class="pl-s3">sb</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b,a,c,d,e,f,g,k<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">=</span><span class="pl-v">this</span>.a;b<span class="pl-k">=</span>rb;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> rb<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-sc">LOG2E</span><span class="pl-k">*</span><span class="pl-s3">Math</span><span class="pl-s3">.log</span>(<span class="pl-c1">32768</span>)<span class="pl-k">-</span><span class="pl-c1">8</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid compression method<span class="pl-pds">&quot;</span></span>))}c<span class="pl-k">=</span>a<span class="pl-k">&lt;&lt;</span><span class="pl-c1">4</span>|b;g[k<span class="pl-k">++</span>]<span class="pl-k">=</span>c;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> rb<span class="pl-k">:</span><span class="pl-k">switch</span>(<span class="pl-v">this</span>.k){<span class="pl-k">case</span> tb.NONE<span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> tb.M<span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> tb.t<span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>unsupported compression type<span class="pl-pds">&quot;</span></span>))}<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>q(Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>invalid compression method<span class="pl-pds">&quot;</span></span>))}d<span class="pl-k">=</span>e<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span>|<span class="pl-c1">0</span>;g[k<span class="pl-k">++</span>]<span class="pl-k">=</span>d|<span class="pl-c1">31</span><span class="pl-k">-</span>(<span class="pl-c1">256</span><span class="pl-k">*</span>c<span class="pl-k">+</span>d)<span class="pl-k">%</span><span class="pl-c1">31</span>;f<span class="pl-k">=</span>ob(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.J.b<span class="pl-k">=</span>k;g<span class="pl-k">=</span><span class="pl-v">this</span>.J.h();k<span class="pl-k">=</span>g.<span class="pl-sc">length</span>;A<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(g.buffer),g.<span class="pl-sc">length</span><span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code js-file-line">k<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(g.<span class="pl-sc">length</span><span class="pl-k">+</span><span class="pl-c1">4</span>),<span class="pl-v">this</span>.a.set(g),g<span class="pl-k">=</span><span class="pl-v">this</span>.a),g<span class="pl-k">=</span>g.subarray(<span class="pl-c1">0</span>,k<span class="pl-k">+</span><span class="pl-c1">4</span>));g[k<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;g[k<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;g[k<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>;g[k<span class="pl-k">++</span>]<span class="pl-k">=</span>f<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;<span class="pl-k">return</span> g};<span class="pl-sv">exports</span>.deflate<span class="pl-k">=</span>ub;<span class="pl-sv">exports</span>.deflateSync<span class="pl-k">=</span>vb;<span class="pl-sv">exports</span>.inflate<span class="pl-k">=</span>wb;<span class="pl-sv">exports</span>.inflateSync<span class="pl-k">=</span>xb;<span class="pl-sv">exports</span>.gzip<span class="pl-k">=</span>yb;<span class="pl-sv">exports</span>.gzipSync<span class="pl-k">=</span>zb;<span class="pl-sv">exports</span>.gunzip<span class="pl-k">=</span>Ab;<span class="pl-sv">exports</span>.gunzipSync<span class="pl-k">=</span>Bb;<span class="pl-st">function</span> <span class="pl-en">ub</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-sv">process</span>.nextTick(<span class="pl-st">function</span>(){<span class="pl-s">var</span> d,e;<span class="pl-k">try</span>{e<span class="pl-k">=</span>vb(b,c)}<span class="pl-k">catch</span>(f){d<span class="pl-k">=</span>f}a(d,e)})}<span class="pl-st">function</span> <span class="pl-en">vb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c;c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">sb</span>(b)).h();a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">return</span> a.H<span class="pl-k">?</span>c<span class="pl-k">:</span>Cb(c)}<span class="pl-st">function</span> <span class="pl-en">wb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-sv">process</span>.nextTick(<span class="pl-st">function</span>(){<span class="pl-s">var</span> d,e;<span class="pl-k">try</span>{e<span class="pl-k">=</span>xb(b,c)}<span class="pl-k">catch</span>(f){d<span class="pl-k">=</span>f}a(d,e)})}</td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">xb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c;b.subarray<span class="pl-k">=</span>b.slice;c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">pb</span>(b)).i();a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">return</span> a.noBuffer<span class="pl-k">?</span>c<span class="pl-k">:</span>Cb(c)}<span class="pl-st">function</span> <span class="pl-en">yb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-sv">process</span>.nextTick(<span class="pl-st">function</span>(){<span class="pl-s">var</span> d,e;<span class="pl-k">try</span>{e<span class="pl-k">=</span>zb(b,c)}<span class="pl-k">catch</span>(f){d<span class="pl-k">=</span>f}a(d,e)})}<span class="pl-st">function</span> <span class="pl-en">zb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c;b.subarray<span class="pl-k">=</span>b.slice;c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Aa</span>(b)).h();a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">return</span> a.H<span class="pl-k">?</span>c<span class="pl-k">:</span>Cb(c)}<span class="pl-st">function</span> <span class="pl-en">Ab</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-sv">process</span>.nextTick(<span class="pl-st">function</span>(){<span class="pl-s">var</span> d,e;<span class="pl-k">try</span>{e<span class="pl-k">=</span>Bb(b,c)}<span class="pl-k">catch</span>(f){d<span class="pl-k">=</span>f}a(d,e)})}<span class="pl-st">function</span> <span class="pl-en">Bb</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c;b.subarray<span class="pl-k">=</span>b.slice;c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">nb</span>(b)).i();a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">return</span> a.H<span class="pl-k">?</span>c<span class="pl-k">:</span>Cb(c)}</td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Cb</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Buffer</span>(b.<span class="pl-sc">length</span>),c,d;c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;c<span class="pl-k">&lt;</span>d;<span class="pl-k">++</span>c)a[c]<span class="pl-k">=</span>b[c];<span class="pl-k">return</span> a};}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>); <span class="pl-c">//@ sourceMappingURL=node-zlib.js.map</span></td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code js-file-line">}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>_process<span class="pl-pds">&#39;</span></span>),<span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>buffer<span class="pl-pds">&quot;</span></span>).Buffer)</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>_process<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">8</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>buffer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">4</span>}],<span class="pl-c1">10</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code js-file-line">    CSV<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code js-file-line">    TILED_JSON<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code js-file-line">    TILED_XML<span class="pl-k">:</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code js-file-line">    NORTH<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code js-file-line">    EAST<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code js-file-line">    SOUTH<span class="pl-k">:</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code js-file-line"><span class="pl-c">     * @property CSV</span></td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code js-file-line"><span class="pl-c">     * @type {Number}</span></td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code js-file-line"><span class="pl-c">     * @static</span></td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code js-file-line"><span class="pl-c">     * @final</span></td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code js-file-line">    WEST<span class="pl-k">:</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code js-file-line">},{}],<span class="pl-c1">11</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code js-file-line">    p2<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code js-file-line">        <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code js-file-line"><span class="pl-c">        * Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics</span></td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code js-file-line"><span class="pl-c">        * bodies. Only call this *after* you have specified all of the tiles you wish to collide with calls like</span></td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code js-file-line"><span class="pl-c">        * Tilemap.setCollisionBetween, etc. Every time you call this method it will destroy any previously created</span></td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code js-file-line"><span class="pl-c">        * bodies and remove them from the world. Therefore understand it&#39;s a very expensive operation and not to be</span></td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code js-file-line"><span class="pl-c">        * done in a core game update loop.</span></td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code js-file-line"><span class="pl-c">        *</span></td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code js-file-line"><span class="pl-c">        * @method Phaser.Physics.P2#convertTilemap</span></td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code js-file-line"><span class="pl-c">        * @param {Phaser.Tilemap} map - The Tilemap to get the map data from.</span></td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code js-file-line"><span class="pl-c">        * @param {number|string|Phaser.TilemapLayer} [layer] - The layer to operate on. If not given will default</span></td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code js-file-line"><span class="pl-c">        *       to map.currentLayer.</span></td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code js-file-line"><span class="pl-c">        * @param {boolean} [addToWorld=true] - If true it will automatically add each body to the world, otherwise</span></td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code js-file-line"><span class="pl-c">        *       it&#39;s up to you to do so.</span></td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code js-file-line"><span class="pl-c">        * @param {boolean} [optimize=true] - If true adjacent colliding tiles will be combined into a single body</span></td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code js-file-line"><span class="pl-c">        *       to save processing. However it means you cannot perform specific Tile to Body collision responses.</span></td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code js-file-line"><span class="pl-c">        * @return {array} An array of the Phaser.Physics.P2.Body objects that were created.</span></td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code js-file-line"><span class="pl-c">        */</span></td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code js-file-line">        <span class="pl-en">convertTiledmap</span>: <span class="pl-st">function</span> (<span class="pl-vpf">map</span>, <span class="pl-vpf">layer</span>, <span class="pl-vpf">addToWorld</span>, <span class="pl-vpf">optimize</span>) {</td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> addToWorld <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { addToWorld <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> optimize <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { optimize <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> layer <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { layer <span class="pl-k">=</span> map.currentLayer; }</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code js-file-line">            layer <span class="pl-k">=</span> map.getTilelayer(layer);</td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code js-file-line">            <span class="pl-c">//  If the bodies array is already populated we need to nuke it</span></td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code js-file-line">            <span class="pl-v">this</span>.clearTilemapLayerBodies(map, layer.<span class="pl-sc">index</span>);</td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code js-file-line">            <span class="pl-s">var</span> width <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code js-file-line">                sx <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code js-file-line">                sy <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code js-file-line">                tile, body, right;</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code js-file-line">            <span class="pl-k">for</span> (<span class="pl-s">var</span> y <span class="pl-k">=</span> <span class="pl-c1">0</span>, h <span class="pl-k">=</span> layer.<span class="pl-sc">size</span>.<span class="pl-sc">y</span>; y <span class="pl-k">&lt;</span> h; y<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code js-file-line">                width <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code js-file-line">                <span class="pl-k">for</span> (<span class="pl-s">var</span> x <span class="pl-k">=</span> <span class="pl-c1">0</span>, w <span class="pl-k">=</span> layer.<span class="pl-sc">size</span>.<span class="pl-sc">x</span>; x <span class="pl-k">&lt;</span> w; x<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code js-file-line">                    tile <span class="pl-k">=</span> layer.tiles[y][x];</td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code js-file-line">                    <span class="pl-k">if</span> (tile <span class="pl-k">&amp;&amp;</span> tile.collides)</td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code js-file-line">                    {</td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code js-file-line">                        <span class="pl-k">if</span> (optimize)</td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code js-file-line">                        {</td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code js-file-line">                            right <span class="pl-k">=</span> map.getTileRight(layer.<span class="pl-sc">index</span>, x, y);</td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code js-file-line">                            <span class="pl-k">if</span> (width <span class="pl-k">===</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code js-file-line">                            {</td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code js-file-line">                                sx <span class="pl-k">=</span> tile.<span class="pl-sc">x</span> <span class="pl-k">*</span> tile.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code js-file-line">                                sy <span class="pl-k">=</span> tile.<span class="pl-sc">y</span> <span class="pl-k">*</span> tile.<span class="pl-sc">height</span>;</td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code js-file-line">                                width <span class="pl-k">=</span> tile.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code js-file-line">                            <span class="pl-k">if</span> (right <span class="pl-k">&amp;&amp;</span> right.collides)</td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code js-file-line">                            {</td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code js-file-line">                                width <span class="pl-k">+=</span> tile.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code js-file-line">                            <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code js-file-line">                            {</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code js-file-line">                                body <span class="pl-k">=</span> <span class="pl-v">this</span>.createBody(<span class="pl-v">this</span>.pxm(sx) <span class="pl-k">*</span> <span class="pl-c1">1.25</span>, <span class="pl-v">this</span>.pxm(sy) <span class="pl-k">*</span> <span class="pl-c1">1.25</span>, <span class="pl-c1">0</span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code js-file-line">                                body.addRectangle(width, tile.<span class="pl-sc">height</span>, width / <span class="pl-c1">2</span>, tile.<span class="pl-sc">height</span> / <span class="pl-c1">2</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code js-file-line">                                <span class="pl-k">if</span> (addToWorld)</td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code js-file-line">                                {</td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code js-file-line">                                    <span class="pl-v">this</span>.addBody(body);</td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code js-file-line">                                layer.bodies.<span class="pl-s3">push</span>(body);</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code js-file-line">                                width <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code js-file-line">                        <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code js-file-line">                        {</td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code js-file-line">                            sx <span class="pl-k">=</span> tile.<span class="pl-sc">x</span> <span class="pl-k">*</span> tile.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code js-file-line">                            sy <span class="pl-k">=</span> tile.<span class="pl-sc">x</span> <span class="pl-k">*</span> tile.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code js-file-line">                            body <span class="pl-k">=</span> <span class="pl-v">this</span>.createBody(<span class="pl-v">this</span>.pxm(sx) <span class="pl-k">*</span> <span class="pl-c1">1.25</span>, <span class="pl-v">this</span>.pxm(sy) <span class="pl-k">*</span> <span class="pl-c1">1.25</span>, <span class="pl-c1">0</span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code js-file-line">                            body.addRectangle(tile.<span class="pl-sc">width</span>, tile.<span class="pl-sc">height</span>, tile.<span class="pl-sc">width</span> / <span class="pl-c1">2</span>, tile.<span class="pl-sc">height</span> / <span class="pl-c1">2</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code js-file-line">                            <span class="pl-k">if</span> (addToWorld)</td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code js-file-line">                            {</td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code js-file-line">                                <span class="pl-v">this</span>.addBody(body);</td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code js-file-line">                            layer.bodies.<span class="pl-s3">push</span>(body);</td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code js-file-line">            <span class="pl-k">return</span> layer.bodies;</td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code js-file-line">        <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code js-file-line"><span class="pl-c">        * Converts all of the polylines objects inside a Tiled ObjectGroup into physics bodies that are added to the world.</span></td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code js-file-line"><span class="pl-c">        * Note that the polylines must be created in such a way that they can withstand polygon decomposition.</span></td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code js-file-line"><span class="pl-c">        *</span></td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code js-file-line"><span class="pl-c">        * @method Phaser.Physics.P2#convertCollisionObjects</span></td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code js-file-line"><span class="pl-c">        * @param {Phaser.Tilemap} map - The Tilemap to get the map data from.</span></td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code js-file-line"><span class="pl-c">        * @param {number|string|Phaser.TilemapLayer} [layer] - The layer to operate on, defaults to map.currentLayer.</span></td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code js-file-line"><span class="pl-c">        * @param {boolean} [addToWorld=true] - If true it will automatically add each body to the world.</span></td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code js-file-line"><span class="pl-c">        * @return {array} An array of the Phaser.Physics.Body objects that have been created.</span></td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code js-file-line"><span class="pl-c">        */</span></td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code js-file-line">        <span class="pl-en">convertTiledCollisionObjects</span>: <span class="pl-st">function</span> (<span class="pl-vpf">map</span>, <span class="pl-vpf">layer</span>, <span class="pl-vpf">addToWorld</span>) {</td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> addToWorld <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { addToWorld <span class="pl-k">=</span> <span class="pl-c1">true</span>; }</td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> layer <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { layer <span class="pl-k">=</span> map.currentLayer; }</td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code js-file-line">            layer <span class="pl-k">=</span> map.getObjectlayer(layer);</td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code js-file-line">            <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, len <span class="pl-k">=</span> layer.objects.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> len; i<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code js-file-line">                <span class="pl-s">var</span> object <span class="pl-k">=</span> layer.objects[i];</td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code js-file-line">                <span class="pl-s">var</span> body <span class="pl-k">=</span> <span class="pl-v">this</span>.createBody(object.<span class="pl-sc">x</span>, object.<span class="pl-sc">y</span>, <span class="pl-c1">0</span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code js-file-line">                <span class="pl-c">// polygon defined area</span></td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code js-file-line">                <span class="pl-k">if</span> (object.polygon <span class="pl-k">||</span> object.polyline) {</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span>body.addPolygon(<span class="pl-c1">null</span>, (object.polygon <span class="pl-k">||</span> object.polyline).map(mapPointToArray))) {</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code js-file-line">                        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Unable to add poly collision body for object:<span class="pl-pds">&#39;</span></span>, object);</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code js-file-line">                <span class="pl-c">// currently only circles are supported by P2, so we just use the width</span></td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code js-file-line">                <span class="pl-k">else</span> <span class="pl-k">if</span> (object.ellipse) {</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code js-file-line">                    body.addCircle(object.<span class="pl-sc">width</span>, object.<span class="pl-sc">width</span> / <span class="pl-c1">2</span>, object.<span class="pl-sc">width</span> / <span class="pl-c1">2</span>, object.rotation);</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code js-file-line">                <span class="pl-c">// no polygon, use rectangle defined by object itself</span></td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code js-file-line">                <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code js-file-line">                    body.addRectangle(object.<span class="pl-sc">width</span>, object.<span class="pl-sc">height</span>, object.<span class="pl-sc">width</span> / <span class="pl-c1">2</span>, object.<span class="pl-sc">height</span> / <span class="pl-c1">2</span>, object.rotation);</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code js-file-line">                <span class="pl-k">if</span> (addToWorld) {</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code js-file-line">                    <span class="pl-v">this</span>.addBody(body);</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code js-file-line">                layer.bodies.<span class="pl-s3">push</span>(body);</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code js-file-line">    ninja<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code js-file-line">        <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code js-file-line"><span class="pl-c">        * Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics</span></td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code js-file-line"><span class="pl-c">        * bodies. Only call this *after* you have specified all of the tiles you wish to collide with calls like</span></td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code js-file-line"><span class="pl-c">        * Tilemap.setCollisionBetween, etc. Every time you call this method it will destroy any previously created</span></td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code js-file-line"><span class="pl-c">        * bodies and remove them from the world. Therefore understand it&#39;s a very expensive operation and not to be</span></td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code js-file-line"><span class="pl-c">        * done in a core game update loop.</span></td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code js-file-line"><span class="pl-c">        *</span></td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code js-file-line"><span class="pl-c">        * In Ninja the Tiles have an ID from 0 to 33, where 0 is &#39;empty&#39;, 1 is a full tile, 2 is a 45-degree slope,</span></td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code js-file-line"><span class="pl-c">        * etc. You can find the ID list either at the very bottom of `Tile.js`, or in a handy visual reference in the</span></td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code js-file-line"><span class="pl-c">        * `resources/Ninja Physics Debug Tiles` folder in the repository. The slopeMap parameter is an array that controls</span></td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code js-file-line"><span class="pl-c">        * how the indexes of the tiles in your tilemap data will map to the Ninja Tile IDs. For example if you had 6</span></td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code js-file-line"><span class="pl-c">        * tiles in your tileset: Imagine the first 4 should be converted into fully solid Tiles and the other 2 are 45-degree</span></td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code js-file-line"><span class="pl-c">        * slopes. Your slopeMap array would look like this: `[ 1, 1, 1, 1, 2, 3 ]`. Where each element of the array is</span></td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code js-file-line"><span class="pl-c">        * a tile in your tilemap and the resulting Ninja Tile it should create.</span></td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code js-file-line"><span class="pl-c">        *</span></td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code js-file-line"><span class="pl-c">        * @method Phaser.Physics.Ninja#convertTilemap</span></td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code js-file-line"><span class="pl-c">        * @param {Phaser.Tilemap} map - The Tilemap to get the map data from.</span></td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code js-file-line"><span class="pl-c">        * @param {number|string|Phaser.TilemapLayer} [layer] - The layer to operate on. Defaults to map.currentLayer.</span></td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code js-file-line"><span class="pl-c">        * @param {object} [slopeMap] - The tilemap index to Tile ID map.</span></td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code js-file-line"><span class="pl-c">        * @return {array} An array of the Phaser.Physics.Ninja.Tile objects that were created.</span></td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code js-file-line"><span class="pl-c">        */</span></td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code js-file-line">        <span class="pl-en">convertTiledmap</span>: <span class="pl-st">function</span> (<span class="pl-vpf">map</span>, <span class="pl-vpf">layer</span>, <span class="pl-vpf">slopeMap</span>) {</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code js-file-line">            layer <span class="pl-k">=</span> map.getTilelayer(layer);</td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code js-file-line">            <span class="pl-c">//  If the bodies array is already populated we need to nuke it</span></td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code js-file-line">            <span class="pl-v">this</span>.clearTilemapLayerBodies(map, layer);</td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code js-file-line">            <span class="pl-k">for</span> (<span class="pl-s">var</span> y <span class="pl-k">=</span> <span class="pl-c1">0</span>, h <span class="pl-k">=</span> layer.<span class="pl-sc">size</span>.<span class="pl-sc">y</span>; y <span class="pl-k">&lt;</span> h; y<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code js-file-line">                <span class="pl-k">for</span> (<span class="pl-s">var</span> x <span class="pl-k">=</span> <span class="pl-c1">0</span>, w <span class="pl-k">=</span> layer.<span class="pl-sc">size</span>.<span class="pl-sc">x</span>; x <span class="pl-k">&lt;</span> w; x<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code js-file-line">                    <span class="pl-s">var</span> tile <span class="pl-k">=</span> layer.tiles[y][x],</td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code js-file-line">                        index <span class="pl-k">=</span> (y <span class="pl-k">*</span> layer.<span class="pl-sc">size</span>.<span class="pl-sc">x</span>) <span class="pl-k">+</span> x;</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code js-file-line">                    <span class="pl-k">if</span> (tile <span class="pl-k">&amp;&amp;</span> slopeMap.hasOwnProperty(index))</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code js-file-line">                    {</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code js-file-line">                        <span class="pl-s">var</span> body <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Physics</span>.Ninja.Body(</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code js-file-line">                            <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code js-file-line">                            <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code js-file-line">                            <span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code js-file-line">                            slopeMap[index],</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code js-file-line">                            <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code js-file-line">                            tile.worldX <span class="pl-k">+</span> tile.centerX,</td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code js-file-line">                            tile.worldY <span class="pl-k">+</span> tile.centerY,</td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code js-file-line">                            tile.<span class="pl-sc">width</span>,</td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code js-file-line">                            tile.<span class="pl-sc">height</span></td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code js-file-line">                        );</td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code js-file-line">                        layer.bodies.<span class="pl-s3">push</span>(body);</td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code js-file-line">            <span class="pl-k">return</span> layer.bodies;</td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">mapPointToArray</span>(<span class="pl-vpf">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code js-file-line">    <span class="pl-k">return</span> [obj.<span class="pl-sc">x</span>, obj.<span class="pl-sc">y</span>];</td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code js-file-line">},{}],<span class="pl-c1">12</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code js-file-line"><span class="pl-s">var</span> utils <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../utils<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code js-file-line"><span class="pl-c"> * Tiled object group is a special layer that contains entities</span></td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code js-file-line"><span class="pl-c"> * @class Objectlayer</span></td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code js-file-line"><span class="pl-c"> * @extends Phaser.Group</span></td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code js-file-line"><span class="pl-c"> * @constructor</span></td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code js-file-line"><span class="pl-c"> * @param map {Tilemap} The tilemap instance that this belongs to</span></td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code js-file-line"><span class="pl-c"> * @param group {Object} All the settings for the layer</span></td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Objectlayer</span>(<span class="pl-vpf">game</span>, <span class="pl-vpf">map</span>, <span class="pl-vpf">layer</span>, <span class="pl-vpf">index</span>) {</td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code js-file-line">    Phaser.Group.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, game, map);</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">index</span> <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code js-file-line">    <span class="pl-c">// Non-Tiled related properties</span></td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code js-file-line"><span class="pl-c">     * The map instance this object group belongs to</span></td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code js-file-line"><span class="pl-c">     * @property map</span></td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code js-file-line"><span class="pl-c">     * @type Tilemap</span></td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code js-file-line">    <span class="pl-v">this</span>.map <span class="pl-k">=</span> map;</td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code js-file-line"><span class="pl-c">     * The const type of this object.</span></td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code js-file-line"><span class="pl-c">     * @property type</span></td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code js-file-line"><span class="pl-c">     * @default</span></td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">type</span> <span class="pl-k">=</span> Phaser.TILEMAPLAYER;</td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code js-file-line"><span class="pl-c">     * The name of the group</span></td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code js-file-line"><span class="pl-c">     * @property name</span></td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code js-file-line"><span class="pl-c">     * @type String</span></td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code js-file-line"><span class="pl-c">     * @default &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">name</span> <span class="pl-k">=</span> layer.<span class="pl-sc">name</span> <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code js-file-line">    <span class="pl-c">// Tiled related properties</span></td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code js-file-line"><span class="pl-c">     * The color of this group in the Tiled Editor,</span></td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code js-file-line"><span class="pl-c">     * @property color</span></td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code js-file-line"><span class="pl-c">     * @type</span></td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">color</span> <span class="pl-k">=</span> layer.<span class="pl-sc">color</span>;</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code js-file-line"><span class="pl-c">     * The user-defined properties of this group. Usually defined in the TiledEditor</span></td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code js-file-line"><span class="pl-c">     * @property properties</span></td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code js-file-line"><span class="pl-c">     * @type Object</span></td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> utils.parseTiledProperties(layer.properties);</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code js-file-line"><span class="pl-c">     * The objects in this group that can be spawned</span></td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code js-file-line"><span class="pl-c">     * @property objects</span></td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code js-file-line"><span class="pl-c">     * @type Array</span></td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code js-file-line">    <span class="pl-v">this</span>.objects <span class="pl-k">=</span> layer.objects;</td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code js-file-line"><span class="pl-c">     * The Tiled type of tile layer, should always be &#39;objectgroup&#39;</span></td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code js-file-line"><span class="pl-c">     * @property layerType</span></td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code js-file-line"><span class="pl-c">     * @type String</span></td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code js-file-line"><span class="pl-c">     * @default &#39;objectgroup&#39;</span></td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code js-file-line"><span class="pl-c">     * @readOnly</span></td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code js-file-line">    <span class="pl-v">this</span>.layerType <span class="pl-k">=</span> layer.<span class="pl-sc">type</span> <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>objectgroup<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code js-file-line">    <span class="pl-c">// translate some tiled properties to our inherited properties</span></td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code js-file-line">    <span class="pl-v">this</span>.position.<span class="pl-sc">x</span> <span class="pl-k">=</span> layer.<span class="pl-sc">x</span> <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code js-file-line">    <span class="pl-v">this</span>.position.<span class="pl-sc">y</span> <span class="pl-k">=</span> layer.<span class="pl-sc">y</span> <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code js-file-line">    <span class="pl-v">this</span>.alpha <span class="pl-k">=</span> layer.opacity <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> layer.opacity <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code js-file-line">    <span class="pl-v">this</span>.visible <span class="pl-k">=</span> layer.visible <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> layer.visible <span class="pl-k">:</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code js-file-line">    <span class="pl-c">// physics bodies in this layer</span></td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code js-file-line">    <span class="pl-v">this</span>.bodies <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.properties.batch) {</td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code js-file-line">        <span class="pl-v">this</span>.container <span class="pl-k">=</span> <span class="pl-v">this</span>.addChild(<span class="pl-k">new</span> <span class="pl-en">Phaser.SpriteBatch</span>(game));</td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code js-file-line">        <span class="pl-v">this</span>.container <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-s3">Object</span>.create(Phaser.Group.<span class="pl-sc">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">constructor</span> <span class="pl-k">=</span> Objectlayer;</td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> Objectlayer;</td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code js-file-line"><span class="pl-c"> * Spawns all the entities associated with this layer, and properly sets their attributes</span></td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code js-file-line"><span class="pl-c"> * @method spawn</span></td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code js-file-line"><span class="pl-c"> * @return {Objectlayer} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">spawn</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">spawnCallback</span>) {</td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code js-file-line">    <span class="pl-c">// we go through these backwards so that things that are higher in the</span></td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code js-file-line">    <span class="pl-c">// list of object gets rendered on top.</span></td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-v">this</span>.objects.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; <span class="pl-k">--</span>i) {</td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code js-file-line">        <span class="pl-s">var</span> o <span class="pl-k">=</span> <span class="pl-v">this</span>.objects[i],</td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code js-file-line">            props <span class="pl-k">=</span> utils.parseTiledProperties(o.properties),</td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code js-file-line">            set,</td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code js-file-line">            <span class="pl-c">// interactive,</span></td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code js-file-line">            obj;</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code js-file-line">        props.tileprops <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code js-file-line">        props.animation <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code js-file-line">        <span class="pl-c">// gid means a sprite from a tileset texture</span></td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code js-file-line">        <span class="pl-k">if</span> (o.gid) {</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code js-file-line">            set <span class="pl-k">=</span> <span class="pl-v">this</span>.map.getTileset(o.gid);</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code js-file-line">            <span class="pl-c">// if the tileset exists</span></td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code js-file-line">            <span class="pl-k">if</span> (set) {</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code js-file-line">                props.texture <span class="pl-k">=</span> set.getTileTexture(o.gid);</td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code js-file-line">                props.tileprops <span class="pl-k">=</span> set.getTileProperties(o.gid);</td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code js-file-line">                props.animation <span class="pl-k">=</span> set.getTileAnimations(o.gid);</td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code js-file-line">                <span class="pl-c">// if no hitArea then use the tileset&#39;s if available</span></td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>props.hitArea) {</td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code js-file-line">                    <span class="pl-k">if</span> (props.tileprops.hitArea) {</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code js-file-line">                        props.hitArea <span class="pl-k">=</span> props.tileprops.hitArea;</td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code js-file-line">                    <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code js-file-line">                        props.hitArea <span class="pl-k">=</span> set.properties.hitArea;</td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code js-file-line">        <span class="pl-c">// non-sprite object (usually to define an &quot;area&quot; on a map)</span></td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code js-file-line">        <span class="pl-c">// else {</span></td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code js-file-line">        <span class="pl-c">//     if (!props.hitArea) {</span></td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code js-file-line">        <span class="pl-c">//         if (o.polyline) {</span></td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code js-file-line">        <span class="pl-c">//             props.hitArea = this._getPolyline(o);</span></td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code js-file-line">        <span class="pl-c">//         }</span></td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code js-file-line">        <span class="pl-c">//         else if (o.polygon) {</span></td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code js-file-line">        <span class="pl-c">//             props.hitArea = this._getPolygon(o);</span></td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code js-file-line">        <span class="pl-c">//         }</span></td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code js-file-line">        <span class="pl-c">//         else if (o.ellipse) {</span></td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code js-file-line">        <span class="pl-c">//             props.hitArea = this._getEllipse(o);</span></td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code js-file-line">        <span class="pl-c">//         }</span></td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code js-file-line">        <span class="pl-c">//         else {</span></td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code js-file-line">        <span class="pl-c">//             props.hitArea = this._getRectangle(o);</span></td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code js-file-line">        <span class="pl-c">//         }</span></td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code js-file-line">        <span class="pl-c">//     }</span></td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code js-file-line">        <span class="pl-c">// }</span></td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code js-file-line">        o.<span class="pl-sc">name</span> <span class="pl-k">=</span> o.<span class="pl-sc">name</span> <span class="pl-k">||</span> props.<span class="pl-sc">name</span> <span class="pl-k">||</span> props.tileprops.<span class="pl-sc">name</span> <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code js-file-line">        o.<span class="pl-sc">type</span> <span class="pl-k">=</span> o.<span class="pl-sc">type</span> <span class="pl-k">||</span> props.<span class="pl-sc">type</span> <span class="pl-k">||</span> props.tileprops.<span class="pl-sc">type</span> <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code js-file-line">        <span class="pl-c">// a manually specified string texture</span></td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> props.texture <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code js-file-line">            props.texture <span class="pl-k">=</span> PIXI.TextureCache[props.texture];</td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code js-file-line">        <span class="pl-c">// just a regular DisplayObject</span></td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>props.texture) {</td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code js-file-line">            obj <span class="pl-k">=</span> <span class="pl-v">this</span>.game.add.group(<span class="pl-v">this</span>.container, o.<span class="pl-sc">name</span>);</td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code js-file-line">            obj.<span class="pl-sc">width</span> <span class="pl-k">=</span> o.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code js-file-line">            obj.<span class="pl-sc">height</span> <span class="pl-k">=</span> o.<span class="pl-sc">height</span>;</td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code js-file-line">            obj.rotation <span class="pl-k">=</span> o.rotation;</td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code js-file-line">            obj.objectType <span class="pl-k">=</span> o.<span class="pl-sc">type</span>;</td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code js-file-line">            obj.position.<span class="pl-sc">x</span> <span class="pl-k">=</span> o.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code js-file-line">            obj.position.<span class="pl-sc">y</span> <span class="pl-k">=</span> o.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code js-file-line">            <span class="pl-c">// these are treated as sensor bodies, so always enable physics</span></td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code js-file-line">            obj.sensor <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code js-file-line">            <span class="pl-c">// obj.hitArea = props.hitArea;</span></td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code js-file-line">            <span class="pl-c">// obj.enablePhysics(this.game.physics);</span></td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code js-file-line">            obj <span class="pl-k">=</span> <span class="pl-v">this</span>.game.add.sprite(o.<span class="pl-sc">x</span>, o.<span class="pl-sc">y</span>, props.texture, <span class="pl-c1">null</span>, <span class="pl-v">this</span>.container);</td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code js-file-line">            <span class="pl-c">// obj.width = o.width;</span></td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code js-file-line">            <span class="pl-c">// obj.height = o.height;</span></td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code js-file-line">            obj.<span class="pl-sc">name</span> <span class="pl-k">=</span> o.<span class="pl-sc">name</span>;</td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code js-file-line">            obj.objectType <span class="pl-k">=</span> o.<span class="pl-sc">type</span>;</td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code js-file-line">            <span class="pl-c">// obj.mass = props.mass || props.tileprops.mass;</span></td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code js-file-line">            <span class="pl-c">// obj.inertia = props.inertia || props.tileprops.inertia;</span></td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code js-file-line">            <span class="pl-c">// obj.friction = props.friction || props.tileprops.friction;</span></td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code js-file-line">            <span class="pl-c">// obj.sensor = props.sensor || props.tileprops.sensor;</span></td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code js-file-line">            <span class="pl-c">// obj.hitArea = props.hitArea;</span></td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code js-file-line">            obj.blendMode <span class="pl-k">=</span> (props.blendMode <span class="pl-k">||</span> <span class="pl-v">this</span>.properties.blendMode) <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code js-file-line">                PIXI.blendModes[(props.blendMode <span class="pl-k">||</span> <span class="pl-v">this</span>.properties.blendMode)] <span class="pl-k">:</span> PIXI.blendModes.NORMAL;</td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code js-file-line">            <span class="pl-s">var</span> a <span class="pl-k">=</span> props.anchor <span class="pl-k">||</span> props.tileprops.anchor;</td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code js-file-line">            obj.anchor.<span class="pl-sc">x</span> <span class="pl-k">=</span> a <span class="pl-k">?</span> a[<span class="pl-c1">0</span>] <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code js-file-line">            obj.anchor.<span class="pl-sc">y</span> <span class="pl-k">=</span> a <span class="pl-k">?</span> a[<span class="pl-c1">1</span>] <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code js-file-line">            <span class="pl-c">// if (obj.mass) {</span></td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code js-file-line">            <span class="pl-c">//     obj.enablePhysics(this.game.physics);</span></td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code js-file-line">            <span class="pl-c">// }</span></td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code js-file-line">            <span class="pl-k">if</span> (props.tileprops) {</td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code js-file-line">                <span class="pl-k">if</span> (props.tileprops.flippedX) {</td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code js-file-line">                    obj.scale.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code js-file-line">                    obj.position.<span class="pl-sc">x</span> <span class="pl-k">+=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(obj.<span class="pl-sc">width</span>);</td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code js-file-line">                <span class="pl-k">if</span> (props.tileprops.flippedY) {</td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code js-file-line">                    obj.scale.<span class="pl-sc">y</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code js-file-line">                    obj.position.<span class="pl-sc">y</span> <span class="pl-k">+=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(obj.<span class="pl-sc">height</span>);</td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code js-file-line">                <span class="pl-c">// from Tiled Editor:</span></td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code js-file-line">                <span class="pl-c">// https://github.com/bjorn/tiled/blob/b059a13b2864ea029fb741a90780d31cf5b67043/src/libtiled/maprenderer.cpp#L135-L145</span></td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code js-file-line">                <span class="pl-k">if</span> (props.tileprops.flippedAD) {</td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code js-file-line">                    obj.rotation <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.degToRad(<span class="pl-c1">90</span>);</td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code js-file-line">                    obj.scale.<span class="pl-sc">x</span> <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code js-file-line">                    <span class="pl-s">var</span> sx <span class="pl-k">=</span> obj.scale.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code js-file-line">                    obj.scale.<span class="pl-sc">x</span> <span class="pl-k">=</span> obj.scale.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code js-file-line">                    obj.scale.<span class="pl-sc">y</span> <span class="pl-k">=</span> sx;</td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code js-file-line">                    <span class="pl-s">var</span> halfDiff <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(o.<span class="pl-sc">height</span> / <span class="pl-c1">2</span>) <span class="pl-k">-</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(o.<span class="pl-sc">width</span> / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code js-file-line">                    obj.position.<span class="pl-sc">y</span> <span class="pl-k">+=</span> halfDiff;</td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code js-file-line">                    obj.position.<span class="pl-sc">x</span> <span class="pl-k">+=</span> halfDiff;</td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code js-file-line">            <span class="pl-k">if</span> (props.animation <span class="pl-k">&amp;&amp;</span> obj.animations) {</td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code js-file-line">                obj.animations.copyFrameData(props.animation.<span class="pl-sc">data</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code js-file-line">                obj.animations.<span class="pl-s3">add</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tile<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">null</span>, props.animation.rate, <span class="pl-c1">true</span>).play();</td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code js-file-line">                <span class="pl-c">// obj.animations.play(props.animation || props.tileprops.animation);</span></td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> o.rotation <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code js-file-line">                obj.rotation <span class="pl-k">=</span> o.rotation;</td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code js-file-line">        <span class="pl-c">//visible was recently added to Tiled, default old versions to true</span></td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code js-file-line">        obj.visible <span class="pl-k">=</span> o.visible <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> <span class="pl-k">!!</span>o.visible <span class="pl-k">:</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code js-file-line">        <span class="pl-c">// if (this.map.orientation === &#39;isometric&#39;) {</span></td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code js-file-line">        <span class="pl-c">//     var toTileX = o.x / this.map.tileWidth,</span></td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code js-file-line">        <span class="pl-c">//         toTileY = o.y / this.map.tileWidth;</span></td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code js-file-line">        <span class="pl-c">//     //This cannot be the simplest form of this...</span></td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code js-file-line">        <span class="pl-c">//     o.x = (toTileX * this.map.tileWidth) - ((toTileY - 1) * (this.map.tileWidth / 2));</span></td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code js-file-line">        <span class="pl-c">//     o.y = (toTileY * this.map.tileWidth / 2) + (toTileX * this.map.tileWidth);</span></td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code js-file-line">        <span class="pl-c">// }</span></td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code js-file-line">        <span class="pl-c">// interactive = this._getInteractive(set, props);</span></td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code js-file-line">        <span class="pl-c">// //pass through all events</span></td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code js-file-line">        <span class="pl-c">// if (interactive) {</span></td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code js-file-line">        <span class="pl-c">//     obj.interactive = interactive;</span></td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code js-file-line">        <span class="pl-c">//     obj.click = this.onObjectEvent.bind(this, &#39;click&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code js-file-line">        <span class="pl-c">//     obj.mousedown = this.onObjectEvent.bind(this, &#39;mousedown&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code js-file-line">        <span class="pl-c">//     obj.mouseup = this.onObjectEvent.bind(this, &#39;mouseup&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code js-file-line">        <span class="pl-c">//     obj.mousemove = this.onObjectEvent.bind(this, &#39;mousemove&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code js-file-line">        <span class="pl-c">//     obj.mouseout = this.onObjectEvent.bind(this, &#39;mouseout&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code js-file-line">        <span class="pl-c">//     obj.mouseover = this.onObjectEvent.bind(this, &#39;mouseover&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code js-file-line">        <span class="pl-c">//     obj.mouseupoutside = this.onObjectEvent.bind(this, &#39;mouseupoutside&#39;, obj);</span></td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code js-file-line">        <span class="pl-c">// }</span></td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code js-file-line">        <span class="pl-c">//set custom properties</span></td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code js-file-line">        obj.properties <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code js-file-line">        <span class="pl-k">for</span>(<span class="pl-s">var</span> t <span class="pl-k">in</span> props.tileprops) {</td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code js-file-line">            obj.properties[t] <span class="pl-k">=</span> props.tileprops[t];</td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code js-file-line">        <span class="pl-k">for</span>(<span class="pl-s">var</span> k <span class="pl-k">in</span> props) {</td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code js-file-line">            <span class="pl-k">if</span>(k <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tileprops<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code js-file-line">                obj.properties[k] <span class="pl-k">=</span> props[k];</td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code js-file-line">        obj._objIndex <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code js-file-line">        <span class="pl-k">if</span> (spawnCallback) {</td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code js-file-line">            spawnCallback(obj);</td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getObject</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.objects.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.objects[i].<span class="pl-sc">name</span> <span class="pl-k">===</span> name) {</td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code js-file-line">            <span class="pl-k">return</span> <span class="pl-v">this</span>.objects[i];</td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code js-file-line"><span class="pl-c"> * Called internally whenever an event happens on an object, used to echo to the map.</span></td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code js-file-line"><span class="pl-c"> * @method onObjectEvent</span></td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code js-file-line"><span class="pl-c"> * @param eventName {String} The name of the event</span></td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code js-file-line"><span class="pl-c"> * @param obj {Container|Sprite} The object the event happened to</span></td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code js-file-line"><span class="pl-c"> * @param data {mixed} The event data that was passed along</span></td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">onObjectEvent</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">eventName</span>, <span class="pl-vpf">obj</span>, <span class="pl-vpf">data</span>) {</td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code js-file-line">    <span class="pl-v">this</span>.map.onObjectEvent(eventName, obj, data);</td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code js-file-line"><span class="pl-c"> * Creates a polygon from the vertices in a polygon Tiled property</span></td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code js-file-line"><span class="pl-c"> * @method _getPolygon</span></td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code js-file-line"><span class="pl-c"> * @param obj {Object} The polygon Tiled object</span></td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code js-file-line"><span class="pl-c"> * @return {Polygon} The polygon created</span></td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getPolygon</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">o</span>) {</td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code js-file-line">    <span class="pl-s">var</span> points <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> o.polygon.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code js-file-line">        points.<span class="pl-s3">push</span>(<span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(o.polygon[i].<span class="pl-sc">x</span>, o.polygon[i].<span class="pl-sc">y</span>));</td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Polygon</span>(points);</td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code js-file-line"><span class="pl-c"> * Creates a polyline from the vertices in a polyline Tiled property</span></td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code js-file-line"><span class="pl-c"> * @method _getPolyline</span></td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code js-file-line"><span class="pl-c"> * @param obj {Object} The polyline Tiled object</span></td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code js-file-line"><span class="pl-c"> * @return {Polygon} The polyline created</span></td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getPolyline</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">o</span>) {</td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code js-file-line">    <span class="pl-s">var</span> points <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> o.polyline.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code js-file-line">        points.<span class="pl-s3">push</span>(<span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(o.polyline[i].<span class="pl-sc">x</span>, o.polyline[i].<span class="pl-sc">y</span>));</td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Polygon</span>(points);</td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code js-file-line"><span class="pl-c"> * Creates a ellipse from the vertices in a ellipse Tiled property</span></td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code js-file-line"><span class="pl-c"> * @method _getEllipse</span></td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code js-file-line"><span class="pl-c"> * @param obj {Object} The ellipse Tiled object</span></td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code js-file-line"><span class="pl-c"> * @return {Ellipse} The ellipse created</span></td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getEllipse</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">o</span>) {</td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Ellipse</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, o.<span class="pl-sc">width</span>, o.<span class="pl-sc">height</span>);</td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code js-file-line"><span class="pl-c"> * Creates a rectangle from the vertices in a rectangle Tiled property</span></td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code js-file-line"><span class="pl-c"> * @method _getRectangle</span></td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code js-file-line"><span class="pl-c"> * @param obj {Object} The rectangle Tiled object</span></td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code js-file-line"><span class="pl-c"> * @return {Rectangle} The rectangle created</span></td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getRectangle</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">o</span>) {</td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Rectangle</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, o.<span class="pl-sc">width</span>, o.<span class="pl-sc">height</span>);</td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code js-file-line"><span class="pl-c"> * Checks if an object should be marked as interactive</span></td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code js-file-line"><span class="pl-c"> * @method _getInteractive</span></td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code js-file-line"><span class="pl-c"> * @param set {Tileset} The tileset for the object</span></td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code js-file-line"><span class="pl-c"> * @param props {Object} The Tiled properties object</span></td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code js-file-line"><span class="pl-c"> * @return {Boolean} Whether or not the item is interactive</span></td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getInteractive</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">set</span>, <span class="pl-vpf">props</span>) {</td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code js-file-line">    <span class="pl-c">//TODO: This is wrong, if &#39;false&#39; is set on a lower level a higher level will override</span></td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code js-file-line">    <span class="pl-c">//first check the lowest level value (on the tile iteself)</span></td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code js-file-line">    <span class="pl-k">return</span> props.interactive <span class="pl-k">||</span> <span class="pl-c">//obj interactive</span></td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code js-file-line">            props.tileprops.interactive <span class="pl-k">||</span> <span class="pl-c">//tile object interactive</span></td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code js-file-line">            (set <span class="pl-k">&amp;&amp;</span> set.properties.interactive) <span class="pl-k">||</span> <span class="pl-c">//tileset interactive</span></td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code js-file-line">            <span class="pl-v">this</span>.properties.interactive <span class="pl-k">||</span> <span class="pl-c">//layer interactive</span></td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code js-file-line">            <span class="pl-v">this</span>.map.properties.interactive; <span class="pl-c">//map interactive</span></td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code js-file-line"><span class="pl-c"> * Despawns all the sprites associated with this layer</span></td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code js-file-line"><span class="pl-c"> * @method despawn</span></td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code js-file-line"><span class="pl-c"> * @param destroy {Boolean} Should we destroy the children as well?</span></td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code js-file-line"><span class="pl-c"> * @return {Objectlayer} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">despawn</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">destroy</span>) {</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code js-file-line">    <span class="pl-k">return</span> Phaser.Group.<span class="pl-sc">prototype</span>.removeAll.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, destroy);</td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code js-file-line"><span class="pl-c"> * Destroys the group completely</span></td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code js-file-line"><span class="pl-c"> * @method destroy</span></td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code js-file-line"><span class="pl-s3">Objectlayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">destroy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code js-file-line">    Phaser.Group.<span class="pl-sc">prototype</span>.destroy.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code js-file-line">    <span class="pl-v">this</span>.map <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code js-file-line">    <span class="pl-v">this</span>.game <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code js-file-line">    <span class="pl-v">this</span>.state <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">name</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">color</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code js-file-line">    <span class="pl-v">this</span>.objects <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">type</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>../utils<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>}],<span class="pl-c1">13</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code js-file-line"><span class="pl-c"> * Base Tile implementation, a tile is a single tile in a tilemap layer</span></td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code js-file-line"><span class="pl-c"> * @class Tile</span></td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code js-file-line"><span class="pl-c"> * @extends Phaser.Sprite</span></td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code js-file-line"><span class="pl-c"> * @constructor</span></td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Tile</span>(<span class="pl-vpf">game</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">tileId</span>, <span class="pl-vpf">tileset</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code js-file-line">    Phaser.Sprite.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code js-file-line">        game,</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code js-file-line">        (x <span class="pl-k">*</span> tileset.tileWidth) <span class="pl-k">+</span> tileset.tileoffset.<span class="pl-sc">x</span>,</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code js-file-line">        (y <span class="pl-k">*</span> tileset.tileHeight) <span class="pl-k">+</span> tileset.tileoffset.<span class="pl-sc">y</span>,</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code js-file-line">        tileset.getTileTexture(tileId)</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code js-file-line">    );</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">type</span> <span class="pl-k">=</span> Phaser.TILESPRITE;</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code js-file-line"><span class="pl-c">    * @property {object} layer - The layer in the Tilemap data that this tile belongs to.</span></td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code js-file-line">    <span class="pl-v">this</span>.layer <span class="pl-k">=</span> layer;</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code js-file-line"><span class="pl-c">    * @property {object} tileset - The tileset that this tile&#39;s texture is from.</span></td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileset <span class="pl-k">=</span> tileset;</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code js-file-line"><span class="pl-c">    * @property {Phaser.Point} tilePosition - The position of the tile in &#39;tile coords&#39;</span></td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code js-file-line">    <span class="pl-v">this</span>.tilePosition <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(x, y);</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code js-file-line"><span class="pl-c">    * @property {number} centerX - The center of the tile.</span></td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code js-file-line">    <span class="pl-v">this</span>.centerX <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(tileset.tileWidth / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code js-file-line"><span class="pl-c">    * @property {number} centerY - The height of the tile in pixels.</span></td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code js-file-line">    <span class="pl-v">this</span>.centerY <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(tileset.tileHeight / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code js-file-line"><span class="pl-c">    * @property {object} properties - Tile specific properties.</span></td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> tileset.getTileProperties(tileId);</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} scanned - Has this tile been walked / turned into a poly?</span></td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code js-file-line">    <span class="pl-v">this</span>.scanned <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} faceTop - Is the top of this tile an interesting edge?</span></td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceTop <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} faceBottom - Is the bottom of this tile an interesting edge?</span></td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceBottom <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} faceLeft - Is the left of this tile an interesting edge?</span></td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceLeft <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} faceRight - Is the right of this tile an interesting edge?</span></td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceRight <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} collideLeft - Indicating collide with any object on the left.</span></td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideLeft <span class="pl-k">=</span> <span class="pl-v">this</span>.properties.collideLeft <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code js-file-line">        <span class="pl-v">this</span>.properties.collideLeft <span class="pl-k">:</span> (<span class="pl-v">this</span>.properties.collides <span class="pl-k">||</span> <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} collideRight - Indicating collide with any object on the right.</span></td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideRight <span class="pl-k">=</span> <span class="pl-v">this</span>.properties.collideRight <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code js-file-line">        <span class="pl-v">this</span>.properties.collideRight <span class="pl-k">:</span> (<span class="pl-v">this</span>.properties.collides <span class="pl-k">||</span> <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} collideUp - Indicating collide with any object on the top.</span></td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideUp <span class="pl-k">=</span> <span class="pl-v">this</span>.properties.collideUp <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code js-file-line">        <span class="pl-v">this</span>.properties.collideUp <span class="pl-k">:</span> (<span class="pl-v">this</span>.properties.collides <span class="pl-k">||</span> <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} collideDown - Indicating collide with any object on the bottom.</span></td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideDown <span class="pl-k">=</span> <span class="pl-v">this</span>.properties.collideDown <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code js-file-line">        <span class="pl-v">this</span>.properties.collideDown <span class="pl-k">:</span> (<span class="pl-v">this</span>.properties.collides <span class="pl-k">||</span> <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code js-file-line"><span class="pl-c">    * @property {function} collisionCallback - Tile collision callback.</span></td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallback <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code js-file-line"><span class="pl-c">    * @property {object} collisionCallbackContext - The context in which the collision callback will be called.</span></td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallbackContext <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code js-file-line">    <span class="pl-c">// load animation data</span></td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code js-file-line">    <span class="pl-s">var</span> animData <span class="pl-k">=</span> tileset.getTileAnimations(tileId);</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code js-file-line">    <span class="pl-k">if</span> (animData) {</td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code js-file-line">        <span class="pl-v">this</span>.animations.copyFrameData(animData.<span class="pl-sc">data</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code js-file-line">        <span class="pl-v">this</span>.animations.<span class="pl-s3">add</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tile<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">null</span>, animData.rate, <span class="pl-c1">true</span>).play();</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code js-file-line">    <span class="pl-c">// set the blend mode</span></td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code js-file-line">    <span class="pl-v">this</span>.blendMode <span class="pl-k">=</span> (<span class="pl-v">this</span>.properties.blendMode <span class="pl-k">||</span> layer.properties.blendMode) <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code js-file-line">        Phaser.blendModes[(<span class="pl-v">this</span>.properties.blendMode <span class="pl-k">||</span> layer.properties.blendMode)] <span class="pl-k">:</span> Phaser.blendModes.NORMAL;</td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code js-file-line">    <span class="pl-c">// setup the flipped states</span></td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.properties.flippedX) {</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code js-file-line">        <span class="pl-v">this</span>.scale.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">x</span> <span class="pl-k">+=</span> tileset.tileWidth;</td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.properties.flippedY) {</td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code js-file-line">        <span class="pl-v">this</span>.scale.<span class="pl-sc">y</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">y</span> <span class="pl-k">+=</span> tileset.tileHeight;</td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code js-file-line">    <span class="pl-c">// from Tiled Editor:</span></td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code js-file-line">    <span class="pl-c">// https://github.com/bjorn/tiled/blob/b059a13b2864ea029fb741a90780d31cf5b67043/src/libtiled/maprenderer.cpp#L135-L145</span></td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.properties.flippedAD) {</td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code js-file-line">        <span class="pl-v">this</span>.rotation <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.degToRad(<span class="pl-c1">90</span>);</td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code js-file-line">        <span class="pl-v">this</span>.scale.<span class="pl-sc">x</span> <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code js-file-line">        <span class="pl-s">var</span> sx <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code js-file-line">        <span class="pl-v">this</span>.scale.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code js-file-line">        <span class="pl-v">this</span>.scale.<span class="pl-sc">y</span> <span class="pl-k">=</span> sx;</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code js-file-line">        <span class="pl-s">var</span> halfDiff <span class="pl-k">=</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(<span class="pl-v">this</span>.<span class="pl-sc">height</span> / <span class="pl-c1">2</span>) <span class="pl-k">-</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span> / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">y</span> <span class="pl-k">+=</span> halfDiff;</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">x</span> <span class="pl-k">+=</span> halfDiff;</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-s3">Object</span>.create(Phaser.Sprite.<span class="pl-sc">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">constructor</span> <span class="pl-k">=</span> Tile;</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> Tile;</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code js-file-line"><span class="pl-c">* Check if the given x and y world coordinates are within this Tile.</span></td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#containsPoint</span></td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - The x coordinate to test.</span></td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - The y coordinate to test.</span></td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code js-file-line"><span class="pl-c">* @return {boolean} True if the coordinates are within this Tile, otherwise false.</span></td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">containsPoint</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!</span>(x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.worldX <span class="pl-k">||</span> y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.worldY <span class="pl-k">||</span> x <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.<span class="pl-sc">right</span> <span class="pl-k">||</span> y <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.<span class="pl-sc">bottom</span>);</td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code js-file-line"><span class="pl-c">* Check for intersection with this tile.</span></td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#intersects</span></td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - The x axis in pixels.</span></td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - The y axis in pixels.</span></td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code js-file-line"><span class="pl-c">* @param {number} right - The right point.</span></td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code js-file-line"><span class="pl-c">* @param {number} bottom - The bottom point.</span></td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">intersects</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">right</span>, <span class="pl-vpf">bottom</span>) {</td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code js-file-line">    <span class="pl-k">if</span> (right <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.worldX)</td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code js-file-line">    <span class="pl-k">if</span> (bottom <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.worldY)</td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.worldX <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span>)</td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code js-file-line">    <span class="pl-k">if</span> (y <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.worldY <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-sc">height</span>)</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code js-file-line"><span class="pl-c">* Set a callback to be called when this tile is hit by an object.</span></td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code js-file-line"><span class="pl-c">* The callback must true true for collision processing to take place.</span></td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#setCollisionCallback</span></td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code js-file-line"><span class="pl-c">* @param {function} callback - Callback function.</span></td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code js-file-line"><span class="pl-c">* @param {object} context - Callback will be called within this context.</span></td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setCollisionCallback</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">callback</span>, <span class="pl-vpf">context</span>) {</td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallback <span class="pl-k">=</span> callback;</td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallbackContext <span class="pl-k">=</span> context;</td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code js-file-line"><span class="pl-c">* Clean up memory.</span></td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#destroy</span></td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">destroy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallback <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallbackContext <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code js-file-line"><span class="pl-c">* Sets the collision flags for each side of this tile and updates the interesting faces list.</span></td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#setCollision</span></td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} left - Indicating collide with any object on the left.</span></td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} right - Indicating collide with any object on the right.</span></td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} up - Indicating collide with any object on the top.</span></td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} down - Indicating collide with any object on the bottom.</span></td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setCollision</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">left</span>, <span class="pl-vpf">right</span>, <span class="pl-vpf">up</span>, <span class="pl-vpf">down</span>) {</td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideLeft <span class="pl-k">=</span> left;</td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideRight <span class="pl-k">=</span> right;</td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideUp <span class="pl-k">=</span> up;</td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideDown <span class="pl-k">=</span> down;</td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceLeft <span class="pl-k">=</span> left;</td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceRight <span class="pl-k">=</span> right;</td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceTop <span class="pl-k">=</span> up;</td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceBottom <span class="pl-k">=</span> down;</td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code js-file-line"><span class="pl-c">* Reset collision status flags.</span></td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#resetCollision</span></td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">resetCollision</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideLeft <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideRight <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideUp <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideDown <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceLeft <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceRight <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceTop <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code js-file-line">    <span class="pl-v">this</span>.faceBottom <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code js-file-line"><span class="pl-c">* Is this tile interesting?</span></td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#isInteresting</span></td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} collides - If true will check any collides value.</span></td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} faces - If true will check any face value.</span></td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code js-file-line"><span class="pl-c">* @return {boolean} True if the Tile is interesting, otherwise false.</span></td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">isInteresting</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">collides</span>, <span class="pl-vpf">faces</span>) {</td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code js-file-line">    <span class="pl-k">if</span> (collides <span class="pl-k">&amp;&amp;</span> faces)</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code js-file-line">        <span class="pl-c">//  Does this tile have any collide flags OR interesting face?</span></td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code js-file-line">        <span class="pl-k">return</span> (<span class="pl-v">this</span>.collideLeft <span class="pl-k">||</span> <span class="pl-v">this</span>.collideRight <span class="pl-k">||</span> <span class="pl-v">this</span>.collideUp <span class="pl-k">||</span> <span class="pl-v">this</span>.collideDown <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code js-file-line">            <span class="pl-v">this</span>.faceTop <span class="pl-k">||</span> <span class="pl-v">this</span>.faceBottom <span class="pl-k">||</span> <span class="pl-v">this</span>.faceLeft <span class="pl-k">||</span> <span class="pl-v">this</span>.faceRight <span class="pl-k">||</span> <span class="pl-v">this</span>.collisionCallback);</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (collides)</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code js-file-line">        <span class="pl-c">//  Does this tile collide?</span></td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code js-file-line">        <span class="pl-k">return</span> (<span class="pl-v">this</span>.collideLeft <span class="pl-k">||</span> <span class="pl-v">this</span>.collideRight <span class="pl-k">||</span> <span class="pl-v">this</span>.collideUp <span class="pl-k">||</span> <span class="pl-v">this</span>.collideDown);</td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (faces)</td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code js-file-line">        <span class="pl-c">//  Does this tile have an interesting face?</span></td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code js-file-line">        <span class="pl-k">return</span> (<span class="pl-v">this</span>.faceTop <span class="pl-k">||</span> <span class="pl-v">this</span>.faceBottom <span class="pl-k">||</span> <span class="pl-v">this</span>.faceLeft <span class="pl-k">||</span> <span class="pl-v">this</span>.faceRight);</td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code js-file-line"><span class="pl-c">* Copies the tile data and properties from the given tile to this tile.</span></td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tile#copy</span></td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code js-file-line"><span class="pl-c">* @param {Phaser.Tile} tile - The tile to copy from.</span></td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code js-file-line"><span class="pl-s3">Tile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tile</span>) {</td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">index</span> <span class="pl-k">=</span> tile.<span class="pl-sc">index</span>;</td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code js-file-line">    <span class="pl-v">this</span>.alpha <span class="pl-k">=</span> tile.alpha;</td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> tile.properties;</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideUp <span class="pl-k">=</span> tile.collideUp;</td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideDown <span class="pl-k">=</span> tile.collideDown;</td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideLeft <span class="pl-k">=</span> tile.collideLeft;</td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideRight <span class="pl-k">=</span> tile.collideRight;</td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallback <span class="pl-k">=</span> tile.collisionCallback;</td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code js-file-line">    <span class="pl-v">this</span>.collisionCallbackContext <span class="pl-k">=</span> tile.collisionCallbackContext;</td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>worldX<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.position.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">val</span>) {</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">x</span> <span class="pl-k">=</span> val;</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>worldY<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.position.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">val</span>) {</td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">y</span> <span class="pl-k">=</span> val;</td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tile#collides</span></td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code js-file-line"><span class="pl-c">* @property {boolean} collides - True if this tile can collide on any of its faces.</span></td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code js-file-line"><span class="pl-c">* @readonly</span></td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>collides<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code js-file-line">        <span class="pl-k">return</span> (<span class="pl-v">this</span>.collideLeft <span class="pl-k">||</span> <span class="pl-v">this</span>.collideRight <span class="pl-k">||</span> <span class="pl-v">this</span>.collideUp <span class="pl-k">||</span> <span class="pl-v">this</span>.collideDown);</td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tile#canCollide</span></td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code js-file-line"><span class="pl-c">* @property {boolean} canCollide - True if this tile can collide on any of its faces or has a collision callback set.</span></td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code js-file-line"><span class="pl-c">* @readonly</span></td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>canCollide<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code js-file-line">        <span class="pl-k">return</span> (<span class="pl-v">this</span>.collideLeft <span class="pl-k">||</span> <span class="pl-v">this</span>.collideRight <span class="pl-k">||</span> <span class="pl-v">this</span>.collideUp <span class="pl-k">||</span> <span class="pl-v">this</span>.collideDown <span class="pl-k">||</span> <span class="pl-v">this</span>.collisionCallback);</td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tile#left</span></td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code js-file-line"><span class="pl-c">* @property {number} left - The x value in pixels.</span></td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code js-file-line"><span class="pl-c">* @readonly</span></td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>left<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.worldX;</td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2905" class="blob-num js-line-number" data-line-number="2905"></td>
        <td id="LC2905" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2906" class="blob-num js-line-number" data-line-number="2906"></td>
        <td id="LC2906" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2907" class="blob-num js-line-number" data-line-number="2907"></td>
        <td id="LC2907" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2908" class="blob-num js-line-number" data-line-number="2908"></td>
        <td id="LC2908" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2909" class="blob-num js-line-number" data-line-number="2909"></td>
        <td id="LC2909" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tile#right</span></td>
      </tr>
      <tr>
        <td id="L2910" class="blob-num js-line-number" data-line-number="2910"></td>
        <td id="LC2910" class="blob-code js-file-line"><span class="pl-c">* @property {number} right - The sum of the x and width properties.</span></td>
      </tr>
      <tr>
        <td id="L2911" class="blob-num js-line-number" data-line-number="2911"></td>
        <td id="LC2911" class="blob-code js-file-line"><span class="pl-c">* @readonly</span></td>
      </tr>
      <tr>
        <td id="L2912" class="blob-num js-line-number" data-line-number="2912"></td>
        <td id="LC2912" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2913" class="blob-num js-line-number" data-line-number="2913"></td>
        <td id="LC2913" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>right<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2914" class="blob-num js-line-number" data-line-number="2914"></td>
        <td id="LC2914" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2915" class="blob-num js-line-number" data-line-number="2915"></td>
        <td id="LC2915" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2916" class="blob-num js-line-number" data-line-number="2916"></td>
        <td id="LC2916" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.worldX <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L2917" class="blob-num js-line-number" data-line-number="2917"></td>
        <td id="LC2917" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2918" class="blob-num js-line-number" data-line-number="2918"></td>
        <td id="LC2918" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2919" class="blob-num js-line-number" data-line-number="2919"></td>
        <td id="LC2919" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2920" class="blob-num js-line-number" data-line-number="2920"></td>
        <td id="LC2920" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2921" class="blob-num js-line-number" data-line-number="2921"></td>
        <td id="LC2921" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2922" class="blob-num js-line-number" data-line-number="2922"></td>
        <td id="LC2922" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tile#top</span></td>
      </tr>
      <tr>
        <td id="L2923" class="blob-num js-line-number" data-line-number="2923"></td>
        <td id="LC2923" class="blob-code js-file-line"><span class="pl-c">* @property {number} top - The y value.</span></td>
      </tr>
      <tr>
        <td id="L2924" class="blob-num js-line-number" data-line-number="2924"></td>
        <td id="LC2924" class="blob-code js-file-line"><span class="pl-c">* @readonly</span></td>
      </tr>
      <tr>
        <td id="L2925" class="blob-num js-line-number" data-line-number="2925"></td>
        <td id="LC2925" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2926" class="blob-num js-line-number" data-line-number="2926"></td>
        <td id="LC2926" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>top<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2927" class="blob-num js-line-number" data-line-number="2927"></td>
        <td id="LC2927" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2928" class="blob-num js-line-number" data-line-number="2928"></td>
        <td id="LC2928" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2929" class="blob-num js-line-number" data-line-number="2929"></td>
        <td id="LC2929" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.worldY;</td>
      </tr>
      <tr>
        <td id="L2930" class="blob-num js-line-number" data-line-number="2930"></td>
        <td id="LC2930" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2931" class="blob-num js-line-number" data-line-number="2931"></td>
        <td id="LC2931" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2932" class="blob-num js-line-number" data-line-number="2932"></td>
        <td id="LC2932" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2933" class="blob-num js-line-number" data-line-number="2933"></td>
        <td id="LC2933" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2934" class="blob-num js-line-number" data-line-number="2934"></td>
        <td id="LC2934" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2935" class="blob-num js-line-number" data-line-number="2935"></td>
        <td id="LC2935" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tile#bottom</span></td>
      </tr>
      <tr>
        <td id="L2936" class="blob-num js-line-number" data-line-number="2936"></td>
        <td id="LC2936" class="blob-code js-file-line"><span class="pl-c">* @property {number} bottom - The sum of the y and height properties.</span></td>
      </tr>
      <tr>
        <td id="L2937" class="blob-num js-line-number" data-line-number="2937"></td>
        <td id="LC2937" class="blob-code js-file-line"><span class="pl-c">* @readonly</span></td>
      </tr>
      <tr>
        <td id="L2938" class="blob-num js-line-number" data-line-number="2938"></td>
        <td id="LC2938" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L2939" class="blob-num js-line-number" data-line-number="2939"></td>
        <td id="LC2939" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tile.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>bottom<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2940" class="blob-num js-line-number" data-line-number="2940"></td>
        <td id="LC2940" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2941" class="blob-num js-line-number" data-line-number="2941"></td>
        <td id="LC2941" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L2942" class="blob-num js-line-number" data-line-number="2942"></td>
        <td id="LC2942" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.worldY <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-sc">height</span>;</td>
      </tr>
      <tr>
        <td id="L2943" class="blob-num js-line-number" data-line-number="2943"></td>
        <td id="LC2943" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2944" class="blob-num js-line-number" data-line-number="2944"></td>
        <td id="LC2944" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2945" class="blob-num js-line-number" data-line-number="2945"></td>
        <td id="LC2945" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2946" class="blob-num js-line-number" data-line-number="2946"></td>
        <td id="LC2946" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2947" class="blob-num js-line-number" data-line-number="2947"></td>
        <td id="LC2947" class="blob-code js-file-line">},{}],<span class="pl-c1">14</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L2948" class="blob-num js-line-number" data-line-number="2948"></td>
        <td id="LC2948" class="blob-code js-file-line"><span class="pl-s">var</span> Tile <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./Tile<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2949" class="blob-num js-line-number" data-line-number="2949"></td>
        <td id="LC2949" class="blob-code js-file-line">    utils <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../utils<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2950" class="blob-num js-line-number" data-line-number="2950"></td>
        <td id="LC2950" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2951" class="blob-num js-line-number" data-line-number="2951"></td>
        <td id="LC2951" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2952" class="blob-num js-line-number" data-line-number="2952"></td>
        <td id="LC2952" class="blob-code js-file-line"><span class="pl-c"> * The Tilelayer is the visual tiled layer that actually displays on the screen</span></td>
      </tr>
      <tr>
        <td id="L2953" class="blob-num js-line-number" data-line-number="2953"></td>
        <td id="LC2953" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2954" class="blob-num js-line-number" data-line-number="2954"></td>
        <td id="LC2954" class="blob-code js-file-line"><span class="pl-c"> * This class will be created by the Tilemap.</span></td>
      </tr>
      <tr>
        <td id="L2955" class="blob-num js-line-number" data-line-number="2955"></td>
        <td id="LC2955" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2956" class="blob-num js-line-number" data-line-number="2956"></td>
        <td id="LC2956" class="blob-code js-file-line"><span class="pl-c"> * @class Tilelayer</span></td>
      </tr>
      <tr>
        <td id="L2957" class="blob-num js-line-number" data-line-number="2957"></td>
        <td id="LC2957" class="blob-code js-file-line"><span class="pl-c"> * @extends Group</span></td>
      </tr>
      <tr>
        <td id="L2958" class="blob-num js-line-number" data-line-number="2958"></td>
        <td id="LC2958" class="blob-code js-file-line"><span class="pl-c"> * @constructor</span></td>
      </tr>
      <tr>
        <td id="L2959" class="blob-num js-line-number" data-line-number="2959"></td>
        <td id="LC2959" class="blob-code js-file-line"><span class="pl-c"> * @param game {Phaser.Game} The game instance this belongs to</span></td>
      </tr>
      <tr>
        <td id="L2960" class="blob-num js-line-number" data-line-number="2960"></td>
        <td id="LC2960" class="blob-code js-file-line"><span class="pl-c"> * @param map {Tilemap} The tilemap instance that this belongs to</span></td>
      </tr>
      <tr>
        <td id="L2961" class="blob-num js-line-number" data-line-number="2961"></td>
        <td id="LC2961" class="blob-code js-file-line"><span class="pl-c"> * @param index {Number} The index of the layer in the tilemap</span></td>
      </tr>
      <tr>
        <td id="L2962" class="blob-num js-line-number" data-line-number="2962"></td>
        <td id="LC2962" class="blob-code js-file-line"><span class="pl-c"> * @param width {Number} The width of the renderable area of the layer</span></td>
      </tr>
      <tr>
        <td id="L2963" class="blob-num js-line-number" data-line-number="2963"></td>
        <td id="LC2963" class="blob-code js-file-line"><span class="pl-c"> * @param height {Number} The height of the renderable area of the layer</span></td>
      </tr>
      <tr>
        <td id="L2964" class="blob-num js-line-number" data-line-number="2964"></td>
        <td id="LC2964" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2965" class="blob-num js-line-number" data-line-number="2965"></td>
        <td id="LC2965" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L2966" class="blob-num js-line-number" data-line-number="2966"></td>
        <td id="LC2966" class="blob-code js-file-line"><span class="pl-c">// TODO: Add chunk prerendering?</span></td>
      </tr>
      <tr>
        <td id="L2967" class="blob-num js-line-number" data-line-number="2967"></td>
        <td id="LC2967" class="blob-code js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L2968" class="blob-num js-line-number" data-line-number="2968"></td>
        <td id="LC2968" class="blob-code js-file-line"><span class="pl-c">// for discussions about this implementation:</span></td>
      </tr>
      <tr>
        <td id="L2969" class="blob-num js-line-number" data-line-number="2969"></td>
        <td id="LC2969" class="blob-code js-file-line"><span class="pl-c">//   see: https://github.com/GoodBoyDigital/pixi.js/issues/48</span></td>
      </tr>
      <tr>
        <td id="L2970" class="blob-num js-line-number" data-line-number="2970"></td>
        <td id="LC2970" class="blob-code js-file-line"><span class="pl-c">//   and: https://github.com/photonstorm/phaser/issues/1145</span></td>
      </tr>
      <tr>
        <td id="L2971" class="blob-num js-line-number" data-line-number="2971"></td>
        <td id="LC2971" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Tilelayer</span>(<span class="pl-vpf">game</span>, <span class="pl-vpf">map</span>, <span class="pl-vpf">layer</span>, <span class="pl-vpf">index</span>) {</td>
      </tr>
      <tr>
        <td id="L2972" class="blob-num js-line-number" data-line-number="2972"></td>
        <td id="LC2972" class="blob-code js-file-line">    Phaser.Group.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, game, map);</td>
      </tr>
      <tr>
        <td id="L2973" class="blob-num js-line-number" data-line-number="2973"></td>
        <td id="LC2973" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2974" class="blob-num js-line-number" data-line-number="2974"></td>
        <td id="LC2974" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">index</span> <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L2975" class="blob-num js-line-number" data-line-number="2975"></td>
        <td id="LC2975" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2976" class="blob-num js-line-number" data-line-number="2976"></td>
        <td id="LC2976" class="blob-code js-file-line">    <span class="pl-c">// Non-Tiled related properties</span></td>
      </tr>
      <tr>
        <td id="L2977" class="blob-num js-line-number" data-line-number="2977"></td>
        <td id="LC2977" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2978" class="blob-num js-line-number" data-line-number="2978"></td>
        <td id="LC2978" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2979" class="blob-num js-line-number" data-line-number="2979"></td>
        <td id="LC2979" class="blob-code js-file-line"><span class="pl-c">     * The map instance this tilelayer belongs to</span></td>
      </tr>
      <tr>
        <td id="L2980" class="blob-num js-line-number" data-line-number="2980"></td>
        <td id="LC2980" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2981" class="blob-num js-line-number" data-line-number="2981"></td>
        <td id="LC2981" class="blob-code js-file-line"><span class="pl-c">     * @property map</span></td>
      </tr>
      <tr>
        <td id="L2982" class="blob-num js-line-number" data-line-number="2982"></td>
        <td id="LC2982" class="blob-code js-file-line"><span class="pl-c">     * @type Tilemap</span></td>
      </tr>
      <tr>
        <td id="L2983" class="blob-num js-line-number" data-line-number="2983"></td>
        <td id="LC2983" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2984" class="blob-num js-line-number" data-line-number="2984"></td>
        <td id="LC2984" class="blob-code js-file-line">    <span class="pl-v">this</span>.map <span class="pl-k">=</span> map;</td>
      </tr>
      <tr>
        <td id="L2985" class="blob-num js-line-number" data-line-number="2985"></td>
        <td id="LC2985" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2986" class="blob-num js-line-number" data-line-number="2986"></td>
        <td id="LC2986" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2987" class="blob-num js-line-number" data-line-number="2987"></td>
        <td id="LC2987" class="blob-code js-file-line"><span class="pl-c">     * The const type of this object.</span></td>
      </tr>
      <tr>
        <td id="L2988" class="blob-num js-line-number" data-line-number="2988"></td>
        <td id="LC2988" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2989" class="blob-num js-line-number" data-line-number="2989"></td>
        <td id="LC2989" class="blob-code js-file-line"><span class="pl-c">     * @property type</span></td>
      </tr>
      <tr>
        <td id="L2990" class="blob-num js-line-number" data-line-number="2990"></td>
        <td id="LC2990" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L2991" class="blob-num js-line-number" data-line-number="2991"></td>
        <td id="LC2991" class="blob-code js-file-line"><span class="pl-c">     * @default</span></td>
      </tr>
      <tr>
        <td id="L2992" class="blob-num js-line-number" data-line-number="2992"></td>
        <td id="LC2992" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L2993" class="blob-num js-line-number" data-line-number="2993"></td>
        <td id="LC2993" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">type</span> <span class="pl-k">=</span> Phaser.TILEMAPLAYER;</td>
      </tr>
      <tr>
        <td id="L2994" class="blob-num js-line-number" data-line-number="2994"></td>
        <td id="LC2994" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2995" class="blob-num js-line-number" data-line-number="2995"></td>
        <td id="LC2995" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2996" class="blob-num js-line-number" data-line-number="2996"></td>
        <td id="LC2996" class="blob-code js-file-line"><span class="pl-c">    * An object that is fixed to the camera ignores the position of any ancestors in the display list</span></td>
      </tr>
      <tr>
        <td id="L2997" class="blob-num js-line-number" data-line-number="2997"></td>
        <td id="LC2997" class="blob-code js-file-line"><span class="pl-c">    * and uses its x/y coordinates as offsets from the top left of the camera.</span></td>
      </tr>
      <tr>
        <td id="L2998" class="blob-num js-line-number" data-line-number="2998"></td>
        <td id="LC2998" class="blob-code js-file-line"><span class="pl-c">    *</span></td>
      </tr>
      <tr>
        <td id="L2999" class="blob-num js-line-number" data-line-number="2999"></td>
        <td id="LC2999" class="blob-code js-file-line"><span class="pl-c">    * @property {boolean} fixedToCamera - Fixes this object to the Camera.</span></td>
      </tr>
      <tr>
        <td id="L3000" class="blob-num js-line-number" data-line-number="3000"></td>
        <td id="LC3000" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L3001" class="blob-num js-line-number" data-line-number="3001"></td>
        <td id="LC3001" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L3002" class="blob-num js-line-number" data-line-number="3002"></td>
        <td id="LC3002" class="blob-code js-file-line">    <span class="pl-v">this</span>.fixedToCamera <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3003" class="blob-num js-line-number" data-line-number="3003"></td>
        <td id="LC3003" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3004" class="blob-num js-line-number" data-line-number="3004"></td>
        <td id="LC3004" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3005" class="blob-num js-line-number" data-line-number="3005"></td>
        <td id="LC3005" class="blob-code js-file-line"><span class="pl-c">    * @property {Phaser.Point} cameraOffset - If this object is fixed to the camera then use this Point</span></td>
      </tr>
      <tr>
        <td id="L3006" class="blob-num js-line-number" data-line-number="3006"></td>
        <td id="LC3006" class="blob-code js-file-line"><span class="pl-c">    * to specify how far away from the Camera x/y it&#39;s rendered.</span></td>
      </tr>
      <tr>
        <td id="L3007" class="blob-num js-line-number" data-line-number="3007"></td>
        <td id="LC3007" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L3008" class="blob-num js-line-number" data-line-number="3008"></td>
        <td id="LC3008" class="blob-code js-file-line">    <span class="pl-v">this</span>.cameraOffset <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3009" class="blob-num js-line-number" data-line-number="3009"></td>
        <td id="LC3009" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3010" class="blob-num js-line-number" data-line-number="3010"></td>
        <td id="LC3010" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3011" class="blob-num js-line-number" data-line-number="3011"></td>
        <td id="LC3011" class="blob-code js-file-line"><span class="pl-c">     * All the tiles this layer has</span></td>
      </tr>
      <tr>
        <td id="L3012" class="blob-num js-line-number" data-line-number="3012"></td>
        <td id="LC3012" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3013" class="blob-num js-line-number" data-line-number="3013"></td>
        <td id="LC3013" class="blob-code js-file-line"><span class="pl-c">     * @property tiles</span></td>
      </tr>
      <tr>
        <td id="L3014" class="blob-num js-line-number" data-line-number="3014"></td>
        <td id="LC3014" class="blob-code js-file-line"><span class="pl-c">     * @type Object</span></td>
      </tr>
      <tr>
        <td id="L3015" class="blob-num js-line-number" data-line-number="3015"></td>
        <td id="LC3015" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3016" class="blob-num js-line-number" data-line-number="3016"></td>
        <td id="LC3016" class="blob-code js-file-line">    <span class="pl-v">this</span>.tiles <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3017" class="blob-num js-line-number" data-line-number="3017"></td>
        <td id="LC3017" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3018" class="blob-num js-line-number" data-line-number="3018"></td>
        <td id="LC3018" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3019" class="blob-num js-line-number" data-line-number="3019"></td>
        <td id="LC3019" class="blob-code js-file-line"><span class="pl-c">     * The scroll speed of the layer relative to the camera</span></td>
      </tr>
      <tr>
        <td id="L3020" class="blob-num js-line-number" data-line-number="3020"></td>
        <td id="LC3020" class="blob-code js-file-line"><span class="pl-c">     * (e.g. a scrollFactor of 0.5 scrolls half as quickly as the</span></td>
      </tr>
      <tr>
        <td id="L3021" class="blob-num js-line-number" data-line-number="3021"></td>
        <td id="LC3021" class="blob-code js-file-line"><span class="pl-c">     * &#39;normal&#39; layers do)</span></td>
      </tr>
      <tr>
        <td id="L3022" class="blob-num js-line-number" data-line-number="3022"></td>
        <td id="LC3022" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3023" class="blob-num js-line-number" data-line-number="3023"></td>
        <td id="LC3023" class="blob-code js-file-line"><span class="pl-c">     * @property scroll</span></td>
      </tr>
      <tr>
        <td id="L3024" class="blob-num js-line-number" data-line-number="3024"></td>
        <td id="LC3024" class="blob-code js-file-line"><span class="pl-c">     * @type Phaser.Point</span></td>
      </tr>
      <tr>
        <td id="L3025" class="blob-num js-line-number" data-line-number="3025"></td>
        <td id="LC3025" class="blob-code js-file-line"><span class="pl-c">     * @default new Phaser.Point(1, 1)</span></td>
      </tr>
      <tr>
        <td id="L3026" class="blob-num js-line-number" data-line-number="3026"></td>
        <td id="LC3026" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3027" class="blob-num js-line-number" data-line-number="3027"></td>
        <td id="LC3027" class="blob-code js-file-line">    <span class="pl-c">// TODO: This doesn&#39;t actually work yet!</span></td>
      </tr>
      <tr>
        <td id="L3028" class="blob-num js-line-number" data-line-number="3028"></td>
        <td id="LC3028" class="blob-code js-file-line">    <span class="pl-v">this</span>.scrollFactor <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3029" class="blob-num js-line-number" data-line-number="3029"></td>
        <td id="LC3029" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3030" class="blob-num js-line-number" data-line-number="3030"></td>
        <td id="LC3030" class="blob-code js-file-line">    <span class="pl-c">// Tiled related properties</span></td>
      </tr>
      <tr>
        <td id="L3031" class="blob-num js-line-number" data-line-number="3031"></td>
        <td id="LC3031" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3032" class="blob-num js-line-number" data-line-number="3032"></td>
        <td id="LC3032" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3033" class="blob-num js-line-number" data-line-number="3033"></td>
        <td id="LC3033" class="blob-code js-file-line"><span class="pl-c">     * The name of the layer</span></td>
      </tr>
      <tr>
        <td id="L3034" class="blob-num js-line-number" data-line-number="3034"></td>
        <td id="LC3034" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3035" class="blob-num js-line-number" data-line-number="3035"></td>
        <td id="LC3035" class="blob-code js-file-line"><span class="pl-c">     * @property name</span></td>
      </tr>
      <tr>
        <td id="L3036" class="blob-num js-line-number" data-line-number="3036"></td>
        <td id="LC3036" class="blob-code js-file-line"><span class="pl-c">     * @type String</span></td>
      </tr>
      <tr>
        <td id="L3037" class="blob-num js-line-number" data-line-number="3037"></td>
        <td id="LC3037" class="blob-code js-file-line"><span class="pl-c">     * @default &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="L3038" class="blob-num js-line-number" data-line-number="3038"></td>
        <td id="LC3038" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3039" class="blob-num js-line-number" data-line-number="3039"></td>
        <td id="LC3039" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">name</span> <span class="pl-k">=</span> layer.<span class="pl-sc">name</span> <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3040" class="blob-num js-line-number" data-line-number="3040"></td>
        <td id="LC3040" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3041" class="blob-num js-line-number" data-line-number="3041"></td>
        <td id="LC3041" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3042" class="blob-num js-line-number" data-line-number="3042"></td>
        <td id="LC3042" class="blob-code js-file-line"><span class="pl-c">     * The size of the layer</span></td>
      </tr>
      <tr>
        <td id="L3043" class="blob-num js-line-number" data-line-number="3043"></td>
        <td id="LC3043" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3044" class="blob-num js-line-number" data-line-number="3044"></td>
        <td id="LC3044" class="blob-code js-file-line"><span class="pl-c">     * @property size</span></td>
      </tr>
      <tr>
        <td id="L3045" class="blob-num js-line-number" data-line-number="3045"></td>
        <td id="LC3045" class="blob-code js-file-line"><span class="pl-c">     * @type Phaser.Point</span></td>
      </tr>
      <tr>
        <td id="L3046" class="blob-num js-line-number" data-line-number="3046"></td>
        <td id="LC3046" class="blob-code js-file-line"><span class="pl-c">     * @default new Phaser.Point(1, 1)</span></td>
      </tr>
      <tr>
        <td id="L3047" class="blob-num js-line-number" data-line-number="3047"></td>
        <td id="LC3047" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3048" class="blob-num js-line-number" data-line-number="3048"></td>
        <td id="LC3048" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">size</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(layer.<span class="pl-sc">width</span> <span class="pl-k">||</span> <span class="pl-c1">0</span>, layer.<span class="pl-sc">height</span> <span class="pl-k">||</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3049" class="blob-num js-line-number" data-line-number="3049"></td>
        <td id="LC3049" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3050" class="blob-num js-line-number" data-line-number="3050"></td>
        <td id="LC3050" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3051" class="blob-num js-line-number" data-line-number="3051"></td>
        <td id="LC3051" class="blob-code js-file-line"><span class="pl-c">     * The tile IDs of the tilemap</span></td>
      </tr>
      <tr>
        <td id="L3052" class="blob-num js-line-number" data-line-number="3052"></td>
        <td id="LC3052" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3053" class="blob-num js-line-number" data-line-number="3053"></td>
        <td id="LC3053" class="blob-code js-file-line"><span class="pl-c">     * @property tileIds</span></td>
      </tr>
      <tr>
        <td id="L3054" class="blob-num js-line-number" data-line-number="3054"></td>
        <td id="LC3054" class="blob-code js-file-line"><span class="pl-c">     * @type Uint32Array|Array</span></td>
      </tr>
      <tr>
        <td id="L3055" class="blob-num js-line-number" data-line-number="3055"></td>
        <td id="LC3055" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3056" class="blob-num js-line-number" data-line-number="3056"></td>
        <td id="LC3056" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileIds <span class="pl-k">=</span> Phaser.devicetypedArray <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(layer.<span class="pl-sc">data</span>) <span class="pl-k">:</span> layer.<span class="pl-sc">data</span>;</td>
      </tr>
      <tr>
        <td id="L3057" class="blob-num js-line-number" data-line-number="3057"></td>
        <td id="LC3057" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3058" class="blob-num js-line-number" data-line-number="3058"></td>
        <td id="LC3058" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3059" class="blob-num js-line-number" data-line-number="3059"></td>
        <td id="LC3059" class="blob-code js-file-line"><span class="pl-c">     * The user-defined properties of this group. Usually defined in the TiledEditor</span></td>
      </tr>
      <tr>
        <td id="L3060" class="blob-num js-line-number" data-line-number="3060"></td>
        <td id="LC3060" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3061" class="blob-num js-line-number" data-line-number="3061"></td>
        <td id="LC3061" class="blob-code js-file-line"><span class="pl-c">     * @property properties</span></td>
      </tr>
      <tr>
        <td id="L3062" class="blob-num js-line-number" data-line-number="3062"></td>
        <td id="LC3062" class="blob-code js-file-line"><span class="pl-c">     * @type Object</span></td>
      </tr>
      <tr>
        <td id="L3063" class="blob-num js-line-number" data-line-number="3063"></td>
        <td id="LC3063" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3064" class="blob-num js-line-number" data-line-number="3064"></td>
        <td id="LC3064" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> utils.parseTiledProperties(layer.properties);</td>
      </tr>
      <tr>
        <td id="L3065" class="blob-num js-line-number" data-line-number="3065"></td>
        <td id="LC3065" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3066" class="blob-num js-line-number" data-line-number="3066"></td>
        <td id="LC3066" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3067" class="blob-num js-line-number" data-line-number="3067"></td>
        <td id="LC3067" class="blob-code js-file-line"><span class="pl-c">     * The Tiled type of tile layer, should always be &#39;tilelayer&#39;</span></td>
      </tr>
      <tr>
        <td id="L3068" class="blob-num js-line-number" data-line-number="3068"></td>
        <td id="LC3068" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3069" class="blob-num js-line-number" data-line-number="3069"></td>
        <td id="LC3069" class="blob-code js-file-line"><span class="pl-c">     * @property layerType</span></td>
      </tr>
      <tr>
        <td id="L3070" class="blob-num js-line-number" data-line-number="3070"></td>
        <td id="LC3070" class="blob-code js-file-line"><span class="pl-c">     * @type String</span></td>
      </tr>
      <tr>
        <td id="L3071" class="blob-num js-line-number" data-line-number="3071"></td>
        <td id="LC3071" class="blob-code js-file-line"><span class="pl-c">     * @default &#39;tilelayer&#39;</span></td>
      </tr>
      <tr>
        <td id="L3072" class="blob-num js-line-number" data-line-number="3072"></td>
        <td id="LC3072" class="blob-code js-file-line"><span class="pl-c">     * @readOnly</span></td>
      </tr>
      <tr>
        <td id="L3073" class="blob-num js-line-number" data-line-number="3073"></td>
        <td id="LC3073" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3074" class="blob-num js-line-number" data-line-number="3074"></td>
        <td id="LC3074" class="blob-code js-file-line">    <span class="pl-v">this</span>.layerType <span class="pl-k">=</span> layer.<span class="pl-sc">type</span> <span class="pl-k">||</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tilelayer<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3075" class="blob-num js-line-number" data-line-number="3075"></td>
        <td id="LC3075" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3076" class="blob-num js-line-number" data-line-number="3076"></td>
        <td id="LC3076" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3077" class="blob-num js-line-number" data-line-number="3077"></td>
        <td id="LC3077" class="blob-code js-file-line"><span class="pl-c">    * @property {number} rayStepRate - When ray-casting against tiles this is the number of steps it will jump.</span></td>
      </tr>
      <tr>
        <td id="L3078" class="blob-num js-line-number" data-line-number="3078"></td>
        <td id="LC3078" class="blob-code js-file-line"><span class="pl-c">    * For larger tile sizes you can increase this to improve performance.</span></td>
      </tr>
      <tr>
        <td id="L3079" class="blob-num js-line-number" data-line-number="3079"></td>
        <td id="LC3079" class="blob-code js-file-line"><span class="pl-c">    * @default</span></td>
      </tr>
      <tr>
        <td id="L3080" class="blob-num js-line-number" data-line-number="3080"></td>
        <td id="LC3080" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L3081" class="blob-num js-line-number" data-line-number="3081"></td>
        <td id="LC3081" class="blob-code js-file-line">    <span class="pl-v">this</span>.rayStepRate <span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L3082" class="blob-num js-line-number" data-line-number="3082"></td>
        <td id="LC3082" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3083" class="blob-num js-line-number" data-line-number="3083"></td>
        <td id="LC3083" class="blob-code js-file-line">    <span class="pl-c">// translate some tiled properties to our inherited properties</span></td>
      </tr>
      <tr>
        <td id="L3084" class="blob-num js-line-number" data-line-number="3084"></td>
        <td id="LC3084" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">x</span> <span class="pl-k">=</span> layer.<span class="pl-sc">x</span> <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3085" class="blob-num js-line-number" data-line-number="3085"></td>
        <td id="LC3085" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">y</span> <span class="pl-k">=</span> layer.<span class="pl-sc">y</span> <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3086" class="blob-num js-line-number" data-line-number="3086"></td>
        <td id="LC3086" class="blob-code js-file-line">    <span class="pl-v">this</span>.alpha <span class="pl-k">=</span> layer.opacity <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> layer.opacity <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3087" class="blob-num js-line-number" data-line-number="3087"></td>
        <td id="LC3087" class="blob-code js-file-line">    <span class="pl-v">this</span>.visible <span class="pl-k">=</span> layer.visible <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> layer.visible <span class="pl-k">:</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3088" class="blob-num js-line-number" data-line-number="3088"></td>
        <td id="LC3088" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3089" class="blob-num js-line-number" data-line-number="3089"></td>
        <td id="LC3089" class="blob-code js-file-line">    <span class="pl-c">// physics bodies in this layer</span></td>
      </tr>
      <tr>
        <td id="L3090" class="blob-num js-line-number" data-line-number="3090"></td>
        <td id="LC3090" class="blob-code js-file-line">    <span class="pl-v">this</span>.bodies <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3091" class="blob-num js-line-number" data-line-number="3091"></td>
        <td id="LC3091" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3092" class="blob-num js-line-number" data-line-number="3092"></td>
        <td id="LC3092" class="blob-code js-file-line">    <span class="pl-c">// some private trackers</span></td>
      </tr>
      <tr>
        <td id="L3093" class="blob-num js-line-number" data-line-number="3093"></td>
        <td id="LC3093" class="blob-code js-file-line">    <span class="pl-v">this</span>._buffered <span class="pl-k">=</span> { left<span class="pl-k">:</span> <span class="pl-c1">false</span>, right<span class="pl-k">:</span> <span class="pl-c1">false</span>, top<span class="pl-k">:</span> <span class="pl-c1">false</span>, bottom<span class="pl-k">:</span> <span class="pl-c1">false</span> };</td>
      </tr>
      <tr>
        <td id="L3094" class="blob-num js-line-number" data-line-number="3094"></td>
        <td id="LC3094" class="blob-code js-file-line">    <span class="pl-v">this</span>._scroll <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(); <span class="pl-c">// the current scroll position</span></td>
      </tr>
      <tr>
        <td id="L3095" class="blob-num js-line-number" data-line-number="3095"></td>
        <td id="LC3095" class="blob-code js-file-line">    <span class="pl-v">this</span>._scrollDelta <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(); <span class="pl-c">// the current delta of scroll since the last sprite move</span></td>
      </tr>
      <tr>
        <td id="L3096" class="blob-num js-line-number" data-line-number="3096"></td>
        <td id="LC3096" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Rectangle</span>(); <span class="pl-c">// the area to render in tiles</span></td>
      </tr>
      <tr>
        <td id="L3097" class="blob-num js-line-number" data-line-number="3097"></td>
        <td id="LC3097" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3098" class="blob-num js-line-number" data-line-number="3098"></td>
        <td id="LC3098" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3099" class="blob-num js-line-number" data-line-number="3099"></td>
        <td id="LC3099" class="blob-code js-file-line"><span class="pl-c">    * @property {object} _mc - Local map data and calculation cache.</span></td>
      </tr>
      <tr>
        <td id="L3100" class="blob-num js-line-number" data-line-number="3100"></td>
        <td id="LC3100" class="blob-code js-file-line"><span class="pl-c">    * @private</span></td>
      </tr>
      <tr>
        <td id="L3101" class="blob-num js-line-number" data-line-number="3101"></td>
        <td id="LC3101" class="blob-code js-file-line"><span class="pl-c">    */</span></td>
      </tr>
      <tr>
        <td id="L3102" class="blob-num js-line-number" data-line-number="3102"></td>
        <td id="LC3102" class="blob-code js-file-line">    <span class="pl-v">this</span>._mc <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3103" class="blob-num js-line-number" data-line-number="3103"></td>
        <td id="LC3103" class="blob-code js-file-line">        cw<span class="pl-k">:</span> map.tileWidth,</td>
      </tr>
      <tr>
        <td id="L3104" class="blob-num js-line-number" data-line-number="3104"></td>
        <td id="LC3104" class="blob-code js-file-line">        ch<span class="pl-k">:</span> map.tileHeight,</td>
      </tr>
      <tr>
        <td id="L3105" class="blob-num js-line-number" data-line-number="3105"></td>
        <td id="LC3105" class="blob-code js-file-line">        tx<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3106" class="blob-num js-line-number" data-line-number="3106"></td>
        <td id="LC3106" class="blob-code js-file-line">        ty<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3107" class="blob-num js-line-number" data-line-number="3107"></td>
        <td id="LC3107" class="blob-code js-file-line">        tw<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3108" class="blob-num js-line-number" data-line-number="3108"></td>
        <td id="LC3108" class="blob-code js-file-line">        th<span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L3109" class="blob-num js-line-number" data-line-number="3109"></td>
        <td id="LC3109" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3110" class="blob-num js-line-number" data-line-number="3110"></td>
        <td id="LC3110" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3111" class="blob-num js-line-number" data-line-number="3111"></td>
        <td id="LC3111" class="blob-code js-file-line">    <span class="pl-c">// should we clear and rerender all the tiles</span></td>
      </tr>
      <tr>
        <td id="L3112" class="blob-num js-line-number" data-line-number="3112"></td>
        <td id="LC3112" class="blob-code js-file-line">    <span class="pl-v">this</span>.dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3113" class="blob-num js-line-number" data-line-number="3113"></td>
        <td id="LC3113" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3114" class="blob-num js-line-number" data-line-number="3114"></td>
        <td id="LC3114" class="blob-code js-file-line">    <span class="pl-c">// if batch is true, store children in a spritebatch</span></td>
      </tr>
      <tr>
        <td id="L3115" class="blob-num js-line-number" data-line-number="3115"></td>
        <td id="LC3115" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.properties.batch) {</td>
      </tr>
      <tr>
        <td id="L3116" class="blob-num js-line-number" data-line-number="3116"></td>
        <td id="LC3116" class="blob-code js-file-line">        <span class="pl-v">this</span>.container <span class="pl-k">=</span> <span class="pl-v">this</span>.addChild(<span class="pl-k">new</span> <span class="pl-en">Phaser.SpriteBatch</span>(game));</td>
      </tr>
      <tr>
        <td id="L3117" class="blob-num js-line-number" data-line-number="3117"></td>
        <td id="LC3117" class="blob-code js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3118" class="blob-num js-line-number" data-line-number="3118"></td>
        <td id="LC3118" class="blob-code js-file-line">        <span class="pl-v">this</span>.container <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L3119" class="blob-num js-line-number" data-line-number="3119"></td>
        <td id="LC3119" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3120" class="blob-num js-line-number" data-line-number="3120"></td>
        <td id="LC3120" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3121" class="blob-num js-line-number" data-line-number="3121"></td>
        <td id="LC3121" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.tileIds.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3122" class="blob-num js-line-number" data-line-number="3122"></td>
        <td id="LC3122" class="blob-code js-file-line">        <span class="pl-s">var</span> x <span class="pl-k">=</span> i <span class="pl-k">%</span> <span class="pl-v">this</span>.<span class="pl-sc">size</span>.<span class="pl-sc">x</span>,</td>
      </tr>
      <tr>
        <td id="L3123" class="blob-num js-line-number" data-line-number="3123"></td>
        <td id="LC3123" class="blob-code js-file-line">            y <span class="pl-k">=</span> (i <span class="pl-k">-</span> x) / <span class="pl-v">this</span>.<span class="pl-sc">size</span>.<span class="pl-sc">x</span>,</td>
      </tr>
      <tr>
        <td id="L3124" class="blob-num js-line-number" data-line-number="3124"></td>
        <td id="LC3124" class="blob-code js-file-line">            tileId <span class="pl-k">=</span> <span class="pl-v">this</span>.tileIds[i],</td>
      </tr>
      <tr>
        <td id="L3125" class="blob-num js-line-number" data-line-number="3125"></td>
        <td id="LC3125" class="blob-code js-file-line">            set <span class="pl-k">=</span> <span class="pl-v">this</span>.map.getTileset(tileId);</td>
      </tr>
      <tr>
        <td id="L3126" class="blob-num js-line-number" data-line-number="3126"></td>
        <td id="LC3126" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3127" class="blob-num js-line-number" data-line-number="3127"></td>
        <td id="LC3127" class="blob-code js-file-line">        <span class="pl-c">// if no tileset, return</span></td>
      </tr>
      <tr>
        <td id="L3128" class="blob-num js-line-number" data-line-number="3128"></td>
        <td id="LC3128" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>set) {</td>
      </tr>
      <tr>
        <td id="L3129" class="blob-num js-line-number" data-line-number="3129"></td>
        <td id="LC3129" class="blob-code js-file-line">            <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3130" class="blob-num js-line-number" data-line-number="3130"></td>
        <td id="LC3130" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3131" class="blob-num js-line-number" data-line-number="3131"></td>
        <td id="LC3131" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3132" class="blob-num js-line-number" data-line-number="3132"></td>
        <td id="LC3132" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.tiles[y]) {</td>
      </tr>
      <tr>
        <td id="L3133" class="blob-num js-line-number" data-line-number="3133"></td>
        <td id="LC3133" class="blob-code js-file-line">            <span class="pl-v">this</span>.tiles[y] <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3134" class="blob-num js-line-number" data-line-number="3134"></td>
        <td id="LC3134" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3135" class="blob-num js-line-number" data-line-number="3135"></td>
        <td id="LC3135" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3136" class="blob-num js-line-number" data-line-number="3136"></td>
        <td id="LC3136" class="blob-code js-file-line">        <span class="pl-v">this</span>.tiles[y][x] <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Tile</span>(<span class="pl-v">this</span>.game, x, y, tileId, set, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L3137" class="blob-num js-line-number" data-line-number="3137"></td>
        <td id="LC3137" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3138" class="blob-num js-line-number" data-line-number="3138"></td>
        <td id="LC3138" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3139" class="blob-num js-line-number" data-line-number="3139"></td>
        <td id="LC3139" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3140" class="blob-num js-line-number" data-line-number="3140"></td>
        <td id="LC3140" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-s3">Object</span>.create(Phaser.Group.<span class="pl-sc">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L3141" class="blob-num js-line-number" data-line-number="3141"></td>
        <td id="LC3141" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">constructor</span> <span class="pl-k">=</span> Tilelayer;</td>
      </tr>
      <tr>
        <td id="L3142" class="blob-num js-line-number" data-line-number="3142"></td>
        <td id="LC3142" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3143" class="blob-num js-line-number" data-line-number="3143"></td>
        <td id="LC3143" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> Tilelayer;</td>
      </tr>
      <tr>
        <td id="L3144" class="blob-num js-line-number" data-line-number="3144"></td>
        <td id="LC3144" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3145" class="blob-num js-line-number" data-line-number="3145"></td>
        <td id="LC3145" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setupRenderArea</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3146" class="blob-num js-line-number" data-line-number="3146"></td>
        <td id="LC3146" class="blob-code js-file-line">    <span class="pl-c">// calculate the X/Y start of the render area as the tile location of the top-left of the camera view.</span></td>
      </tr>
      <tr>
        <td id="L3147" class="blob-num js-line-number" data-line-number="3147"></td>
        <td id="LC3147" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.clampBottom(<span class="pl-v">this</span>.game.math.<span class="pl-s3">floor</span>(<span class="pl-v">this</span>._scroll.<span class="pl-sc">x</span> / <span class="pl-v">this</span>.map.scaledTileWidth), <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3148" class="blob-num js-line-number" data-line-number="3148"></td>
        <td id="LC3148" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.clampBottom(<span class="pl-v">this</span>.game.math.<span class="pl-s3">floor</span>(<span class="pl-v">this</span>._scroll.<span class="pl-sc">y</span> / <span class="pl-v">this</span>.map.scaledTileHeight), <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3149" class="blob-num js-line-number" data-line-number="3149"></td>
        <td id="LC3149" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3150" class="blob-num js-line-number" data-line-number="3150"></td>
        <td id="LC3150" class="blob-code js-file-line">    <span class="pl-c">// the width of the render area is the camera view width in tiles</span></td>
      </tr>
      <tr>
        <td id="L3151" class="blob-num js-line-number" data-line-number="3151"></td>
        <td id="LC3151" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.<span class="pl-s3">ceil</span>(<span class="pl-v">this</span>.game.camera.view.<span class="pl-sc">width</span> / <span class="pl-v">this</span>.map.scaledTileWidth);</td>
      </tr>
      <tr>
        <td id="L3152" class="blob-num js-line-number" data-line-number="3152"></td>
        <td id="LC3152" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3153" class="blob-num js-line-number" data-line-number="3153"></td>
        <td id="LC3153" class="blob-code js-file-line">    <span class="pl-c">// ensure we don&#39;t go outside the map width</span></td>
      </tr>
      <tr>
        <td id="L3154" class="blob-num js-line-number" data-line-number="3154"></td>
        <td id="LC3154" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span> <span class="pl-k">=</span> (<span class="pl-v">this</span>._renderArea.<span class="pl-sc">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.map.<span class="pl-sc">size</span>.<span class="pl-sc">x</span>) <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L3155" class="blob-num js-line-number" data-line-number="3155"></td>
        <td id="LC3155" class="blob-code js-file-line">        (<span class="pl-v">this</span>.map.<span class="pl-sc">size</span>.<span class="pl-sc">x</span> <span class="pl-k">-</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">x</span>) <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L3156" class="blob-num js-line-number" data-line-number="3156"></td>
        <td id="LC3156" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3157" class="blob-num js-line-number" data-line-number="3157"></td>
        <td id="LC3157" class="blob-code js-file-line">    <span class="pl-c">// the height of the render area is the camera view height in tiles</span></td>
      </tr>
      <tr>
        <td id="L3158" class="blob-num js-line-number" data-line-number="3158"></td>
        <td id="LC3158" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.<span class="pl-s3">ceil</span>(<span class="pl-v">this</span>.game.camera.view.<span class="pl-sc">height</span> / <span class="pl-v">this</span>.map.scaledTileHeight);</td>
      </tr>
      <tr>
        <td id="L3159" class="blob-num js-line-number" data-line-number="3159"></td>
        <td id="LC3159" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3160" class="blob-num js-line-number" data-line-number="3160"></td>
        <td id="LC3160" class="blob-code js-file-line">    <span class="pl-c">// ensure we don&#39;t go outside the map height</span></td>
      </tr>
      <tr>
        <td id="L3161" class="blob-num js-line-number" data-line-number="3161"></td>
        <td id="LC3161" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span> <span class="pl-k">=</span> (<span class="pl-v">this</span>._renderArea.<span class="pl-sc">y</span> <span class="pl-k">+</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.map.<span class="pl-sc">size</span>.<span class="pl-sc">y</span>) <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L3162" class="blob-num js-line-number" data-line-number="3162"></td>
        <td id="LC3162" class="blob-code js-file-line">        (<span class="pl-v">this</span>.map.<span class="pl-sc">size</span>.<span class="pl-sc">y</span> <span class="pl-k">-</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">y</span>) <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span>;</td>
      </tr>
      <tr>
        <td id="L3163" class="blob-num js-line-number" data-line-number="3163"></td>
        <td id="LC3163" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3164" class="blob-num js-line-number" data-line-number="3164"></td>
        <td id="LC3164" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3165" class="blob-num js-line-number" data-line-number="3165"></td>
        <td id="LC3165" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3166" class="blob-num js-line-number" data-line-number="3166"></td>
        <td id="LC3166" class="blob-code js-file-line"><span class="pl-c"> * Sets the world size to match the size of this layer.</span></td>
      </tr>
      <tr>
        <td id="L3167" class="blob-num js-line-number" data-line-number="3167"></td>
        <td id="LC3167" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3168" class="blob-num js-line-number" data-line-number="3168"></td>
        <td id="LC3168" class="blob-code js-file-line"><span class="pl-c"> * @method resizeWorld</span></td>
      </tr>
      <tr>
        <td id="L3169" class="blob-num js-line-number" data-line-number="3169"></td>
        <td id="LC3169" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3170" class="blob-num js-line-number" data-line-number="3170"></td>
        <td id="LC3170" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">resizeWorld</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3171" class="blob-num js-line-number" data-line-number="3171"></td>
        <td id="LC3171" class="blob-code js-file-line">    <span class="pl-v">this</span>.game.world.setBounds(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-v">this</span>.widthInPixels, <span class="pl-v">this</span>.heightInPixels);</td>
      </tr>
      <tr>
        <td id="L3172" class="blob-num js-line-number" data-line-number="3172"></td>
        <td id="LC3172" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3173" class="blob-num js-line-number" data-line-number="3173"></td>
        <td id="LC3173" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3174" class="blob-num js-line-number" data-line-number="3174"></td>
        <td id="LC3174" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3175" class="blob-num js-line-number" data-line-number="3175"></td>
        <td id="LC3175" class="blob-code js-file-line"><span class="pl-c"> * Automatically called by Tilemap.postUpdate. Handles scrolling the layer and updating the scale</span></td>
      </tr>
      <tr>
        <td id="L3176" class="blob-num js-line-number" data-line-number="3176"></td>
        <td id="LC3176" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3177" class="blob-num js-line-number" data-line-number="3177"></td>
        <td id="LC3177" class="blob-code js-file-line"><span class="pl-c"> * @method postUpdate</span></td>
      </tr>
      <tr>
        <td id="L3178" class="blob-num js-line-number" data-line-number="3178"></td>
        <td id="LC3178" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3179" class="blob-num js-line-number" data-line-number="3179"></td>
        <td id="LC3179" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">postUpdate</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3180" class="blob-num js-line-number" data-line-number="3180"></td>
        <td id="LC3180" class="blob-code js-file-line">    Phaser.Group.<span class="pl-sc">prototype</span>.postUpdate.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L3181" class="blob-num js-line-number" data-line-number="3181"></td>
        <td id="LC3181" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3182" class="blob-num js-line-number" data-line-number="3182"></td>
        <td id="LC3182" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.fixedToCamera) {</td>
      </tr>
      <tr>
        <td id="L3183" class="blob-num js-line-number" data-line-number="3183"></td>
        <td id="LC3183" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">x</span> <span class="pl-k">=</span> (<span class="pl-v">this</span>.game.camera.view.<span class="pl-sc">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.cameraOffset.<span class="pl-sc">x</span>) / <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3184" class="blob-num js-line-number" data-line-number="3184"></td>
        <td id="LC3184" class="blob-code js-file-line">        <span class="pl-v">this</span>.position.<span class="pl-sc">y</span> <span class="pl-k">=</span> (<span class="pl-v">this</span>.game.camera.view.<span class="pl-sc">y</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.cameraOffset.<span class="pl-sc">y</span>) / <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3185" class="blob-num js-line-number" data-line-number="3185"></td>
        <td id="LC3185" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3186" class="blob-num js-line-number" data-line-number="3186"></td>
        <td id="LC3186" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3187" class="blob-num js-line-number" data-line-number="3187"></td>
        <td id="LC3187" class="blob-code js-file-line">    <span class="pl-c">// TODO: this seems to not work properly when scale changes on the fly. Look into that...</span></td>
      </tr>
      <tr>
        <td id="L3188" class="blob-num js-line-number" data-line-number="3188"></td>
        <td id="LC3188" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.dirty <span class="pl-k">||</span> <span class="pl-v">this</span>.map.dirty) {</td>
      </tr>
      <tr>
        <td id="L3189" class="blob-num js-line-number" data-line-number="3189"></td>
        <td id="LC3189" class="blob-code js-file-line">        <span class="pl-c">// no longer dirty</span></td>
      </tr>
      <tr>
        <td id="L3190" class="blob-num js-line-number" data-line-number="3190"></td>
        <td id="LC3190" class="blob-code js-file-line">        <span class="pl-v">this</span>.dirty <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3191" class="blob-num js-line-number" data-line-number="3191"></td>
        <td id="LC3191" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3192" class="blob-num js-line-number" data-line-number="3192"></td>
        <td id="LC3192" class="blob-code js-file-line">        <span class="pl-c">// setup the render area, and scaled tilesize</span></td>
      </tr>
      <tr>
        <td id="L3193" class="blob-num js-line-number" data-line-number="3193"></td>
        <td id="LC3193" class="blob-code js-file-line">        <span class="pl-v">this</span>.setupRenderArea();</td>
      </tr>
      <tr>
        <td id="L3194" class="blob-num js-line-number" data-line-number="3194"></td>
        <td id="LC3194" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3195" class="blob-num js-line-number" data-line-number="3195"></td>
        <td id="LC3195" class="blob-code js-file-line">        <span class="pl-c">// resize the world to the new size</span></td>
      </tr>
      <tr>
        <td id="L3196" class="blob-num js-line-number" data-line-number="3196"></td>
        <td id="LC3196" class="blob-code js-file-line">        <span class="pl-c">// TODO: Seems dangerous to do this here, may break if user wants to manually set bounds</span></td>
      </tr>
      <tr>
        <td id="L3197" class="blob-num js-line-number" data-line-number="3197"></td>
        <td id="LC3197" class="blob-code js-file-line">        <span class="pl-c">// and this reset it each time scale changes.</span></td>
      </tr>
      <tr>
        <td id="L3198" class="blob-num js-line-number" data-line-number="3198"></td>
        <td id="LC3198" class="blob-code js-file-line">        <span class="pl-v">this</span>.resizeWorld();</td>
      </tr>
      <tr>
        <td id="L3199" class="blob-num js-line-number" data-line-number="3199"></td>
        <td id="LC3199" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3200" class="blob-num js-line-number" data-line-number="3200"></td>
        <td id="LC3200" class="blob-code js-file-line">        <span class="pl-c">// render the tiles on the screen</span></td>
      </tr>
      <tr>
        <td id="L3201" class="blob-num js-line-number" data-line-number="3201"></td>
        <td id="LC3201" class="blob-code js-file-line">        <span class="pl-v">this</span>.setupTiles();</td>
      </tr>
      <tr>
        <td id="L3202" class="blob-num js-line-number" data-line-number="3202"></td>
        <td id="LC3202" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3203" class="blob-num js-line-number" data-line-number="3203"></td>
        <td id="LC3203" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L3204" class="blob-num js-line-number" data-line-number="3204"></td>
        <td id="LC3204" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3205" class="blob-num js-line-number" data-line-number="3205"></td>
        <td id="LC3205" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3206" class="blob-num js-line-number" data-line-number="3206"></td>
        <td id="LC3206" class="blob-code js-file-line">    <span class="pl-v">this</span>.scrollX <span class="pl-k">=</span> <span class="pl-v">this</span>.game.camera.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3207" class="blob-num js-line-number" data-line-number="3207"></td>
        <td id="LC3207" class="blob-code js-file-line">    <span class="pl-v">this</span>.scrollY <span class="pl-k">=</span> <span class="pl-v">this</span>.game.camera.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3208" class="blob-num js-line-number" data-line-number="3208"></td>
        <td id="LC3208" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3209" class="blob-num js-line-number" data-line-number="3209"></td>
        <td id="LC3209" class="blob-code js-file-line">    <span class="pl-v">this</span>.updatePan();</td>
      </tr>
      <tr>
        <td id="L3210" class="blob-num js-line-number" data-line-number="3210"></td>
        <td id="LC3210" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3211" class="blob-num js-line-number" data-line-number="3211"></td>
        <td id="LC3211" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3212" class="blob-num js-line-number" data-line-number="3212"></td>
        <td id="LC3212" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3213" class="blob-num js-line-number" data-line-number="3213"></td>
        <td id="LC3213" class="blob-code js-file-line"><span class="pl-c"> * Clears the current tiles and sets up the render area</span></td>
      </tr>
      <tr>
        <td id="L3214" class="blob-num js-line-number" data-line-number="3214"></td>
        <td id="LC3214" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3215" class="blob-num js-line-number" data-line-number="3215"></td>
        <td id="LC3215" class="blob-code js-file-line"><span class="pl-c"> * @method setupTiles</span></td>
      </tr>
      <tr>
        <td id="L3216" class="blob-num js-line-number" data-line-number="3216"></td>
        <td id="LC3216" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L3217" class="blob-num js-line-number" data-line-number="3217"></td>
        <td id="LC3217" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3218" class="blob-num js-line-number" data-line-number="3218"></td>
        <td id="LC3218" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setupTiles</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3219" class="blob-num js-line-number" data-line-number="3219"></td>
        <td id="LC3219" class="blob-code js-file-line">    <span class="pl-c">// clear all the tiles</span></td>
      </tr>
      <tr>
        <td id="L3220" class="blob-num js-line-number" data-line-number="3220"></td>
        <td id="LC3220" class="blob-code js-file-line">    <span class="pl-v">this</span>.clearTiles();</td>
      </tr>
      <tr>
        <td id="L3221" class="blob-num js-line-number" data-line-number="3221"></td>
        <td id="LC3221" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3222" class="blob-num js-line-number" data-line-number="3222"></td>
        <td id="LC3222" class="blob-code js-file-line">    <span class="pl-c">// setup a tile for each location in the renderArea</span></td>
      </tr>
      <tr>
        <td id="L3223" class="blob-num js-line-number" data-line-number="3223"></td>
        <td id="LC3223" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> x <span class="pl-k">=</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">x</span>; x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">right</span>; <span class="pl-k">++</span>x) {</td>
      </tr>
      <tr>
        <td id="L3224" class="blob-num js-line-number" data-line-number="3224"></td>
        <td id="LC3224" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> y <span class="pl-k">=</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">y</span>; y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">bottom</span>; <span class="pl-k">++</span>y) {</td>
      </tr>
      <tr>
        <td id="L3225" class="blob-num js-line-number" data-line-number="3225"></td>
        <td id="LC3225" class="blob-code js-file-line">            <span class="pl-v">this</span>.moveTileSprite(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, x, y);</td>
      </tr>
      <tr>
        <td id="L3226" class="blob-num js-line-number" data-line-number="3226"></td>
        <td id="LC3226" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3227" class="blob-num js-line-number" data-line-number="3227"></td>
        <td id="LC3227" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3228" class="blob-num js-line-number" data-line-number="3228"></td>
        <td id="LC3228" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3229" class="blob-num js-line-number" data-line-number="3229"></td>
        <td id="LC3229" class="blob-code js-file-line">    <span class="pl-c">// reset buffered status</span></td>
      </tr>
      <tr>
        <td id="L3230" class="blob-num js-line-number" data-line-number="3230"></td>
        <td id="LC3230" class="blob-code js-file-line">    <span class="pl-v">this</span>._buffered.<span class="pl-sc">left</span> <span class="pl-k">=</span> <span class="pl-v">this</span>._buffered.<span class="pl-sc">right</span> <span class="pl-k">=</span> <span class="pl-v">this</span>._buffered.<span class="pl-sc">top</span> <span class="pl-k">=</span> <span class="pl-v">this</span>._buffered.<span class="pl-sc">bottom</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3231" class="blob-num js-line-number" data-line-number="3231"></td>
        <td id="LC3231" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3232" class="blob-num js-line-number" data-line-number="3232"></td>
        <td id="LC3232" class="blob-code js-file-line">    <span class="pl-c">// reset scroll delta</span></td>
      </tr>
      <tr>
        <td id="L3233" class="blob-num js-line-number" data-line-number="3233"></td>
        <td id="LC3233" class="blob-code js-file-line">    <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">x</span> <span class="pl-k">%</span> <span class="pl-v">this</span>.map.scaledTileWidth;</td>
      </tr>
      <tr>
        <td id="L3234" class="blob-num js-line-number" data-line-number="3234"></td>
        <td id="LC3234" class="blob-code js-file-line">    <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">y</span> <span class="pl-k">%</span> <span class="pl-v">this</span>.map.scaledTileHeight;</td>
      </tr>
      <tr>
        <td id="L3235" class="blob-num js-line-number" data-line-number="3235"></td>
        <td id="LC3235" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3236" class="blob-num js-line-number" data-line-number="3236"></td>
        <td id="LC3236" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3237" class="blob-num js-line-number" data-line-number="3237"></td>
        <td id="LC3237" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3238" class="blob-num js-line-number" data-line-number="3238"></td>
        <td id="LC3238" class="blob-code js-file-line"><span class="pl-c"> * Clears all the tiles currently used to render the layer</span></td>
      </tr>
      <tr>
        <td id="L3239" class="blob-num js-line-number" data-line-number="3239"></td>
        <td id="LC3239" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3240" class="blob-num js-line-number" data-line-number="3240"></td>
        <td id="LC3240" class="blob-code js-file-line"><span class="pl-c"> * @method clearTiles</span></td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code js-file-line"><span class="pl-c"> * @return {Tilelayer} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">clearTiles</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> c <span class="pl-k">=</span> <span class="pl-v">this</span>.container.children.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; c <span class="pl-k">&gt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">--</span>c) {</td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.container.children[c].<span class="pl-sc">type</span> <span class="pl-k">===</span> Phaser.TILESPRITE) {</td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code js-file-line">            <span class="pl-v">this</span>.clearTile(<span class="pl-v">this</span>.container.children[c]);</td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">clearTile</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tile</span>) {</td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tile <span class="pl-k">||</span> tile.<span class="pl-sc">parent</span> <span class="pl-k">!==</span> <span class="pl-v">this</span>.container) {</td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code js-file-line">    <span class="pl-v">this</span>.container.<span class="pl-s3">removeChild</span>(tile);</td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3262" class="blob-num js-line-number" data-line-number="3262"></td>
        <td id="LC3262" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3263" class="blob-num js-line-number" data-line-number="3263"></td>
        <td id="LC3263" class="blob-code js-file-line"><span class="pl-c"> * Moves a tile sprite from one position to another, and creates a new tile</span></td>
      </tr>
      <tr>
        <td id="L3264" class="blob-num js-line-number" data-line-number="3264"></td>
        <td id="LC3264" class="blob-code js-file-line"><span class="pl-c"> * if the old position didn&#39;t have a sprite</span></td>
      </tr>
      <tr>
        <td id="L3265" class="blob-num js-line-number" data-line-number="3265"></td>
        <td id="LC3265" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3266" class="blob-num js-line-number" data-line-number="3266"></td>
        <td id="LC3266" class="blob-code js-file-line"><span class="pl-c"> * @method moveTileSprite</span></td>
      </tr>
      <tr>
        <td id="L3267" class="blob-num js-line-number" data-line-number="3267"></td>
        <td id="LC3267" class="blob-code js-file-line"><span class="pl-c"> * @param fromTileX {Number} The x coord of the tile in units of tiles (not pixels) to move from</span></td>
      </tr>
      <tr>
        <td id="L3268" class="blob-num js-line-number" data-line-number="3268"></td>
        <td id="LC3268" class="blob-code js-file-line"><span class="pl-c"> * @param fromTileY {Number} The y coord of the tile in units of tiles (not pixels) to move from</span></td>
      </tr>
      <tr>
        <td id="L3269" class="blob-num js-line-number" data-line-number="3269"></td>
        <td id="LC3269" class="blob-code js-file-line"><span class="pl-c"> * @param toTileX {Number} The x coord of the tile in units of tiles (not pixels) to move to</span></td>
      </tr>
      <tr>
        <td id="L3270" class="blob-num js-line-number" data-line-number="3270"></td>
        <td id="LC3270" class="blob-code js-file-line"><span class="pl-c"> * @param toTileY {Number} The y coord of the tile in units of tiles (not pixels) to move to</span></td>
      </tr>
      <tr>
        <td id="L3271" class="blob-num js-line-number" data-line-number="3271"></td>
        <td id="LC3271" class="blob-code js-file-line"><span class="pl-c"> * @return {Tile} The sprite to display</span></td>
      </tr>
      <tr>
        <td id="L3272" class="blob-num js-line-number" data-line-number="3272"></td>
        <td id="LC3272" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3273" class="blob-num js-line-number" data-line-number="3273"></td>
        <td id="LC3273" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">moveTileSprite</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">fromTileX</span>, <span class="pl-vpf">fromTileY</span>, <span class="pl-vpf">toTileX</span>, <span class="pl-vpf">toTileY</span>) {</td>
      </tr>
      <tr>
        <td id="L3274" class="blob-num js-line-number" data-line-number="3274"></td>
        <td id="LC3274" class="blob-code js-file-line">    <span class="pl-c">// remove the old tile that is no longer needed to be shown</span></td>
      </tr>
      <tr>
        <td id="L3275" class="blob-num js-line-number" data-line-number="3275"></td>
        <td id="LC3275" class="blob-code js-file-line">    <span class="pl-v">this</span>.clearTile(<span class="pl-v">this</span>.tiles[fromTileY] <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.tiles[fromTileY][fromTileX]);</td>
      </tr>
      <tr>
        <td id="L3276" class="blob-num js-line-number" data-line-number="3276"></td>
        <td id="LC3276" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3277" class="blob-num js-line-number" data-line-number="3277"></td>
        <td id="LC3277" class="blob-code js-file-line">    <span class="pl-c">// add the tile we need to show</span></td>
      </tr>
      <tr>
        <td id="L3278" class="blob-num js-line-number" data-line-number="3278"></td>
        <td id="LC3278" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.tiles[toTileY] <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.tiles[toTileY][toTileX]) {</td>
      </tr>
      <tr>
        <td id="L3279" class="blob-num js-line-number" data-line-number="3279"></td>
        <td id="LC3279" class="blob-code js-file-line">        <span class="pl-v">this</span>.container.addChild(<span class="pl-v">this</span>.tiles[toTileY][toTileX]);</td>
      </tr>
      <tr>
        <td id="L3280" class="blob-num js-line-number" data-line-number="3280"></td>
        <td id="LC3280" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3281" class="blob-num js-line-number" data-line-number="3281"></td>
        <td id="LC3281" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3282" class="blob-num js-line-number" data-line-number="3282"></td>
        <td id="LC3282" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3283" class="blob-num js-line-number" data-line-number="3283"></td>
        <td id="LC3283" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3284" class="blob-num js-line-number" data-line-number="3284"></td>
        <td id="LC3284" class="blob-code js-file-line"><span class="pl-c"> * Pans the layer around, rendering stuff if necessary</span></td>
      </tr>
      <tr>
        <td id="L3285" class="blob-num js-line-number" data-line-number="3285"></td>
        <td id="LC3285" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3286" class="blob-num js-line-number" data-line-number="3286"></td>
        <td id="LC3286" class="blob-code js-file-line"><span class="pl-c"> * @method updatePan</span></td>
      </tr>
      <tr>
        <td id="L3287" class="blob-num js-line-number" data-line-number="3287"></td>
        <td id="LC3287" class="blob-code js-file-line"><span class="pl-c"> * @return {Tilelayer} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L3288" class="blob-num js-line-number" data-line-number="3288"></td>
        <td id="LC3288" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L3289" class="blob-num js-line-number" data-line-number="3289"></td>
        <td id="LC3289" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3290" class="blob-num js-line-number" data-line-number="3290"></td>
        <td id="LC3290" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updatePan</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3291" class="blob-num js-line-number" data-line-number="3291"></td>
        <td id="LC3291" class="blob-code js-file-line">    <span class="pl-c">// First, check if we need to build a buffer around the viewport</span></td>
      </tr>
      <tr>
        <td id="L3292" class="blob-num js-line-number" data-line-number="3292"></td>
        <td id="LC3292" class="blob-code js-file-line">    <span class="pl-c">// usually this happens on the first pan after a full render</span></td>
      </tr>
      <tr>
        <td id="L3293" class="blob-num js-line-number" data-line-number="3293"></td>
        <td id="LC3293" class="blob-code js-file-line">    <span class="pl-c">// caused by a viewport resize. We do this buffering here instead</span></td>
      </tr>
      <tr>
        <td id="L3294" class="blob-num js-line-number" data-line-number="3294"></td>
        <td id="LC3294" class="blob-code js-file-line">    <span class="pl-c">// of in the initial render because in the initial render, the buffer</span></td>
      </tr>
      <tr>
        <td id="L3295" class="blob-num js-line-number" data-line-number="3295"></td>
        <td id="LC3295" class="blob-code js-file-line">    <span class="pl-c">// may try to go negative which has no tiles. Plus doing it here</span></td>
      </tr>
      <tr>
        <td id="L3296" class="blob-num js-line-number" data-line-number="3296"></td>
        <td id="LC3296" class="blob-code js-file-line">    <span class="pl-c">// reduces the number of tiles that need to be created initially.</span></td>
      </tr>
      <tr>
        <td id="L3297" class="blob-num js-line-number" data-line-number="3297"></td>
        <td id="LC3297" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3298" class="blob-num js-line-number" data-line-number="3298"></td>
        <td id="LC3298" class="blob-code js-file-line">    <span class="pl-c">// moving world right, so left will be exposed</span></td>
      </tr>
      <tr>
        <td id="L3299" class="blob-num js-line-number" data-line-number="3299"></td>
        <td id="LC3299" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-v">this</span>._buffered.<span class="pl-sc">left</span>) {</td>
      </tr>
      <tr>
        <td id="L3300" class="blob-num js-line-number" data-line-number="3300"></td>
        <td id="LC3300" class="blob-code js-file-line">        <span class="pl-v">this</span>._buffered.<span class="pl-sc">left</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3301" class="blob-num js-line-number" data-line-number="3301"></td>
        <td id="LC3301" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderLeft(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3302" class="blob-num js-line-number" data-line-number="3302"></td>
        <td id="LC3302" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3303" class="blob-num js-line-number" data-line-number="3303"></td>
        <td id="LC3303" class="blob-code js-file-line">    <span class="pl-c">// moving world left, so right will be exposed</span></td>
      </tr>
      <tr>
        <td id="L3304" class="blob-num js-line-number" data-line-number="3304"></td>
        <td id="LC3304" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-v">this</span>._buffered.<span class="pl-sc">right</span>) {</td>
      </tr>
      <tr>
        <td id="L3305" class="blob-num js-line-number" data-line-number="3305"></td>
        <td id="LC3305" class="blob-code js-file-line">        <span class="pl-v">this</span>._buffered.<span class="pl-sc">right</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3306" class="blob-num js-line-number" data-line-number="3306"></td>
        <td id="LC3306" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderRight(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3307" class="blob-num js-line-number" data-line-number="3307"></td>
        <td id="LC3307" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3308" class="blob-num js-line-number" data-line-number="3308"></td>
        <td id="LC3308" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3309" class="blob-num js-line-number" data-line-number="3309"></td>
        <td id="LC3309" class="blob-code js-file-line">    <span class="pl-c">// moving world down, so top will be exposed</span></td>
      </tr>
      <tr>
        <td id="L3310" class="blob-num js-line-number" data-line-number="3310"></td>
        <td id="LC3310" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-v">this</span>._buffered.<span class="pl-sc">top</span>) {</td>
      </tr>
      <tr>
        <td id="L3311" class="blob-num js-line-number" data-line-number="3311"></td>
        <td id="LC3311" class="blob-code js-file-line">        <span class="pl-v">this</span>._buffered.<span class="pl-sc">top</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3312" class="blob-num js-line-number" data-line-number="3312"></td>
        <td id="LC3312" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderUp(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3313" class="blob-num js-line-number" data-line-number="3313"></td>
        <td id="LC3313" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3314" class="blob-num js-line-number" data-line-number="3314"></td>
        <td id="LC3314" class="blob-code js-file-line">    <span class="pl-c">// moving world up, so bottom will be exposed</span></td>
      </tr>
      <tr>
        <td id="L3315" class="blob-num js-line-number" data-line-number="3315"></td>
        <td id="LC3315" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-v">this</span>._buffered.<span class="pl-sc">bottom</span>) {</td>
      </tr>
      <tr>
        <td id="L3316" class="blob-num js-line-number" data-line-number="3316"></td>
        <td id="LC3316" class="blob-code js-file-line">        <span class="pl-v">this</span>._buffered.<span class="pl-sc">bottom</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3317" class="blob-num js-line-number" data-line-number="3317"></td>
        <td id="LC3317" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderDown(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3318" class="blob-num js-line-number" data-line-number="3318"></td>
        <td id="LC3318" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3319" class="blob-num js-line-number" data-line-number="3319"></td>
        <td id="LC3319" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3320" class="blob-num js-line-number" data-line-number="3320"></td>
        <td id="LC3320" class="blob-code js-file-line">    <span class="pl-c">// Here is where the actual panning gets done, we check if the pan</span></td>
      </tr>
      <tr>
        <td id="L3321" class="blob-num js-line-number" data-line-number="3321"></td>
        <td id="LC3321" class="blob-code js-file-line">    <span class="pl-c">// delta is greater than a scaled tile and if so pan that direction.</span></td>
      </tr>
      <tr>
        <td id="L3322" class="blob-num js-line-number" data-line-number="3322"></td>
        <td id="LC3322" class="blob-code js-file-line">    <span class="pl-c">// The reason we do it in a while loop is because the delta can be</span></td>
      </tr>
      <tr>
        <td id="L3323" class="blob-num js-line-number" data-line-number="3323"></td>
        <td id="LC3323" class="blob-code js-file-line">    <span class="pl-c">// large than 1 scaled tile and may require multiple render pans</span></td>
      </tr>
      <tr>
        <td id="L3324" class="blob-num js-line-number" data-line-number="3324"></td>
        <td id="LC3324" class="blob-code js-file-line">    <span class="pl-c">// (this can happen if you can .pan(x, y) with large values)</span></td>
      </tr>
      <tr>
        <td id="L3325" class="blob-num js-line-number" data-line-number="3325"></td>
        <td id="LC3325" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3326" class="blob-num js-line-number" data-line-number="3326"></td>
        <td id="LC3326" class="blob-code js-file-line">    <span class="pl-c">// moved position right, so render left</span></td>
      </tr>
      <tr>
        <td id="L3327" class="blob-num js-line-number" data-line-number="3327"></td>
        <td id="LC3327" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.map.scaledTileWidth) {</td>
      </tr>
      <tr>
        <td id="L3328" class="blob-num js-line-number" data-line-number="3328"></td>
        <td id="LC3328" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderLeft();</td>
      </tr>
      <tr>
        <td id="L3329" class="blob-num js-line-number" data-line-number="3329"></td>
        <td id="LC3329" class="blob-code js-file-line">        <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">-=</span> <span class="pl-v">this</span>.map.scaledTileWidth;</td>
      </tr>
      <tr>
        <td id="L3330" class="blob-num js-line-number" data-line-number="3330"></td>
        <td id="LC3330" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3331" class="blob-num js-line-number" data-line-number="3331"></td>
        <td id="LC3331" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3332" class="blob-num js-line-number" data-line-number="3332"></td>
        <td id="LC3332" class="blob-code js-file-line">    <span class="pl-c">// moved position left, so render right</span></td>
      </tr>
      <tr>
        <td id="L3333" class="blob-num js-line-number" data-line-number="3333"></td>
        <td id="LC3333" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">&lt;=</span> <span class="pl-k">-</span><span class="pl-v">this</span>.map.scaledTileWidth) {</td>
      </tr>
      <tr>
        <td id="L3334" class="blob-num js-line-number" data-line-number="3334"></td>
        <td id="LC3334" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderRight();</td>
      </tr>
      <tr>
        <td id="L3335" class="blob-num js-line-number" data-line-number="3335"></td>
        <td id="LC3335" class="blob-code js-file-line">        <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">+=</span> <span class="pl-v">this</span>.map.scaledTileWidth;</td>
      </tr>
      <tr>
        <td id="L3336" class="blob-num js-line-number" data-line-number="3336"></td>
        <td id="LC3336" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3337" class="blob-num js-line-number" data-line-number="3337"></td>
        <td id="LC3337" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3338" class="blob-num js-line-number" data-line-number="3338"></td>
        <td id="LC3338" class="blob-code js-file-line">    <span class="pl-c">// moved position down, so render up</span></td>
      </tr>
      <tr>
        <td id="L3339" class="blob-num js-line-number" data-line-number="3339"></td>
        <td id="LC3339" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.map.scaledTileHeight) {</td>
      </tr>
      <tr>
        <td id="L3340" class="blob-num js-line-number" data-line-number="3340"></td>
        <td id="LC3340" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderUp();</td>
      </tr>
      <tr>
        <td id="L3341" class="blob-num js-line-number" data-line-number="3341"></td>
        <td id="LC3341" class="blob-code js-file-line">        <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">-=</span> <span class="pl-v">this</span>.map.scaledTileHeight;</td>
      </tr>
      <tr>
        <td id="L3342" class="blob-num js-line-number" data-line-number="3342"></td>
        <td id="LC3342" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3343" class="blob-num js-line-number" data-line-number="3343"></td>
        <td id="LC3343" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3344" class="blob-num js-line-number" data-line-number="3344"></td>
        <td id="LC3344" class="blob-code js-file-line">    <span class="pl-c">// moved position up, so render down</span></td>
      </tr>
      <tr>
        <td id="L3345" class="blob-num js-line-number" data-line-number="3345"></td>
        <td id="LC3345" class="blob-code js-file-line">    <span class="pl-k">while</span> (<span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">&lt;=</span> <span class="pl-k">-</span><span class="pl-v">this</span>.map.scaledTileHeight) {</td>
      </tr>
      <tr>
        <td id="L3346" class="blob-num js-line-number" data-line-number="3346"></td>
        <td id="LC3346" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderDown();</td>
      </tr>
      <tr>
        <td id="L3347" class="blob-num js-line-number" data-line-number="3347"></td>
        <td id="LC3347" class="blob-code js-file-line">        <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">+=</span> <span class="pl-v">this</span>.map.scaledTileHeight;</td>
      </tr>
      <tr>
        <td id="L3348" class="blob-num js-line-number" data-line-number="3348"></td>
        <td id="LC3348" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3349" class="blob-num js-line-number" data-line-number="3349"></td>
        <td id="LC3349" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3350" class="blob-num js-line-number" data-line-number="3350"></td>
        <td id="LC3350" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3351" class="blob-num js-line-number" data-line-number="3351"></td>
        <td id="LC3351" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3352" class="blob-num js-line-number" data-line-number="3352"></td>
        <td id="LC3352" class="blob-code js-file-line"><span class="pl-c">* Gets all tiles that intersect with the given line.</span></td>
      </tr>
      <tr>
        <td id="L3353" class="blob-num js-line-number" data-line-number="3353"></td>
        <td id="LC3353" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3354" class="blob-num js-line-number" data-line-number="3354"></td>
        <td id="LC3354" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.TilemapLayer#getRayCastTiles</span></td>
      </tr>
      <tr>
        <td id="L3355" class="blob-num js-line-number" data-line-number="3355"></td>
        <td id="LC3355" class="blob-code js-file-line"><span class="pl-c">* @memberof Phaser.TilemapLayer</span></td>
      </tr>
      <tr>
        <td id="L3356" class="blob-num js-line-number" data-line-number="3356"></td>
        <td id="LC3356" class="blob-code js-file-line"><span class="pl-c">* @param {Phaser.Line} line - The line used to determine which tiles to return.</span></td>
      </tr>
      <tr>
        <td id="L3357" class="blob-num js-line-number" data-line-number="3357"></td>
        <td id="LC3357" class="blob-code js-file-line"><span class="pl-c">* @param {number} [stepRate] - How many steps through the ray will we check? If undefined or</span></td>
      </tr>
      <tr>
        <td id="L3358" class="blob-num js-line-number" data-line-number="3358"></td>
        <td id="LC3358" class="blob-code js-file-line"><span class="pl-c">*       null it uses TilemapLayer.rayStepRate.</span></td>
      </tr>
      <tr>
        <td id="L3359" class="blob-num js-line-number" data-line-number="3359"></td>
        <td id="LC3359" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} [collides=false] - If true only return tiles that collide on one or more faces.</span></td>
      </tr>
      <tr>
        <td id="L3360" class="blob-num js-line-number" data-line-number="3360"></td>
        <td id="LC3360" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} [interestingFace=false] - If true only return tiles that have interesting faces.</span></td>
      </tr>
      <tr>
        <td id="L3361" class="blob-num js-line-number" data-line-number="3361"></td>
        <td id="LC3361" class="blob-code js-file-line"><span class="pl-c">* @return {array&lt;Phaser.Tile&gt;} An array of Phaser.Tiles.</span></td>
      </tr>
      <tr>
        <td id="L3362" class="blob-num js-line-number" data-line-number="3362"></td>
        <td id="LC3362" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3363" class="blob-num js-line-number" data-line-number="3363"></td>
        <td id="LC3363" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getRayCastTiles</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">line</span>, <span class="pl-vpf">stepRate</span>, <span class="pl-vpf">collides</span>, <span class="pl-vpf">interestingFace</span>) {</td>
      </tr>
      <tr>
        <td id="L3364" class="blob-num js-line-number" data-line-number="3364"></td>
        <td id="LC3364" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3365" class="blob-num js-line-number" data-line-number="3365"></td>
        <td id="LC3365" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> stepRate <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> stepRate <span class="pl-k">===</span> <span class="pl-c1">null</span>) { stepRate <span class="pl-k">=</span> <span class="pl-v">this</span>.rayStepRate; }</td>
      </tr>
      <tr>
        <td id="L3366" class="blob-num js-line-number" data-line-number="3366"></td>
        <td id="LC3366" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> collides <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { collides <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L3367" class="blob-num js-line-number" data-line-number="3367"></td>
        <td id="LC3367" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> interestingFace <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { interestingFace <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L3368" class="blob-num js-line-number" data-line-number="3368"></td>
        <td id="LC3368" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3369" class="blob-num js-line-number" data-line-number="3369"></td>
        <td id="LC3369" class="blob-code js-file-line">    <span class="pl-c">//  First get all tiles that touch the bounds of the line</span></td>
      </tr>
      <tr>
        <td id="L3370" class="blob-num js-line-number" data-line-number="3370"></td>
        <td id="LC3370" class="blob-code js-file-line">    <span class="pl-s">var</span> tiles <span class="pl-k">=</span> <span class="pl-v">this</span>.getTiles(line.<span class="pl-sc">x</span>, line.<span class="pl-sc">y</span>, line.<span class="pl-sc">width</span>, line.<span class="pl-sc">height</span>, collides, interestingFace);</td>
      </tr>
      <tr>
        <td id="L3371" class="blob-num js-line-number" data-line-number="3371"></td>
        <td id="LC3371" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3372" class="blob-num js-line-number" data-line-number="3372"></td>
        <td id="LC3372" class="blob-code js-file-line">    <span class="pl-k">if</span> (tiles.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L3373" class="blob-num js-line-number" data-line-number="3373"></td>
        <td id="LC3373" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L3374" class="blob-num js-line-number" data-line-number="3374"></td>
        <td id="LC3374" class="blob-code js-file-line">        <span class="pl-k">return</span> tiles;</td>
      </tr>
      <tr>
        <td id="L3375" class="blob-num js-line-number" data-line-number="3375"></td>
        <td id="LC3375" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3376" class="blob-num js-line-number" data-line-number="3376"></td>
        <td id="LC3376" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3377" class="blob-num js-line-number" data-line-number="3377"></td>
        <td id="LC3377" class="blob-code js-file-line">    <span class="pl-c">//  Now we only want the tiles that intersect with the points on this line</span></td>
      </tr>
      <tr>
        <td id="L3378" class="blob-num js-line-number" data-line-number="3378"></td>
        <td id="LC3378" class="blob-code js-file-line">    <span class="pl-s">var</span> coords <span class="pl-k">=</span> line.coordinatesOnLine(stepRate);</td>
      </tr>
      <tr>
        <td id="L3379" class="blob-num js-line-number" data-line-number="3379"></td>
        <td id="LC3379" class="blob-code js-file-line">    <span class="pl-s">var</span> total <span class="pl-k">=</span> coords.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L3380" class="blob-num js-line-number" data-line-number="3380"></td>
        <td id="LC3380" class="blob-code js-file-line">    <span class="pl-s">var</span> results <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3381" class="blob-num js-line-number" data-line-number="3381"></td>
        <td id="LC3381" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3382" class="blob-num js-line-number" data-line-number="3382"></td>
        <td id="LC3382" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> tiles.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L3383" class="blob-num js-line-number" data-line-number="3383"></td>
        <td id="LC3383" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L3384" class="blob-num js-line-number" data-line-number="3384"></td>
        <td id="LC3384" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> t <span class="pl-k">=</span> <span class="pl-c1">0</span>; t <span class="pl-k">&lt;</span> total; t<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L3385" class="blob-num js-line-number" data-line-number="3385"></td>
        <td id="LC3385" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L3386" class="blob-num js-line-number" data-line-number="3386"></td>
        <td id="LC3386" class="blob-code js-file-line">            <span class="pl-k">if</span> (tiles[i].containsPoint(coords[t][<span class="pl-c1">0</span>], coords[t][<span class="pl-c1">1</span>]))</td>
      </tr>
      <tr>
        <td id="L3387" class="blob-num js-line-number" data-line-number="3387"></td>
        <td id="LC3387" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L3388" class="blob-num js-line-number" data-line-number="3388"></td>
        <td id="LC3388" class="blob-code js-file-line">                results.<span class="pl-s3">push</span>(tiles[i]);</td>
      </tr>
      <tr>
        <td id="L3389" class="blob-num js-line-number" data-line-number="3389"></td>
        <td id="LC3389" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3390" class="blob-num js-line-number" data-line-number="3390"></td>
        <td id="LC3390" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3391" class="blob-num js-line-number" data-line-number="3391"></td>
        <td id="LC3391" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3392" class="blob-num js-line-number" data-line-number="3392"></td>
        <td id="LC3392" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3393" class="blob-num js-line-number" data-line-number="3393"></td>
        <td id="LC3393" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3394" class="blob-num js-line-number" data-line-number="3394"></td>
        <td id="LC3394" class="blob-code js-file-line">    <span class="pl-k">return</span> results;</td>
      </tr>
      <tr>
        <td id="L3395" class="blob-num js-line-number" data-line-number="3395"></td>
        <td id="LC3395" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3396" class="blob-num js-line-number" data-line-number="3396"></td>
        <td id="LC3396" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3397" class="blob-num js-line-number" data-line-number="3397"></td>
        <td id="LC3397" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3398" class="blob-num js-line-number" data-line-number="3398"></td>
        <td id="LC3398" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3399" class="blob-num js-line-number" data-line-number="3399"></td>
        <td id="LC3399" class="blob-code js-file-line"><span class="pl-c">* Get all tiles that exist within the given area, defined by the top-left corner, width and height.</span></td>
      </tr>
      <tr>
        <td id="L3400" class="blob-num js-line-number" data-line-number="3400"></td>
        <td id="LC3400" class="blob-code js-file-line"><span class="pl-c">* Values given are in pixels, not tiles.</span></td>
      </tr>
      <tr>
        <td id="L3401" class="blob-num js-line-number" data-line-number="3401"></td>
        <td id="LC3401" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.TilemapLayer#getTiles</span></td>
      </tr>
      <tr>
        <td id="L3402" class="blob-num js-line-number" data-line-number="3402"></td>
        <td id="LC3402" class="blob-code js-file-line"><span class="pl-c">* @memberof Phaser.TilemapLayer</span></td>
      </tr>
      <tr>
        <td id="L3403" class="blob-num js-line-number" data-line-number="3403"></td>
        <td id="LC3403" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position of the top left corner.</span></td>
      </tr>
      <tr>
        <td id="L3404" class="blob-num js-line-number" data-line-number="3404"></td>
        <td id="LC3404" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position of the top left corner.</span></td>
      </tr>
      <tr>
        <td id="L3405" class="blob-num js-line-number" data-line-number="3405"></td>
        <td id="LC3405" class="blob-code js-file-line"><span class="pl-c">* @param {number} width - Width of the area to get.</span></td>
      </tr>
      <tr>
        <td id="L3406" class="blob-num js-line-number" data-line-number="3406"></td>
        <td id="LC3406" class="blob-code js-file-line"><span class="pl-c">* @param {number} height - Height of the area to get.</span></td>
      </tr>
      <tr>
        <td id="L3407" class="blob-num js-line-number" data-line-number="3407"></td>
        <td id="LC3407" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} [collides=false] - If true only return tiles that collide on one or more faces.</span></td>
      </tr>
      <tr>
        <td id="L3408" class="blob-num js-line-number" data-line-number="3408"></td>
        <td id="LC3408" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} [interestingFace=false] - If true only return tiles that have interesting faces.</span></td>
      </tr>
      <tr>
        <td id="L3409" class="blob-num js-line-number" data-line-number="3409"></td>
        <td id="LC3409" class="blob-code js-file-line"><span class="pl-c">* @return {array&lt;Phaser.Tile&gt;} An array of Phaser.Tiles.</span></td>
      </tr>
      <tr>
        <td id="L3410" class="blob-num js-line-number" data-line-number="3410"></td>
        <td id="LC3410" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3411" class="blob-num js-line-number" data-line-number="3411"></td>
        <td id="LC3411" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTiles</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">width</span>, <span class="pl-vpf">height</span>, <span class="pl-vpf">collides</span>, <span class="pl-vpf">interestingFace</span>) {</td>
      </tr>
      <tr>
        <td id="L3412" class="blob-num js-line-number" data-line-number="3412"></td>
        <td id="LC3412" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3413" class="blob-num js-line-number" data-line-number="3413"></td>
        <td id="LC3413" class="blob-code js-file-line">    <span class="pl-c">//  Should we only get tiles that have at least one of their collision flags set?</span></td>
      </tr>
      <tr>
        <td id="L3414" class="blob-num js-line-number" data-line-number="3414"></td>
        <td id="LC3414" class="blob-code js-file-line">    <span class="pl-c">// (true = yes, false = no just get them all)</span></td>
      </tr>
      <tr>
        <td id="L3415" class="blob-num js-line-number" data-line-number="3415"></td>
        <td id="LC3415" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> collides <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { collides <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L3416" class="blob-num js-line-number" data-line-number="3416"></td>
        <td id="LC3416" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> interestingFace <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { interestingFace <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L3417" class="blob-num js-line-number" data-line-number="3417"></td>
        <td id="LC3417" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3418" class="blob-num js-line-number" data-line-number="3418"></td>
        <td id="LC3418" class="blob-code js-file-line">    <span class="pl-c">// adjust the x,y coordinates for scrollFactor</span></td>
      </tr>
      <tr>
        <td id="L3419" class="blob-num js-line-number" data-line-number="3419"></td>
        <td id="LC3419" class="blob-code js-file-line">    <span class="pl-c">// x = this._fixX(x);</span></td>
      </tr>
      <tr>
        <td id="L3420" class="blob-num js-line-number" data-line-number="3420"></td>
        <td id="LC3420" class="blob-code js-file-line">    <span class="pl-c">// y = this._fixY(y);</span></td>
      </tr>
      <tr>
        <td id="L3421" class="blob-num js-line-number" data-line-number="3421"></td>
        <td id="LC3421" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3422" class="blob-num js-line-number" data-line-number="3422"></td>
        <td id="LC3422" class="blob-code js-file-line">    <span class="pl-k">if</span> (width <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.widthInPixels)</td>
      </tr>
      <tr>
        <td id="L3423" class="blob-num js-line-number" data-line-number="3423"></td>
        <td id="LC3423" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L3424" class="blob-num js-line-number" data-line-number="3424"></td>
        <td id="LC3424" class="blob-code js-file-line">        width <span class="pl-k">=</span> <span class="pl-v">this</span>.widthInPixels;</td>
      </tr>
      <tr>
        <td id="L3425" class="blob-num js-line-number" data-line-number="3425"></td>
        <td id="LC3425" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3426" class="blob-num js-line-number" data-line-number="3426"></td>
        <td id="LC3426" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3427" class="blob-num js-line-number" data-line-number="3427"></td>
        <td id="LC3427" class="blob-code js-file-line">    <span class="pl-k">if</span> (height <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.heightInPixels)</td>
      </tr>
      <tr>
        <td id="L3428" class="blob-num js-line-number" data-line-number="3428"></td>
        <td id="LC3428" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L3429" class="blob-num js-line-number" data-line-number="3429"></td>
        <td id="LC3429" class="blob-code js-file-line">        height <span class="pl-k">=</span> <span class="pl-v">this</span>.heightInPixels;</td>
      </tr>
      <tr>
        <td id="L3430" class="blob-num js-line-number" data-line-number="3430"></td>
        <td id="LC3430" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3431" class="blob-num js-line-number" data-line-number="3431"></td>
        <td id="LC3431" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3432" class="blob-num js-line-number" data-line-number="3432"></td>
        <td id="LC3432" class="blob-code js-file-line">    <span class="pl-c">//  Convert the pixel values into tile coordinates</span></td>
      </tr>
      <tr>
        <td id="L3433" class="blob-num js-line-number" data-line-number="3433"></td>
        <td id="LC3433" class="blob-code js-file-line">    <span class="pl-v">this</span>._mc.tx <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(x, <span class="pl-v">this</span>._mc.cw) / <span class="pl-v">this</span>._mc.cw;</td>
      </tr>
      <tr>
        <td id="L3434" class="blob-num js-line-number" data-line-number="3434"></td>
        <td id="LC3434" class="blob-code js-file-line">    <span class="pl-v">this</span>._mc.ty <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(y, <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span>) / <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span>;</td>
      </tr>
      <tr>
        <td id="L3435" class="blob-num js-line-number" data-line-number="3435"></td>
        <td id="LC3435" class="blob-code js-file-line">    <span class="pl-v">this</span>._mc.tw <span class="pl-k">=</span> (<span class="pl-v">this</span>.game.math.snapToCeil(width, <span class="pl-v">this</span>._mc.cw) <span class="pl-k">+</span> <span class="pl-v">this</span>._mc.cw) / <span class="pl-v">this</span>._mc.cw;</td>
      </tr>
      <tr>
        <td id="L3436" class="blob-num js-line-number" data-line-number="3436"></td>
        <td id="LC3436" class="blob-code js-file-line">    <span class="pl-v">this</span>._mc.th <span class="pl-k">=</span> (<span class="pl-v">this</span>.game.math.snapToCeil(height, <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span>) <span class="pl-k">+</span> <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span>) / <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span>;</td>
      </tr>
      <tr>
        <td id="L3437" class="blob-num js-line-number" data-line-number="3437"></td>
        <td id="LC3437" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3438" class="blob-num js-line-number" data-line-number="3438"></td>
        <td id="LC3438" class="blob-code js-file-line">    <span class="pl-c">//  This should apply the layer x/y here</span></td>
      </tr>
      <tr>
        <td id="L3439" class="blob-num js-line-number" data-line-number="3439"></td>
        <td id="LC3439" class="blob-code js-file-line">    <span class="pl-s">var</span> results <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3440" class="blob-num js-line-number" data-line-number="3440"></td>
        <td id="LC3440" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3441" class="blob-num js-line-number" data-line-number="3441"></td>
        <td id="LC3441" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> wy <span class="pl-k">=</span> <span class="pl-v">this</span>._mc.ty; wy <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._mc.ty <span class="pl-k">+</span> <span class="pl-v">this</span>._mc.th; wy<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L3442" class="blob-num js-line-number" data-line-number="3442"></td>
        <td id="LC3442" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L3443" class="blob-num js-line-number" data-line-number="3443"></td>
        <td id="LC3443" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> wx <span class="pl-k">=</span> <span class="pl-v">this</span>._mc.tx; wx <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._mc.tx <span class="pl-k">+</span> <span class="pl-v">this</span>._mc.tw; wx<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L3444" class="blob-num js-line-number" data-line-number="3444"></td>
        <td id="LC3444" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L3445" class="blob-num js-line-number" data-line-number="3445"></td>
        <td id="LC3445" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-v">this</span>.tiles[wy] <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.tiles[wy][wx])</td>
      </tr>
      <tr>
        <td id="L3446" class="blob-num js-line-number" data-line-number="3446"></td>
        <td id="LC3446" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L3447" class="blob-num js-line-number" data-line-number="3447"></td>
        <td id="LC3447" class="blob-code js-file-line">                <span class="pl-k">if</span> ((<span class="pl-k">!</span>collides <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>interestingFace) <span class="pl-k">||</span> <span class="pl-v">this</span>.tiles[wy][wx].isInteresting(collides, interestingFace))</td>
      </tr>
      <tr>
        <td id="L3448" class="blob-num js-line-number" data-line-number="3448"></td>
        <td id="LC3448" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L3449" class="blob-num js-line-number" data-line-number="3449"></td>
        <td id="LC3449" class="blob-code js-file-line">                    results.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.tiles[wy][wx]);</td>
      </tr>
      <tr>
        <td id="L3450" class="blob-num js-line-number" data-line-number="3450"></td>
        <td id="LC3450" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3451" class="blob-num js-line-number" data-line-number="3451"></td>
        <td id="LC3451" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3452" class="blob-num js-line-number" data-line-number="3452"></td>
        <td id="LC3452" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3453" class="blob-num js-line-number" data-line-number="3453"></td>
        <td id="LC3453" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3454" class="blob-num js-line-number" data-line-number="3454"></td>
        <td id="LC3454" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3455" class="blob-num js-line-number" data-line-number="3455"></td>
        <td id="LC3455" class="blob-code js-file-line">    <span class="pl-k">return</span> results;</td>
      </tr>
      <tr>
        <td id="L3456" class="blob-num js-line-number" data-line-number="3456"></td>
        <td id="LC3456" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3457" class="blob-num js-line-number" data-line-number="3457"></td>
        <td id="LC3457" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3458" class="blob-num js-line-number" data-line-number="3458"></td>
        <td id="LC3458" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3459" class="blob-num js-line-number" data-line-number="3459"></td>
        <td id="LC3459" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3460" class="blob-num js-line-number" data-line-number="3460"></td>
        <td id="LC3460" class="blob-code js-file-line"><span class="pl-c"> * Renders tiles to the left, pulling from the far right</span></td>
      </tr>
      <tr>
        <td id="L3461" class="blob-num js-line-number" data-line-number="3461"></td>
        <td id="LC3461" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3462" class="blob-num js-line-number" data-line-number="3462"></td>
        <td id="LC3462" class="blob-code js-file-line"><span class="pl-c"> * @method _renderLeft</span></td>
      </tr>
      <tr>
        <td id="L3463" class="blob-num js-line-number" data-line-number="3463"></td>
        <td id="LC3463" class="blob-code js-file-line"><span class="pl-c"> * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle</span></td>
      </tr>
      <tr>
        <td id="L3464" class="blob-num js-line-number" data-line-number="3464"></td>
        <td id="LC3464" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L3465" class="blob-num js-line-number" data-line-number="3465"></td>
        <td id="LC3465" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3466" class="blob-num js-line-number" data-line-number="3466"></td>
        <td id="LC3466" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_renderLeft</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">forceNew</span>) {</td>
      </tr>
      <tr>
        <td id="L3467" class="blob-num js-line-number" data-line-number="3467"></td>
        <td id="LC3467" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">x</span><span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L3468" class="blob-num js-line-number" data-line-number="3468"></td>
        <td id="LC3468" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3469" class="blob-num js-line-number" data-line-number="3469"></td>
        <td id="LC3469" class="blob-code js-file-line">    <span class="pl-c">//move all the far right tiles to the left side</span></td>
      </tr>
      <tr>
        <td id="L3470" class="blob-num js-line-number" data-line-number="3470"></td>
        <td id="LC3470" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3471" class="blob-num js-line-number" data-line-number="3471"></td>
        <td id="LC3471" class="blob-code js-file-line">        <span class="pl-v">this</span>.moveTileSprite(</td>
      </tr>
      <tr>
        <td id="L3472" class="blob-num js-line-number" data-line-number="3472"></td>
        <td id="LC3472" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">right</span>,</td>
      </tr>
      <tr>
        <td id="L3473" class="blob-num js-line-number" data-line-number="3473"></td>
        <td id="LC3473" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">top</span> <span class="pl-k">+</span> i,</td>
      </tr>
      <tr>
        <td id="L3474" class="blob-num js-line-number" data-line-number="3474"></td>
        <td id="LC3474" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">left</span>,</td>
      </tr>
      <tr>
        <td id="L3475" class="blob-num js-line-number" data-line-number="3475"></td>
        <td id="LC3475" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">top</span> <span class="pl-k">+</span> i</td>
      </tr>
      <tr>
        <td id="L3476" class="blob-num js-line-number" data-line-number="3476"></td>
        <td id="LC3476" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L3477" class="blob-num js-line-number" data-line-number="3477"></td>
        <td id="LC3477" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3478" class="blob-num js-line-number" data-line-number="3478"></td>
        <td id="LC3478" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3479" class="blob-num js-line-number" data-line-number="3479"></td>
        <td id="LC3479" class="blob-code js-file-line">    <span class="pl-k">if</span> (forceNew) {</td>
      </tr>
      <tr>
        <td id="L3480" class="blob-num js-line-number" data-line-number="3480"></td>
        <td id="LC3480" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3481" class="blob-num js-line-number" data-line-number="3481"></td>
        <td id="LC3481" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3482" class="blob-num js-line-number" data-line-number="3482"></td>
        <td id="LC3482" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3483" class="blob-num js-line-number" data-line-number="3483"></td>
        <td id="LC3483" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3484" class="blob-num js-line-number" data-line-number="3484"></td>
        <td id="LC3484" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3485" class="blob-num js-line-number" data-line-number="3485"></td>
        <td id="LC3485" class="blob-code js-file-line"><span class="pl-c"> * Renders tiles to the right, pulling from the far left</span></td>
      </tr>
      <tr>
        <td id="L3486" class="blob-num js-line-number" data-line-number="3486"></td>
        <td id="LC3486" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3487" class="blob-num js-line-number" data-line-number="3487"></td>
        <td id="LC3487" class="blob-code js-file-line"><span class="pl-c"> * @method _renderRight</span></td>
      </tr>
      <tr>
        <td id="L3488" class="blob-num js-line-number" data-line-number="3488"></td>
        <td id="LC3488" class="blob-code js-file-line"><span class="pl-c"> * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle</span></td>
      </tr>
      <tr>
        <td id="L3489" class="blob-num js-line-number" data-line-number="3489"></td>
        <td id="LC3489" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L3490" class="blob-num js-line-number" data-line-number="3490"></td>
        <td id="LC3490" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3491" class="blob-num js-line-number" data-line-number="3491"></td>
        <td id="LC3491" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_renderRight</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">forceNew</span>) {</td>
      </tr>
      <tr>
        <td id="L3492" class="blob-num js-line-number" data-line-number="3492"></td>
        <td id="LC3492" class="blob-code js-file-line">    <span class="pl-c">//move all the far left tiles to the right side</span></td>
      </tr>
      <tr>
        <td id="L3493" class="blob-num js-line-number" data-line-number="3493"></td>
        <td id="LC3493" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3494" class="blob-num js-line-number" data-line-number="3494"></td>
        <td id="LC3494" class="blob-code js-file-line">        <span class="pl-v">this</span>.moveTileSprite(</td>
      </tr>
      <tr>
        <td id="L3495" class="blob-num js-line-number" data-line-number="3495"></td>
        <td id="LC3495" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">left</span>,</td>
      </tr>
      <tr>
        <td id="L3496" class="blob-num js-line-number" data-line-number="3496"></td>
        <td id="LC3496" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">top</span> <span class="pl-k">+</span> i,</td>
      </tr>
      <tr>
        <td id="L3497" class="blob-num js-line-number" data-line-number="3497"></td>
        <td id="LC3497" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">right</span>,</td>
      </tr>
      <tr>
        <td id="L3498" class="blob-num js-line-number" data-line-number="3498"></td>
        <td id="LC3498" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">top</span> <span class="pl-k">+</span> i</td>
      </tr>
      <tr>
        <td id="L3499" class="blob-num js-line-number" data-line-number="3499"></td>
        <td id="LC3499" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>forceNew) {</td>
      </tr>
      <tr>
        <td id="L3503" class="blob-num js-line-number" data-line-number="3503"></td>
        <td id="LC3503" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderArea.<span class="pl-sc">x</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3504" class="blob-num js-line-number" data-line-number="3504"></td>
        <td id="LC3504" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3505" class="blob-num js-line-number" data-line-number="3505"></td>
        <td id="LC3505" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3506" class="blob-num js-line-number" data-line-number="3506"></td>
        <td id="LC3506" class="blob-code js-file-line">    <span class="pl-k">if</span> (forceNew) {</td>
      </tr>
      <tr>
        <td id="L3507" class="blob-num js-line-number" data-line-number="3507"></td>
        <td id="LC3507" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3508" class="blob-num js-line-number" data-line-number="3508"></td>
        <td id="LC3508" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3509" class="blob-num js-line-number" data-line-number="3509"></td>
        <td id="LC3509" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3510" class="blob-num js-line-number" data-line-number="3510"></td>
        <td id="LC3510" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3511" class="blob-num js-line-number" data-line-number="3511"></td>
        <td id="LC3511" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3512" class="blob-num js-line-number" data-line-number="3512"></td>
        <td id="LC3512" class="blob-code js-file-line"><span class="pl-c"> * Renders tiles to the top, pulling from the far bottom</span></td>
      </tr>
      <tr>
        <td id="L3513" class="blob-num js-line-number" data-line-number="3513"></td>
        <td id="LC3513" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3514" class="blob-num js-line-number" data-line-number="3514"></td>
        <td id="LC3514" class="blob-code js-file-line"><span class="pl-c"> * @method _renderUp</span></td>
      </tr>
      <tr>
        <td id="L3515" class="blob-num js-line-number" data-line-number="3515"></td>
        <td id="LC3515" class="blob-code js-file-line"><span class="pl-c"> * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle</span></td>
      </tr>
      <tr>
        <td id="L3516" class="blob-num js-line-number" data-line-number="3516"></td>
        <td id="LC3516" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L3517" class="blob-num js-line-number" data-line-number="3517"></td>
        <td id="LC3517" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3518" class="blob-num js-line-number" data-line-number="3518"></td>
        <td id="LC3518" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_renderUp</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">forceNew</span>) {</td>
      </tr>
      <tr>
        <td id="L3519" class="blob-num js-line-number" data-line-number="3519"></td>
        <td id="LC3519" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea.<span class="pl-sc">y</span><span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L3520" class="blob-num js-line-number" data-line-number="3520"></td>
        <td id="LC3520" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3521" class="blob-num js-line-number" data-line-number="3521"></td>
        <td id="LC3521" class="blob-code js-file-line">    <span class="pl-c">//move all the far bottom tiles to the top side</span></td>
      </tr>
      <tr>
        <td id="L3522" class="blob-num js-line-number" data-line-number="3522"></td>
        <td id="LC3522" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3523" class="blob-num js-line-number" data-line-number="3523"></td>
        <td id="LC3523" class="blob-code js-file-line">        <span class="pl-v">this</span>.moveTileSprite(</td>
      </tr>
      <tr>
        <td id="L3524" class="blob-num js-line-number" data-line-number="3524"></td>
        <td id="LC3524" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">left</span> <span class="pl-k">+</span> i,</td>
      </tr>
      <tr>
        <td id="L3525" class="blob-num js-line-number" data-line-number="3525"></td>
        <td id="LC3525" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">bottom</span>,</td>
      </tr>
      <tr>
        <td id="L3526" class="blob-num js-line-number" data-line-number="3526"></td>
        <td id="LC3526" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">left</span> <span class="pl-k">+</span> i,</td>
      </tr>
      <tr>
        <td id="L3527" class="blob-num js-line-number" data-line-number="3527"></td>
        <td id="LC3527" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">top</span></td>
      </tr>
      <tr>
        <td id="L3528" class="blob-num js-line-number" data-line-number="3528"></td>
        <td id="LC3528" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L3529" class="blob-num js-line-number" data-line-number="3529"></td>
        <td id="LC3529" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3530" class="blob-num js-line-number" data-line-number="3530"></td>
        <td id="LC3530" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3531" class="blob-num js-line-number" data-line-number="3531"></td>
        <td id="LC3531" class="blob-code js-file-line">    <span class="pl-k">if</span> (forceNew) {</td>
      </tr>
      <tr>
        <td id="L3532" class="blob-num js-line-number" data-line-number="3532"></td>
        <td id="LC3532" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3533" class="blob-num js-line-number" data-line-number="3533"></td>
        <td id="LC3533" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3534" class="blob-num js-line-number" data-line-number="3534"></td>
        <td id="LC3534" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3535" class="blob-num js-line-number" data-line-number="3535"></td>
        <td id="LC3535" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3536" class="blob-num js-line-number" data-line-number="3536"></td>
        <td id="LC3536" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3537" class="blob-num js-line-number" data-line-number="3537"></td>
        <td id="LC3537" class="blob-code js-file-line"><span class="pl-c"> * Renders tiles to the bottom, pulling from the far top</span></td>
      </tr>
      <tr>
        <td id="L3538" class="blob-num js-line-number" data-line-number="3538"></td>
        <td id="LC3538" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3539" class="blob-num js-line-number" data-line-number="3539"></td>
        <td id="LC3539" class="blob-code js-file-line"><span class="pl-c"> * @method _renderDown</span></td>
      </tr>
      <tr>
        <td id="L3540" class="blob-num js-line-number" data-line-number="3540"></td>
        <td id="LC3540" class="blob-code js-file-line"><span class="pl-c"> * @param [forceNew=false] {Boolean} If set to true, new tiles are created instead of trying to recycle</span></td>
      </tr>
      <tr>
        <td id="L3541" class="blob-num js-line-number" data-line-number="3541"></td>
        <td id="LC3541" class="blob-code js-file-line"><span class="pl-c"> * @private</span></td>
      </tr>
      <tr>
        <td id="L3542" class="blob-num js-line-number" data-line-number="3542"></td>
        <td id="LC3542" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3543" class="blob-num js-line-number" data-line-number="3543"></td>
        <td id="LC3543" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_renderDown</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">forceNew</span>) {</td>
      </tr>
      <tr>
        <td id="L3544" class="blob-num js-line-number" data-line-number="3544"></td>
        <td id="LC3544" class="blob-code js-file-line">    <span class="pl-c">//move all the far top tiles to the bottom side</span></td>
      </tr>
      <tr>
        <td id="L3545" class="blob-num js-line-number" data-line-number="3545"></td>
        <td id="LC3545" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">width</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3546" class="blob-num js-line-number" data-line-number="3546"></td>
        <td id="LC3546" class="blob-code js-file-line">        <span class="pl-v">this</span>.moveTileSprite(</td>
      </tr>
      <tr>
        <td id="L3547" class="blob-num js-line-number" data-line-number="3547"></td>
        <td id="LC3547" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">left</span> <span class="pl-k">+</span> i,</td>
      </tr>
      <tr>
        <td id="L3548" class="blob-num js-line-number" data-line-number="3548"></td>
        <td id="LC3548" class="blob-code js-file-line">            forceNew <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-v">this</span>._renderArea.<span class="pl-sc">top</span>,</td>
      </tr>
      <tr>
        <td id="L3549" class="blob-num js-line-number" data-line-number="3549"></td>
        <td id="LC3549" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">left</span> <span class="pl-k">+</span> i,</td>
      </tr>
      <tr>
        <td id="L3550" class="blob-num js-line-number" data-line-number="3550"></td>
        <td id="LC3550" class="blob-code js-file-line">            <span class="pl-v">this</span>._renderArea.<span class="pl-sc">bottom</span></td>
      </tr>
      <tr>
        <td id="L3551" class="blob-num js-line-number" data-line-number="3551"></td>
        <td id="LC3551" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L3552" class="blob-num js-line-number" data-line-number="3552"></td>
        <td id="LC3552" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3553" class="blob-num js-line-number" data-line-number="3553"></td>
        <td id="LC3553" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3554" class="blob-num js-line-number" data-line-number="3554"></td>
        <td id="LC3554" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>forceNew) {</td>
      </tr>
      <tr>
        <td id="L3555" class="blob-num js-line-number" data-line-number="3555"></td>
        <td id="LC3555" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderArea.<span class="pl-sc">y</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3556" class="blob-num js-line-number" data-line-number="3556"></td>
        <td id="LC3556" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3557" class="blob-num js-line-number" data-line-number="3557"></td>
        <td id="LC3557" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3558" class="blob-num js-line-number" data-line-number="3558"></td>
        <td id="LC3558" class="blob-code js-file-line">    <span class="pl-k">if</span> (forceNew) {</td>
      </tr>
      <tr>
        <td id="L3559" class="blob-num js-line-number" data-line-number="3559"></td>
        <td id="LC3559" class="blob-code js-file-line">        <span class="pl-v">this</span>._renderArea.<span class="pl-sc">height</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3560" class="blob-num js-line-number" data-line-number="3560"></td>
        <td id="LC3560" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3561" class="blob-num js-line-number" data-line-number="3561"></td>
        <td id="LC3561" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3562" class="blob-num js-line-number" data-line-number="3562"></td>
        <td id="LC3562" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3563" class="blob-num js-line-number" data-line-number="3563"></td>
        <td id="LC3563" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3564" class="blob-num js-line-number" data-line-number="3564"></td>
        <td id="LC3564" class="blob-code js-file-line"><span class="pl-c"> * Destroys the tile layer completely</span></td>
      </tr>
      <tr>
        <td id="L3565" class="blob-num js-line-number" data-line-number="3565"></td>
        <td id="LC3565" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3566" class="blob-num js-line-number" data-line-number="3566"></td>
        <td id="LC3566" class="blob-code js-file-line"><span class="pl-c"> * @method destroy</span></td>
      </tr>
      <tr>
        <td id="L3567" class="blob-num js-line-number" data-line-number="3567"></td>
        <td id="LC3567" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3568" class="blob-num js-line-number" data-line-number="3568"></td>
        <td id="LC3568" class="blob-code js-file-line"><span class="pl-s3">Tilelayer</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">destroy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3569" class="blob-num js-line-number" data-line-number="3569"></td>
        <td id="LC3569" class="blob-code js-file-line">    Phaser.Group.<span class="pl-sc">prototype</span>.destroy.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L3570" class="blob-num js-line-number" data-line-number="3570"></td>
        <td id="LC3570" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3571" class="blob-num js-line-number" data-line-number="3571"></td>
        <td id="LC3571" class="blob-code js-file-line">    <span class="pl-v">this</span>.state <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3572" class="blob-num js-line-number" data-line-number="3572"></td>
        <td id="LC3572" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">name</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3573" class="blob-num js-line-number" data-line-number="3573"></td>
        <td id="LC3573" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">size</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3574" class="blob-num js-line-number" data-line-number="3574"></td>
        <td id="LC3574" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileIds <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3575" class="blob-num js-line-number" data-line-number="3575"></td>
        <td id="LC3575" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3576" class="blob-num js-line-number" data-line-number="3576"></td>
        <td id="LC3576" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">type</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3577" class="blob-num js-line-number" data-line-number="3577"></td>
        <td id="LC3577" class="blob-code js-file-line">    <span class="pl-v">this</span>.position.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3578" class="blob-num js-line-number" data-line-number="3578"></td>
        <td id="LC3578" class="blob-code js-file-line">    <span class="pl-v">this</span>.position.<span class="pl-sc">y</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3579" class="blob-num js-line-number" data-line-number="3579"></td>
        <td id="LC3579" class="blob-code js-file-line">    <span class="pl-v">this</span>.alpha <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3580" class="blob-num js-line-number" data-line-number="3580"></td>
        <td id="LC3580" class="blob-code js-file-line">    <span class="pl-v">this</span>.visible <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3581" class="blob-num js-line-number" data-line-number="3581"></td>
        <td id="LC3581" class="blob-code js-file-line">    <span class="pl-v">this</span>.preRender <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3582" class="blob-num js-line-number" data-line-number="3582"></td>
        <td id="LC3582" class="blob-code js-file-line">    <span class="pl-v">this</span>.chunkSize <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3583" class="blob-num js-line-number" data-line-number="3583"></td>
        <td id="LC3583" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3584" class="blob-num js-line-number" data-line-number="3584"></td>
        <td id="LC3584" class="blob-code js-file-line">    <span class="pl-v">this</span>._buffered <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3585" class="blob-num js-line-number" data-line-number="3585"></td>
        <td id="LC3585" class="blob-code js-file-line">    <span class="pl-v">this</span>._scroll <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3586" class="blob-num js-line-number" data-line-number="3586"></td>
        <td id="LC3586" class="blob-code js-file-line">    <span class="pl-v">this</span>._renderArea <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3587" class="blob-num js-line-number" data-line-number="3587"></td>
        <td id="LC3587" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3588" class="blob-num js-line-number" data-line-number="3588"></td>
        <td id="LC3588" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3589" class="blob-num js-line-number" data-line-number="3589"></td>
        <td id="LC3589" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilelayer.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>scrollX<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3590" class="blob-num js-line-number" data-line-number="3590"></td>
        <td id="LC3590" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3591" class="blob-num js-line-number" data-line-number="3591"></td>
        <td id="LC3591" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3592" class="blob-num js-line-number" data-line-number="3592"></td>
        <td id="LC3592" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L3593" class="blob-num js-line-number" data-line-number="3593"></td>
        <td id="LC3593" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3594" class="blob-num js-line-number" data-line-number="3594"></td>
        <td id="LC3594" class="blob-code js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">x</span>) {</td>
      </tr>
      <tr>
        <td id="L3595" class="blob-num js-line-number" data-line-number="3595"></td>
        <td id="LC3595" class="blob-code js-file-line">            <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">x</span> <span class="pl-k">-=</span> value <span class="pl-k">-</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3596" class="blob-num js-line-number" data-line-number="3596"></td>
        <td id="LC3596" class="blob-code js-file-line">            <span class="pl-v">this</span>._scroll.<span class="pl-sc">x</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L3597" class="blob-num js-line-number" data-line-number="3597"></td>
        <td id="LC3597" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3598" class="blob-num js-line-number" data-line-number="3598"></td>
        <td id="LC3598" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3599" class="blob-num js-line-number" data-line-number="3599"></td>
        <td id="LC3599" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L3600" class="blob-num js-line-number" data-line-number="3600"></td>
        <td id="LC3600" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3601" class="blob-num js-line-number" data-line-number="3601"></td>
        <td id="LC3601" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilelayer.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>scrollY<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3602" class="blob-num js-line-number" data-line-number="3602"></td>
        <td id="LC3602" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3603" class="blob-num js-line-number" data-line-number="3603"></td>
        <td id="LC3603" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3604" class="blob-num js-line-number" data-line-number="3604"></td>
        <td id="LC3604" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L3605" class="blob-num js-line-number" data-line-number="3605"></td>
        <td id="LC3605" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3606" class="blob-num js-line-number" data-line-number="3606"></td>
        <td id="LC3606" class="blob-code js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3607" class="blob-num js-line-number" data-line-number="3607"></td>
        <td id="LC3607" class="blob-code js-file-line">            <span class="pl-v">this</span>._scrollDelta.<span class="pl-sc">y</span> <span class="pl-k">-=</span> value <span class="pl-k">-</span> <span class="pl-v">this</span>._scroll.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3608" class="blob-num js-line-number" data-line-number="3608"></td>
        <td id="LC3608" class="blob-code js-file-line">            <span class="pl-v">this</span>._scroll.<span class="pl-sc">y</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L3609" class="blob-num js-line-number" data-line-number="3609"></td>
        <td id="LC3609" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3610" class="blob-num js-line-number" data-line-number="3610"></td>
        <td id="LC3610" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3611" class="blob-num js-line-number" data-line-number="3611"></td>
        <td id="LC3611" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L3612" class="blob-num js-line-number" data-line-number="3612"></td>
        <td id="LC3612" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3613" class="blob-num js-line-number" data-line-number="3613"></td>
        <td id="LC3613" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilelayer.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>widthInPixels<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3614" class="blob-num js-line-number" data-line-number="3614"></td>
        <td id="LC3614" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3615" class="blob-num js-line-number" data-line-number="3615"></td>
        <td id="LC3615" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">size</span>.<span class="pl-sc">x</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.map.scaledTileWidth;</td>
      </tr>
      <tr>
        <td id="L3616" class="blob-num js-line-number" data-line-number="3616"></td>
        <td id="LC3616" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3617" class="blob-num js-line-number" data-line-number="3617"></td>
        <td id="LC3617" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L3618" class="blob-num js-line-number" data-line-number="3618"></td>
        <td id="LC3618" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3619" class="blob-num js-line-number" data-line-number="3619"></td>
        <td id="LC3619" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilelayer.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>heightInPixels<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3620" class="blob-num js-line-number" data-line-number="3620"></td>
        <td id="LC3620" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3621" class="blob-num js-line-number" data-line-number="3621"></td>
        <td id="LC3621" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">size</span>.<span class="pl-sc">y</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.map.scaledTileHeight;</td>
      </tr>
      <tr>
        <td id="L3622" class="blob-num js-line-number" data-line-number="3622"></td>
        <td id="LC3622" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3623" class="blob-num js-line-number" data-line-number="3623"></td>
        <td id="LC3623" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L3624" class="blob-num js-line-number" data-line-number="3624"></td>
        <td id="LC3624" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3625" class="blob-num js-line-number" data-line-number="3625"></td>
        <td id="LC3625" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3626" class="blob-num js-line-number" data-line-number="3626"></td>
        <td id="LC3626" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.TilemapLayer#collisionWidth</span></td>
      </tr>
      <tr>
        <td id="L3627" class="blob-num js-line-number" data-line-number="3627"></td>
        <td id="LC3627" class="blob-code js-file-line"><span class="pl-c">* @property {number} collisionWidth - The width of the collision tiles.</span></td>
      </tr>
      <tr>
        <td id="L3628" class="blob-num js-line-number" data-line-number="3628"></td>
        <td id="LC3628" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3629" class="blob-num js-line-number" data-line-number="3629"></td>
        <td id="LC3629" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilelayer.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>collisionWidth<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3630" class="blob-num js-line-number" data-line-number="3630"></td>
        <td id="LC3630" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3631" class="blob-num js-line-number" data-line-number="3631"></td>
        <td id="LC3631" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3632" class="blob-num js-line-number" data-line-number="3632"></td>
        <td id="LC3632" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>._mc.cw;</td>
      </tr>
      <tr>
        <td id="L3633" class="blob-num js-line-number" data-line-number="3633"></td>
        <td id="LC3633" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L3634" class="blob-num js-line-number" data-line-number="3634"></td>
        <td id="LC3634" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3635" class="blob-num js-line-number" data-line-number="3635"></td>
        <td id="LC3635" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3636" class="blob-num js-line-number" data-line-number="3636"></td>
        <td id="LC3636" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3637" class="blob-num js-line-number" data-line-number="3637"></td>
        <td id="LC3637" class="blob-code js-file-line">        <span class="pl-v">this</span>._mc.cw <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L3638" class="blob-num js-line-number" data-line-number="3638"></td>
        <td id="LC3638" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3639" class="blob-num js-line-number" data-line-number="3639"></td>
        <td id="LC3639" class="blob-code js-file-line">        <span class="pl-c">// this.dirty = true;</span></td>
      </tr>
      <tr>
        <td id="L3640" class="blob-num js-line-number" data-line-number="3640"></td>
        <td id="LC3640" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3641" class="blob-num js-line-number" data-line-number="3641"></td>
        <td id="LC3641" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3642" class="blob-num js-line-number" data-line-number="3642"></td>
        <td id="LC3642" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3643" class="blob-num js-line-number" data-line-number="3643"></td>
        <td id="LC3643" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L3644" class="blob-num js-line-number" data-line-number="3644"></td>
        <td id="LC3644" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3645" class="blob-num js-line-number" data-line-number="3645"></td>
        <td id="LC3645" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3646" class="blob-num js-line-number" data-line-number="3646"></td>
        <td id="LC3646" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.TilemapLayer#collisionHeight</span></td>
      </tr>
      <tr>
        <td id="L3647" class="blob-num js-line-number" data-line-number="3647"></td>
        <td id="LC3647" class="blob-code js-file-line"><span class="pl-c">* @property {number} collisionHeight - The height of the collision tiles.</span></td>
      </tr>
      <tr>
        <td id="L3648" class="blob-num js-line-number" data-line-number="3648"></td>
        <td id="LC3648" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3649" class="blob-num js-line-number" data-line-number="3649"></td>
        <td id="LC3649" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilelayer.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>collisionHeight<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L3650" class="blob-num js-line-number" data-line-number="3650"></td>
        <td id="LC3650" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3651" class="blob-num js-line-number" data-line-number="3651"></td>
        <td id="LC3651" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L3652" class="blob-num js-line-number" data-line-number="3652"></td>
        <td id="LC3652" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span>;</td>
      </tr>
      <tr>
        <td id="L3653" class="blob-num js-line-number" data-line-number="3653"></td>
        <td id="LC3653" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L3654" class="blob-num js-line-number" data-line-number="3654"></td>
        <td id="LC3654" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3655" class="blob-num js-line-number" data-line-number="3655"></td>
        <td id="LC3655" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3656" class="blob-num js-line-number" data-line-number="3656"></td>
        <td id="LC3656" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3657" class="blob-num js-line-number" data-line-number="3657"></td>
        <td id="LC3657" class="blob-code js-file-line">        <span class="pl-v">this</span>._mc.<span class="pl-sc">ch</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L3658" class="blob-num js-line-number" data-line-number="3658"></td>
        <td id="LC3658" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3659" class="blob-num js-line-number" data-line-number="3659"></td>
        <td id="LC3659" class="blob-code js-file-line">        <span class="pl-c">// this.dirty = true;</span></td>
      </tr>
      <tr>
        <td id="L3660" class="blob-num js-line-number" data-line-number="3660"></td>
        <td id="LC3660" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3661" class="blob-num js-line-number" data-line-number="3661"></td>
        <td id="LC3661" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3662" class="blob-num js-line-number" data-line-number="3662"></td>
        <td id="LC3662" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3663" class="blob-num js-line-number" data-line-number="3663"></td>
        <td id="LC3663" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L3664" class="blob-num js-line-number" data-line-number="3664"></td>
        <td id="LC3664" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3665" class="blob-num js-line-number" data-line-number="3665"></td>
        <td id="LC3665" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>../utils<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./Tile<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">13</span>}],<span class="pl-c1">15</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L3666" class="blob-num js-line-number" data-line-number="3666"></td>
        <td id="LC3666" class="blob-code js-file-line"><span class="pl-s">var</span> Tilelayer <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./Tilelayer<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3667" class="blob-num js-line-number" data-line-number="3667"></td>
        <td id="LC3667" class="blob-code js-file-line">    Objectlayer <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./Objectlayer<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3668" class="blob-num js-line-number" data-line-number="3668"></td>
        <td id="LC3668" class="blob-code js-file-line">    Tile <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./Tile<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3669" class="blob-num js-line-number" data-line-number="3669"></td>
        <td id="LC3669" class="blob-code js-file-line">    Tileset <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./Tileset<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3670" class="blob-num js-line-number" data-line-number="3670"></td>
        <td id="LC3670" class="blob-code js-file-line">    TilemapParser <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>./TilemapParser<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3671" class="blob-num js-line-number" data-line-number="3671"></td>
        <td id="LC3671" class="blob-code js-file-line">    utils <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../utils<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L3672" class="blob-num js-line-number" data-line-number="3672"></td>
        <td id="LC3672" class="blob-code js-file-line">    C <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../constants<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3673" class="blob-num js-line-number" data-line-number="3673"></td>
        <td id="LC3673" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3674" class="blob-num js-line-number" data-line-number="3674"></td>
        <td id="LC3674" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3675" class="blob-num js-line-number" data-line-number="3675"></td>
        <td id="LC3675" class="blob-code js-file-line"><span class="pl-c"> * Tiled map that represents an entire tile map with multiple layers or object groups.</span></td>
      </tr>
      <tr>
        <td id="L3676" class="blob-num js-line-number" data-line-number="3676"></td>
        <td id="LC3676" class="blob-code js-file-line"><span class="pl-c"> * Often it is easier to create a tilemap using the object factor on a world, rather</span></td>
      </tr>
      <tr>
        <td id="L3677" class="blob-num js-line-number" data-line-number="3677"></td>
        <td id="LC3677" class="blob-code js-file-line"><span class="pl-c"> * than doing it manually yourself.</span></td>
      </tr>
      <tr>
        <td id="L3678" class="blob-num js-line-number" data-line-number="3678"></td>
        <td id="LC3678" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3679" class="blob-num js-line-number" data-line-number="3679"></td>
        <td id="LC3679" class="blob-code js-file-line"><span class="pl-c"> * @class Tilemap</span></td>
      </tr>
      <tr>
        <td id="L3680" class="blob-num js-line-number" data-line-number="3680"></td>
        <td id="LC3680" class="blob-code js-file-line"><span class="pl-c"> * @constructor</span></td>
      </tr>
      <tr>
        <td id="L3681" class="blob-num js-line-number" data-line-number="3681"></td>
        <td id="LC3681" class="blob-code js-file-line"><span class="pl-c"> * @param {Phaser.Game} game - Game reference to the currently running game.</span></td>
      </tr>
      <tr>
        <td id="L3682" class="blob-num js-line-number" data-line-number="3682"></td>
        <td id="LC3682" class="blob-code js-file-line"><span class="pl-c"> * @param {string} [key] - The name of the tiledmap, this is usually the filename without the extension.</span></td>
      </tr>
      <tr>
        <td id="L3683" class="blob-num js-line-number" data-line-number="3683"></td>
        <td id="LC3683" class="blob-code js-file-line"><span class="pl-c"> * @param {Phaser.Group|Phaser.SpriteBatch} [group] - Group to add the tilemap to.</span></td>
      </tr>
      <tr>
        <td id="L3684" class="blob-num js-line-number" data-line-number="3684"></td>
        <td id="LC3684" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3685" class="blob-num js-line-number" data-line-number="3685"></td>
        <td id="LC3685" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Tilemap</span>(<span class="pl-vpf">game</span>, <span class="pl-vpf">key</span>, <span class="pl-vpf">group</span>) {</td>
      </tr>
      <tr>
        <td id="L3686" class="blob-num js-line-number" data-line-number="3686"></td>
        <td id="LC3686" class="blob-code js-file-line">    Phaser.Group.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, game, group, key);</td>
      </tr>
      <tr>
        <td id="L3687" class="blob-num js-line-number" data-line-number="3687"></td>
        <td id="LC3687" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3688" class="blob-num js-line-number" data-line-number="3688"></td>
        <td id="LC3688" class="blob-code js-file-line">    <span class="pl-s">var</span> data <span class="pl-k">=</span> TilemapParser.<span class="pl-s3">parse</span>(game, key);</td>
      </tr>
      <tr>
        <td id="L3689" class="blob-num js-line-number" data-line-number="3689"></td>
        <td id="LC3689" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3690" class="blob-num js-line-number" data-line-number="3690"></td>
        <td id="LC3690" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">type</span> <span class="pl-k">=</span> Phaser.TILEMAP;</td>
      </tr>
      <tr>
        <td id="L3691" class="blob-num js-line-number" data-line-number="3691"></td>
        <td id="LC3691" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3692" class="blob-num js-line-number" data-line-number="3692"></td>
        <td id="LC3692" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3693" class="blob-num js-line-number" data-line-number="3693"></td>
        <td id="LC3693" class="blob-code js-file-line"><span class="pl-c">     * The key of this map data in the Phaser.Cache.</span></td>
      </tr>
      <tr>
        <td id="L3694" class="blob-num js-line-number" data-line-number="3694"></td>
        <td id="LC3694" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3695" class="blob-num js-line-number" data-line-number="3695"></td>
        <td id="LC3695" class="blob-code js-file-line"><span class="pl-c">     * @property key</span></td>
      </tr>
      <tr>
        <td id="L3696" class="blob-num js-line-number" data-line-number="3696"></td>
        <td id="LC3696" class="blob-code js-file-line"><span class="pl-c">     * @type String</span></td>
      </tr>
      <tr>
        <td id="L3697" class="blob-num js-line-number" data-line-number="3697"></td>
        <td id="LC3697" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3698" class="blob-num js-line-number" data-line-number="3698"></td>
        <td id="LC3698" class="blob-code js-file-line">    <span class="pl-v">this</span>.key <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L3699" class="blob-num js-line-number" data-line-number="3699"></td>
        <td id="LC3699" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3700" class="blob-num js-line-number" data-line-number="3700"></td>
        <td id="LC3700" class="blob-code js-file-line">    <span class="pl-k">if</span> (data <span class="pl-k">===</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3701" class="blob-num js-line-number" data-line-number="3701"></td>
        <td id="LC3701" class="blob-code js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3702" class="blob-num js-line-number" data-line-number="3702"></td>
        <td id="LC3702" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3703" class="blob-num js-line-number" data-line-number="3703"></td>
        <td id="LC3703" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3704" class="blob-num js-line-number" data-line-number="3704"></td>
        <td id="LC3704" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">size</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(data.<span class="pl-sc">width</span>, data.<span class="pl-sc">height</span>);</td>
      </tr>
      <tr>
        <td id="L3705" class="blob-num js-line-number" data-line-number="3705"></td>
        <td id="LC3705" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3706" class="blob-num js-line-number" data-line-number="3706"></td>
        <td id="LC3706" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3707" class="blob-num js-line-number" data-line-number="3707"></td>
        <td id="LC3707" class="blob-code js-file-line"><span class="pl-c">     * @property {number} tileWidth - The base width of the tiles in the map (in pixels).</span></td>
      </tr>
      <tr>
        <td id="L3708" class="blob-num js-line-number" data-line-number="3708"></td>
        <td id="LC3708" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3709" class="blob-num js-line-number" data-line-number="3709"></td>
        <td id="LC3709" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileWidth <span class="pl-k">=</span> data.tilewidth;</td>
      </tr>
      <tr>
        <td id="L3710" class="blob-num js-line-number" data-line-number="3710"></td>
        <td id="LC3710" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3711" class="blob-num js-line-number" data-line-number="3711"></td>
        <td id="LC3711" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3712" class="blob-num js-line-number" data-line-number="3712"></td>
        <td id="LC3712" class="blob-code js-file-line"><span class="pl-c">     * @property {number} tileHeight - The base height of the tiles in the map (in pixels).</span></td>
      </tr>
      <tr>
        <td id="L3713" class="blob-num js-line-number" data-line-number="3713"></td>
        <td id="LC3713" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3714" class="blob-num js-line-number" data-line-number="3714"></td>
        <td id="LC3714" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileHeight <span class="pl-k">=</span> data.tileheight;</td>
      </tr>
      <tr>
        <td id="L3715" class="blob-num js-line-number" data-line-number="3715"></td>
        <td id="LC3715" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3716" class="blob-num js-line-number" data-line-number="3716"></td>
        <td id="LC3716" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3717" class="blob-num js-line-number" data-line-number="3717"></td>
        <td id="LC3717" class="blob-code js-file-line"><span class="pl-c">     * @property {number} scaledTileWidth - The scaled width of the tiles in the map (in pixels).</span></td>
      </tr>
      <tr>
        <td id="L3718" class="blob-num js-line-number" data-line-number="3718"></td>
        <td id="LC3718" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3719" class="blob-num js-line-number" data-line-number="3719"></td>
        <td id="LC3719" class="blob-code js-file-line">    <span class="pl-v">this</span>.scaledTileWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.tileWidth;</td>
      </tr>
      <tr>
        <td id="L3720" class="blob-num js-line-number" data-line-number="3720"></td>
        <td id="LC3720" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3721" class="blob-num js-line-number" data-line-number="3721"></td>
        <td id="LC3721" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3722" class="blob-num js-line-number" data-line-number="3722"></td>
        <td id="LC3722" class="blob-code js-file-line"><span class="pl-c">     * @property {number} scaledTileHeight - The scaled height of the tiles in the map (in pixels).</span></td>
      </tr>
      <tr>
        <td id="L3723" class="blob-num js-line-number" data-line-number="3723"></td>
        <td id="LC3723" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3724" class="blob-num js-line-number" data-line-number="3724"></td>
        <td id="LC3724" class="blob-code js-file-line">    <span class="pl-v">this</span>.scaledTileHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.tileHeight;</td>
      </tr>
      <tr>
        <td id="L3725" class="blob-num js-line-number" data-line-number="3725"></td>
        <td id="LC3725" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3726" class="blob-num js-line-number" data-line-number="3726"></td>
        <td id="LC3726" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3727" class="blob-num js-line-number" data-line-number="3727"></td>
        <td id="LC3727" class="blob-code js-file-line"><span class="pl-c">     * @property {string} orientation - The orientation of the map data (as specified in Tiled), usually &#39;orthogonal&#39;.</span></td>
      </tr>
      <tr>
        <td id="L3728" class="blob-num js-line-number" data-line-number="3728"></td>
        <td id="LC3728" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3729" class="blob-num js-line-number" data-line-number="3729"></td>
        <td id="LC3729" class="blob-code js-file-line">    <span class="pl-v">this</span>.orientation <span class="pl-k">=</span> data.orientation;</td>
      </tr>
      <tr>
        <td id="L3730" class="blob-num js-line-number" data-line-number="3730"></td>
        <td id="LC3730" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3731" class="blob-num js-line-number" data-line-number="3731"></td>
        <td id="LC3731" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3732" class="blob-num js-line-number" data-line-number="3732"></td>
        <td id="LC3732" class="blob-code js-file-line"><span class="pl-c">     * @property {number} format - The format of the map data, either Phaser.Tilemap.CSV or Phaser.Tilemap.TILED_JSON.</span></td>
      </tr>
      <tr>
        <td id="L3733" class="blob-num js-line-number" data-line-number="3733"></td>
        <td id="LC3733" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3734" class="blob-num js-line-number" data-line-number="3734"></td>
        <td id="LC3734" class="blob-code js-file-line">    <span class="pl-v">this</span>.format <span class="pl-k">=</span> data.format;</td>
      </tr>
      <tr>
        <td id="L3735" class="blob-num js-line-number" data-line-number="3735"></td>
        <td id="LC3735" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3736" class="blob-num js-line-number" data-line-number="3736"></td>
        <td id="LC3736" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3737" class="blob-num js-line-number" data-line-number="3737"></td>
        <td id="LC3737" class="blob-code js-file-line"><span class="pl-c">     * @property {number} version - The version of the map data (as specified in Tiled, usually 1).</span></td>
      </tr>
      <tr>
        <td id="L3738" class="blob-num js-line-number" data-line-number="3738"></td>
        <td id="LC3738" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3739" class="blob-num js-line-number" data-line-number="3739"></td>
        <td id="LC3739" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">version</span> <span class="pl-k">=</span> data.<span class="pl-sc">version</span>;</td>
      </tr>
      <tr>
        <td id="L3740" class="blob-num js-line-number" data-line-number="3740"></td>
        <td id="LC3740" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3741" class="blob-num js-line-number" data-line-number="3741"></td>
        <td id="LC3741" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3742" class="blob-num js-line-number" data-line-number="3742"></td>
        <td id="LC3742" class="blob-code js-file-line"><span class="pl-c">     * @property {object} properties - Map specific properties as specified in Tiled.</span></td>
      </tr>
      <tr>
        <td id="L3743" class="blob-num js-line-number" data-line-number="3743"></td>
        <td id="LC3743" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3744" class="blob-num js-line-number" data-line-number="3744"></td>
        <td id="LC3744" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> utils.parseTiledProperties(data.properties);</td>
      </tr>
      <tr>
        <td id="L3745" class="blob-num js-line-number" data-line-number="3745"></td>
        <td id="LC3745" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3746" class="blob-num js-line-number" data-line-number="3746"></td>
        <td id="LC3746" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3747" class="blob-num js-line-number" data-line-number="3747"></td>
        <td id="LC3747" class="blob-code js-file-line"><span class="pl-c">     * @property {number} widthInPixels - The width of the map in pixels based on width * tileWidth.</span></td>
      </tr>
      <tr>
        <td id="L3748" class="blob-num js-line-number" data-line-number="3748"></td>
        <td id="LC3748" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3749" class="blob-num js-line-number" data-line-number="3749"></td>
        <td id="LC3749" class="blob-code js-file-line">    <span class="pl-v">this</span>.widthInPixels <span class="pl-k">=</span> data.<span class="pl-sc">width</span> <span class="pl-k">*</span> data.tilewidth;</td>
      </tr>
      <tr>
        <td id="L3750" class="blob-num js-line-number" data-line-number="3750"></td>
        <td id="LC3750" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3751" class="blob-num js-line-number" data-line-number="3751"></td>
        <td id="LC3751" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3752" class="blob-num js-line-number" data-line-number="3752"></td>
        <td id="LC3752" class="blob-code js-file-line"><span class="pl-c">     * @property {number} heightInPixels - The height of the map in pixels based on height * tileHeight.</span></td>
      </tr>
      <tr>
        <td id="L3753" class="blob-num js-line-number" data-line-number="3753"></td>
        <td id="LC3753" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3754" class="blob-num js-line-number" data-line-number="3754"></td>
        <td id="LC3754" class="blob-code js-file-line">    <span class="pl-v">this</span>.heightInPixels <span class="pl-k">=</span> data.<span class="pl-sc">height</span> <span class="pl-k">*</span> data.tileheight;</td>
      </tr>
      <tr>
        <td id="L3755" class="blob-num js-line-number" data-line-number="3755"></td>
        <td id="LC3755" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3756" class="blob-num js-line-number" data-line-number="3756"></td>
        <td id="LC3756" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3757" class="blob-num js-line-number" data-line-number="3757"></td>
        <td id="LC3757" class="blob-code js-file-line"><span class="pl-c">     * @property {array} layers - An array of Tilemap layer data.</span></td>
      </tr>
      <tr>
        <td id="L3758" class="blob-num js-line-number" data-line-number="3758"></td>
        <td id="LC3758" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3759" class="blob-num js-line-number" data-line-number="3759"></td>
        <td id="LC3759" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">layers</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3760" class="blob-num js-line-number" data-line-number="3760"></td>
        <td id="LC3760" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3761" class="blob-num js-line-number" data-line-number="3761"></td>
        <td id="LC3761" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3762" class="blob-num js-line-number" data-line-number="3762"></td>
        <td id="LC3762" class="blob-code js-file-line"><span class="pl-c">     * @property {array} tilesets - An array of Tilesets.</span></td>
      </tr>
      <tr>
        <td id="L3763" class="blob-num js-line-number" data-line-number="3763"></td>
        <td id="LC3763" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3764" class="blob-num js-line-number" data-line-number="3764"></td>
        <td id="LC3764" class="blob-code js-file-line">    <span class="pl-v">this</span>.tilesets <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3765" class="blob-num js-line-number" data-line-number="3765"></td>
        <td id="LC3765" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3766" class="blob-num js-line-number" data-line-number="3766"></td>
        <td id="LC3766" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3767" class="blob-num js-line-number" data-line-number="3767"></td>
        <td id="LC3767" class="blob-code js-file-line"><span class="pl-c">     * @property {array} objects - An array of Tiled Object Layers.</span></td>
      </tr>
      <tr>
        <td id="L3768" class="blob-num js-line-number" data-line-number="3768"></td>
        <td id="LC3768" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3769" class="blob-num js-line-number" data-line-number="3769"></td>
        <td id="LC3769" class="blob-code js-file-line">    <span class="pl-v">this</span>.objects <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3770" class="blob-num js-line-number" data-line-number="3770"></td>
        <td id="LC3770" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3771" class="blob-num js-line-number" data-line-number="3771"></td>
        <td id="LC3771" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3772" class="blob-num js-line-number" data-line-number="3772"></td>
        <td id="LC3772" class="blob-code js-file-line"><span class="pl-c">     * @property {array} images - An array of Tiled Image Layers.</span></td>
      </tr>
      <tr>
        <td id="L3773" class="blob-num js-line-number" data-line-number="3773"></td>
        <td id="LC3773" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3774" class="blob-num js-line-number" data-line-number="3774"></td>
        <td id="LC3774" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">images</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3775" class="blob-num js-line-number" data-line-number="3775"></td>
        <td id="LC3775" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3776" class="blob-num js-line-number" data-line-number="3776"></td>
        <td id="LC3776" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3777" class="blob-num js-line-number" data-line-number="3777"></td>
        <td id="LC3777" class="blob-code js-file-line"><span class="pl-c">     * @property {array} collideIndexes - An array of tile indexes that collide.</span></td>
      </tr>
      <tr>
        <td id="L3778" class="blob-num js-line-number" data-line-number="3778"></td>
        <td id="LC3778" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3779" class="blob-num js-line-number" data-line-number="3779"></td>
        <td id="LC3779" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideIndexes <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3780" class="blob-num js-line-number" data-line-number="3780"></td>
        <td id="LC3780" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3781" class="blob-num js-line-number" data-line-number="3781"></td>
        <td id="LC3781" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3782" class="blob-num js-line-number" data-line-number="3782"></td>
        <td id="LC3782" class="blob-code js-file-line"><span class="pl-c">     * @property {array} collision - An array of collision data (polylines, etc).</span></td>
      </tr>
      <tr>
        <td id="L3783" class="blob-num js-line-number" data-line-number="3783"></td>
        <td id="LC3783" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3784" class="blob-num js-line-number" data-line-number="3784"></td>
        <td id="LC3784" class="blob-code js-file-line">    <span class="pl-c">// this.collision = data.collision;</span></td>
      </tr>
      <tr>
        <td id="L3785" class="blob-num js-line-number" data-line-number="3785"></td>
        <td id="LC3785" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3786" class="blob-num js-line-number" data-line-number="3786"></td>
        <td id="LC3786" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3787" class="blob-num js-line-number" data-line-number="3787"></td>
        <td id="LC3787" class="blob-code js-file-line"><span class="pl-c">     * @property {number} currentLayer - The current layer.</span></td>
      </tr>
      <tr>
        <td id="L3788" class="blob-num js-line-number" data-line-number="3788"></td>
        <td id="LC3788" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3789" class="blob-num js-line-number" data-line-number="3789"></td>
        <td id="LC3789" class="blob-code js-file-line">    <span class="pl-v">this</span>.currentLayer <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3790" class="blob-num js-line-number" data-line-number="3790"></td>
        <td id="LC3790" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3791" class="blob-num js-line-number" data-line-number="3791"></td>
        <td id="LC3791" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3792" class="blob-num js-line-number" data-line-number="3792"></td>
        <td id="LC3792" class="blob-code js-file-line"><span class="pl-c">     * @property {array} debugMap - Map data used for debug values only.</span></td>
      </tr>
      <tr>
        <td id="L3793" class="blob-num js-line-number" data-line-number="3793"></td>
        <td id="LC3793" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3794" class="blob-num js-line-number" data-line-number="3794"></td>
        <td id="LC3794" class="blob-code js-file-line">    <span class="pl-v">this</span>.debugMap <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3795" class="blob-num js-line-number" data-line-number="3795"></td>
        <td id="LC3795" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3796" class="blob-num js-line-number" data-line-number="3796"></td>
        <td id="LC3796" class="blob-code js-file-line">    <span class="pl-v">this</span>.preventingRecalculate <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3797" class="blob-num js-line-number" data-line-number="3797"></td>
        <td id="LC3797" class="blob-code js-file-line">    <span class="pl-v">this</span>.needToRecalculate <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3798" class="blob-num js-line-number" data-line-number="3798"></td>
        <td id="LC3798" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3799" class="blob-num js-line-number" data-line-number="3799"></td>
        <td id="LC3799" class="blob-code js-file-line">    <span class="pl-c">// tell when camera scale is modified</span></td>
      </tr>
      <tr>
        <td id="L3800" class="blob-num js-line-number" data-line-number="3800"></td>
        <td id="LC3800" class="blob-code js-file-line">    <span class="pl-v">this</span>._camScaleX <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3801" class="blob-num js-line-number" data-line-number="3801"></td>
        <td id="LC3801" class="blob-code js-file-line">    <span class="pl-v">this</span>._camScaleY <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3802" class="blob-num js-line-number" data-line-number="3802"></td>
        <td id="LC3802" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3803" class="blob-num js-line-number" data-line-number="3803"></td>
        <td id="LC3803" class="blob-code js-file-line">    <span class="pl-c">// should all layers do a full rerender?</span></td>
      </tr>
      <tr>
        <td id="L3804" class="blob-num js-line-number" data-line-number="3804"></td>
        <td id="LC3804" class="blob-code js-file-line">    <span class="pl-v">this</span>.dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3805" class="blob-num js-line-number" data-line-number="3805"></td>
        <td id="LC3805" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3806" class="blob-num js-line-number" data-line-number="3806"></td>
        <td id="LC3806" class="blob-code js-file-line">    <span class="pl-c">// update the world bounds</span></td>
      </tr>
      <tr>
        <td id="L3807" class="blob-num js-line-number" data-line-number="3807"></td>
        <td id="LC3807" class="blob-code js-file-line">    <span class="pl-v">this</span>.game.world.setBounds(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-v">this</span>.widthInPixels, <span class="pl-v">this</span>.heightInPixels);</td>
      </tr>
      <tr>
        <td id="L3808" class="blob-num js-line-number" data-line-number="3808"></td>
        <td id="LC3808" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3809" class="blob-num js-line-number" data-line-number="3809"></td>
        <td id="LC3809" class="blob-code js-file-line">    <span class="pl-c">// create each tileset</span></td>
      </tr>
      <tr>
        <td id="L3810" class="blob-num js-line-number" data-line-number="3810"></td>
        <td id="LC3810" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> t <span class="pl-k">=</span> <span class="pl-c1">0</span>, tl <span class="pl-k">=</span> data.tilesets.<span class="pl-sc">length</span>; t <span class="pl-k">&lt;</span> tl; <span class="pl-k">++</span>t) {</td>
      </tr>
      <tr>
        <td id="L3811" class="blob-num js-line-number" data-line-number="3811"></td>
        <td id="LC3811" class="blob-code js-file-line">        <span class="pl-s">var</span> ts <span class="pl-k">=</span> data.tilesets[t];</td>
      </tr>
      <tr>
        <td id="L3812" class="blob-num js-line-number" data-line-number="3812"></td>
        <td id="LC3812" class="blob-code js-file-line">        <span class="pl-v">this</span>.tilesets.<span class="pl-s3">push</span>(<span class="pl-k">new</span> <span class="pl-en">Tileset</span>(game, key, ts));</td>
      </tr>
      <tr>
        <td id="L3813" class="blob-num js-line-number" data-line-number="3813"></td>
        <td id="LC3813" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3814" class="blob-num js-line-number" data-line-number="3814"></td>
        <td id="LC3814" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3815" class="blob-num js-line-number" data-line-number="3815"></td>
        <td id="LC3815" class="blob-code js-file-line">    <span class="pl-c">// create each layer</span></td>
      </tr>
      <tr>
        <td id="L3816" class="blob-num js-line-number" data-line-number="3816"></td>
        <td id="LC3816" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> data.<span class="pl-sc">layers</span>.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3817" class="blob-num js-line-number" data-line-number="3817"></td>
        <td id="LC3817" class="blob-code js-file-line">        <span class="pl-s">var</span> lyr,</td>
      </tr>
      <tr>
        <td id="L3818" class="blob-num js-line-number" data-line-number="3818"></td>
        <td id="LC3818" class="blob-code js-file-line">            ldata <span class="pl-k">=</span> data.<span class="pl-sc">layers</span>[i];</td>
      </tr>
      <tr>
        <td id="L3819" class="blob-num js-line-number" data-line-number="3819"></td>
        <td id="LC3819" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3820" class="blob-num js-line-number" data-line-number="3820"></td>
        <td id="LC3820" class="blob-code js-file-line">        <span class="pl-k">switch</span>(ldata.<span class="pl-sc">type</span>) {</td>
      </tr>
      <tr>
        <td id="L3821" class="blob-num js-line-number" data-line-number="3821"></td>
        <td id="LC3821" class="blob-code js-file-line">            <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tilelayer<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L3822" class="blob-num js-line-number" data-line-number="3822"></td>
        <td id="LC3822" class="blob-code js-file-line">                lyr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Tilelayer</span>(game, <span class="pl-v">this</span>, ldata, <span class="pl-v">this</span>.<span class="pl-sc">layers</span>.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L3823" class="blob-num js-line-number" data-line-number="3823"></td>
        <td id="LC3823" class="blob-code js-file-line">                <span class="pl-v">this</span>.<span class="pl-sc">layers</span>.<span class="pl-s3">push</span>(lyr);</td>
      </tr>
      <tr>
        <td id="L3824" class="blob-num js-line-number" data-line-number="3824"></td>
        <td id="LC3824" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3825" class="blob-num js-line-number" data-line-number="3825"></td>
        <td id="LC3825" class="blob-code js-file-line">                <span class="pl-c">// calculate the tile faces</span></td>
      </tr>
      <tr>
        <td id="L3826" class="blob-num js-line-number" data-line-number="3826"></td>
        <td id="LC3826" class="blob-code js-file-line">                <span class="pl-v">this</span>.calculateFaces(<span class="pl-v">this</span>.<span class="pl-sc">layers</span>.<span class="pl-sc">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3827" class="blob-num js-line-number" data-line-number="3827"></td>
        <td id="LC3827" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3828" class="blob-num js-line-number" data-line-number="3828"></td>
        <td id="LC3828" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3829" class="blob-num js-line-number" data-line-number="3829"></td>
        <td id="LC3829" class="blob-code js-file-line">            <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>objectgroup<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L3830" class="blob-num js-line-number" data-line-number="3830"></td>
        <td id="LC3830" class="blob-code js-file-line">                lyr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Objectlayer</span>(game, <span class="pl-v">this</span>, ldata, <span class="pl-v">this</span>.objects.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L3831" class="blob-num js-line-number" data-line-number="3831"></td>
        <td id="LC3831" class="blob-code js-file-line">                <span class="pl-v">this</span>.objects.<span class="pl-s3">push</span>(lyr);</td>
      </tr>
      <tr>
        <td id="L3832" class="blob-num js-line-number" data-line-number="3832"></td>
        <td id="LC3832" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3833" class="blob-num js-line-number" data-line-number="3833"></td>
        <td id="LC3833" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3834" class="blob-num js-line-number" data-line-number="3834"></td>
        <td id="LC3834" class="blob-code js-file-line">            <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>imagelayer<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L3835" class="blob-num js-line-number" data-line-number="3835"></td>
        <td id="LC3835" class="blob-code js-file-line">                lyr <span class="pl-k">=</span> game.add.sprite(ldata.<span class="pl-sc">x</span>, ldata.<span class="pl-sc">y</span>, utils.cacheKey(key, <span class="pl-s1"><span class="pl-pds">&#39;</span>layer<span class="pl-pds">&#39;</span></span>, ldata.<span class="pl-sc">name</span>), <span class="pl-c1">null</span>, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L3836" class="blob-num js-line-number" data-line-number="3836"></td>
        <td id="LC3836" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3837" class="blob-num js-line-number" data-line-number="3837"></td>
        <td id="LC3837" class="blob-code js-file-line">                lyr.visible <span class="pl-k">=</span> ldata.visible;</td>
      </tr>
      <tr>
        <td id="L3838" class="blob-num js-line-number" data-line-number="3838"></td>
        <td id="LC3838" class="blob-code js-file-line">                lyr.apha <span class="pl-k">=</span> ldata.opacity;</td>
      </tr>
      <tr>
        <td id="L3839" class="blob-num js-line-number" data-line-number="3839"></td>
        <td id="LC3839" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3840" class="blob-num js-line-number" data-line-number="3840"></td>
        <td id="LC3840" class="blob-code js-file-line">                <span class="pl-v">this</span>.<span class="pl-sc">images</span>.<span class="pl-s3">push</span>(lyr);</td>
      </tr>
      <tr>
        <td id="L3841" class="blob-num js-line-number" data-line-number="3841"></td>
        <td id="LC3841" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3842" class="blob-num js-line-number" data-line-number="3842"></td>
        <td id="LC3842" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3843" class="blob-num js-line-number" data-line-number="3843"></td>
        <td id="LC3843" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3844" class="blob-num js-line-number" data-line-number="3844"></td>
        <td id="LC3844" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3845" class="blob-num js-line-number" data-line-number="3845"></td>
        <td id="LC3845" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3846" class="blob-num js-line-number" data-line-number="3846"></td>
        <td id="LC3846" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-s3">Object</span>.create(Phaser.Group.<span class="pl-sc">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L3847" class="blob-num js-line-number" data-line-number="3847"></td>
        <td id="LC3847" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">constructor</span> <span class="pl-k">=</span> Tilemap;</td>
      </tr>
      <tr>
        <td id="L3848" class="blob-num js-line-number" data-line-number="3848"></td>
        <td id="LC3848" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3849" class="blob-num js-line-number" data-line-number="3849"></td>
        <td id="LC3849" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> Tilemap;</td>
      </tr>
      <tr>
        <td id="L3850" class="blob-num js-line-number" data-line-number="3850"></td>
        <td id="LC3850" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3851" class="blob-num js-line-number" data-line-number="3851"></td>
        <td id="LC3851" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3852" class="blob-num js-line-number" data-line-number="3852"></td>
        <td id="LC3852" class="blob-code js-file-line"><span class="pl-c"> * Sets the base tile size for the map.</span></td>
      </tr>
      <tr>
        <td id="L3853" class="blob-num js-line-number" data-line-number="3853"></td>
        <td id="LC3853" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3854" class="blob-num js-line-number" data-line-number="3854"></td>
        <td id="LC3854" class="blob-code js-file-line"><span class="pl-c"> * @method setTileSize</span></td>
      </tr>
      <tr>
        <td id="L3855" class="blob-num js-line-number" data-line-number="3855"></td>
        <td id="LC3855" class="blob-code js-file-line"><span class="pl-c"> * @param {number} tileWidth - The width of the tiles the map uses for calculations.</span></td>
      </tr>
      <tr>
        <td id="L3856" class="blob-num js-line-number" data-line-number="3856"></td>
        <td id="LC3856" class="blob-code js-file-line"><span class="pl-c"> * @param {number} tileHeight - The height of the tiles the map uses for calculations.</span></td>
      </tr>
      <tr>
        <td id="L3857" class="blob-num js-line-number" data-line-number="3857"></td>
        <td id="LC3857" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3858" class="blob-num js-line-number" data-line-number="3858"></td>
        <td id="LC3858" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setTileSize</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tileWidth</span>, <span class="pl-vpf">tileHeight</span>) {</td>
      </tr>
      <tr>
        <td id="L3859" class="blob-num js-line-number" data-line-number="3859"></td>
        <td id="LC3859" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileWidth <span class="pl-k">=</span> tileWidth;</td>
      </tr>
      <tr>
        <td id="L3860" class="blob-num js-line-number" data-line-number="3860"></td>
        <td id="LC3860" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileHeight <span class="pl-k">=</span> tileHeight;</td>
      </tr>
      <tr>
        <td id="L3861" class="blob-num js-line-number" data-line-number="3861"></td>
        <td id="LC3861" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3862" class="blob-num js-line-number" data-line-number="3862"></td>
        <td id="LC3862" class="blob-code js-file-line">    <span class="pl-v">this</span>.scaledTileWidth <span class="pl-k">=</span> tileWidth <span class="pl-k">*</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L3863" class="blob-num js-line-number" data-line-number="3863"></td>
        <td id="LC3863" class="blob-code js-file-line">    <span class="pl-v">this</span>.scaledTileHeight <span class="pl-k">=</span> tileHeight <span class="pl-k">*</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L3864" class="blob-num js-line-number" data-line-number="3864"></td>
        <td id="LC3864" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3865" class="blob-num js-line-number" data-line-number="3865"></td>
        <td id="LC3865" class="blob-code js-file-line">    <span class="pl-v">this</span>.widthInPixels <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span> <span class="pl-k">*</span> tileWidth;</td>
      </tr>
      <tr>
        <td id="L3866" class="blob-num js-line-number" data-line-number="3866"></td>
        <td id="LC3866" class="blob-code js-file-line">    <span class="pl-v">this</span>.heightInPixels <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">height</span> <span class="pl-k">*</span> tileWidth;</td>
      </tr>
      <tr>
        <td id="L3867" class="blob-num js-line-number" data-line-number="3867"></td>
        <td id="LC3867" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3868" class="blob-num js-line-number" data-line-number="3868"></td>
        <td id="LC3868" class="blob-code js-file-line">    <span class="pl-c">// update the world bounds</span></td>
      </tr>
      <tr>
        <td id="L3869" class="blob-num js-line-number" data-line-number="3869"></td>
        <td id="LC3869" class="blob-code js-file-line">    <span class="pl-v">this</span>.game.world.setBounds(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-v">this</span>.<span class="pl-sc">width</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">x</span>, <span class="pl-v">this</span>.<span class="pl-sc">height</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">y</span>);</td>
      </tr>
      <tr>
        <td id="L3870" class="blob-num js-line-number" data-line-number="3870"></td>
        <td id="LC3870" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3871" class="blob-num js-line-number" data-line-number="3871"></td>
        <td id="LC3871" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3872" class="blob-num js-line-number" data-line-number="3872"></td>
        <td id="LC3872" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3873" class="blob-num js-line-number" data-line-number="3873"></td>
        <td id="LC3873" class="blob-code js-file-line"><span class="pl-c">* Gets the layer index based on the layers name.</span></td>
      </tr>
      <tr>
        <td id="L3874" class="blob-num js-line-number" data-line-number="3874"></td>
        <td id="LC3874" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3875" class="blob-num js-line-number" data-line-number="3875"></td>
        <td id="LC3875" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getIndex</span></td>
      </tr>
      <tr>
        <td id="L3876" class="blob-num js-line-number" data-line-number="3876"></td>
        <td id="LC3876" class="blob-code js-file-line"><span class="pl-c">* @protected</span></td>
      </tr>
      <tr>
        <td id="L3877" class="blob-num js-line-number" data-line-number="3877"></td>
        <td id="LC3877" class="blob-code js-file-line"><span class="pl-c">* @param {array} location - The local array to search.</span></td>
      </tr>
      <tr>
        <td id="L3878" class="blob-num js-line-number" data-line-number="3878"></td>
        <td id="LC3878" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the array element to get.</span></td>
      </tr>
      <tr>
        <td id="L3879" class="blob-num js-line-number" data-line-number="3879"></td>
        <td id="LC3879" class="blob-code js-file-line"><span class="pl-c">* @return {number} The index of the element in the array, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3880" class="blob-num js-line-number" data-line-number="3880"></td>
        <td id="LC3880" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3881" class="blob-num js-line-number" data-line-number="3881"></td>
        <td id="LC3881" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getIndex</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">location</span>, <span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3882" class="blob-num js-line-number" data-line-number="3882"></td>
        <td id="LC3882" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3883" class="blob-num js-line-number" data-line-number="3883"></td>
        <td id="LC3883" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3884" class="blob-num js-line-number" data-line-number="3884"></td>
        <td id="LC3884" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> location.<span class="pl-sc">length</span>; i<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L3885" class="blob-num js-line-number" data-line-number="3885"></td>
        <td id="LC3885" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L3886" class="blob-num js-line-number" data-line-number="3886"></td>
        <td id="LC3886" class="blob-code js-file-line">            <span class="pl-k">if</span> (location[i].<span class="pl-sc">name</span> <span class="pl-k">===</span> name)</td>
      </tr>
      <tr>
        <td id="L3887" class="blob-num js-line-number" data-line-number="3887"></td>
        <td id="LC3887" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L3888" class="blob-num js-line-number" data-line-number="3888"></td>
        <td id="LC3888" class="blob-code js-file-line">                <span class="pl-k">return</span> i;</td>
      </tr>
      <tr>
        <td id="L3889" class="blob-num js-line-number" data-line-number="3889"></td>
        <td id="LC3889" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3890" class="blob-num js-line-number" data-line-number="3890"></td>
        <td id="LC3890" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3891" class="blob-num js-line-number" data-line-number="3891"></td>
        <td id="LC3891" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3892" class="blob-num js-line-number" data-line-number="3892"></td>
        <td id="LC3892" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3893" class="blob-num js-line-number" data-line-number="3893"></td>
        <td id="LC3893" class="blob-code js-file-line">        <span class="pl-k">return</span> name.<span class="pl-sc">index</span>;</td>
      </tr>
      <tr>
        <td id="L3894" class="blob-num js-line-number" data-line-number="3894"></td>
        <td id="LC3894" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3895" class="blob-num js-line-number" data-line-number="3895"></td>
        <td id="LC3895" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3896" class="blob-num js-line-number" data-line-number="3896"></td>
        <td id="LC3896" class="blob-code js-file-line">        <span class="pl-k">return</span> name;</td>
      </tr>
      <tr>
        <td id="L3897" class="blob-num js-line-number" data-line-number="3897"></td>
        <td id="LC3897" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3898" class="blob-num js-line-number" data-line-number="3898"></td>
        <td id="LC3898" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3899" class="blob-num js-line-number" data-line-number="3899"></td>
        <td id="LC3899" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3900" class="blob-num js-line-number" data-line-number="3900"></td>
        <td id="LC3900" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3901" class="blob-num js-line-number" data-line-number="3901"></td>
        <td id="LC3901" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3902" class="blob-num js-line-number" data-line-number="3902"></td>
        <td id="LC3902" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3903" class="blob-num js-line-number" data-line-number="3903"></td>
        <td id="LC3903" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3904" class="blob-num js-line-number" data-line-number="3904"></td>
        <td id="LC3904" class="blob-code js-file-line"><span class="pl-c">* Gets the layer index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3905" class="blob-num js-line-number" data-line-number="3905"></td>
        <td id="LC3905" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3906" class="blob-num js-line-number" data-line-number="3906"></td>
        <td id="LC3906" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTilelayerIndex</span></td>
      </tr>
      <tr>
        <td id="L3907" class="blob-num js-line-number" data-line-number="3907"></td>
        <td id="LC3907" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the layer to get.</span></td>
      </tr>
      <tr>
        <td id="L3908" class="blob-num js-line-number" data-line-number="3908"></td>
        <td id="LC3908" class="blob-code js-file-line"><span class="pl-c">* @return {number} The index of the layer in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3909" class="blob-num js-line-number" data-line-number="3909"></td>
        <td id="LC3909" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3910" class="blob-num js-line-number" data-line-number="3910"></td>
        <td id="LC3910" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTilelayerIndex</span> <span class="pl-k">=</span> <span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getLayer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3911" class="blob-num js-line-number" data-line-number="3911"></td>
        <td id="LC3911" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3912" class="blob-num js-line-number" data-line-number="3912"></td>
        <td id="LC3912" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.getIndex(<span class="pl-v">this</span>.<span class="pl-sc">layers</span>, name);</td>
      </tr>
      <tr>
        <td id="L3913" class="blob-num js-line-number" data-line-number="3913"></td>
        <td id="LC3913" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3914" class="blob-num js-line-number" data-line-number="3914"></td>
        <td id="LC3914" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3915" class="blob-num js-line-number" data-line-number="3915"></td>
        <td id="LC3915" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3916" class="blob-num js-line-number" data-line-number="3916"></td>
        <td id="LC3916" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3917" class="blob-num js-line-number" data-line-number="3917"></td>
        <td id="LC3917" class="blob-code js-file-line"><span class="pl-c">* Gets the tileset index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3918" class="blob-num js-line-number" data-line-number="3918"></td>
        <td id="LC3918" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3919" class="blob-num js-line-number" data-line-number="3919"></td>
        <td id="LC3919" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTilesetIndex</span></td>
      </tr>
      <tr>
        <td id="L3920" class="blob-num js-line-number" data-line-number="3920"></td>
        <td id="LC3920" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the tileset to get.</span></td>
      </tr>
      <tr>
        <td id="L3921" class="blob-num js-line-number" data-line-number="3921"></td>
        <td id="LC3921" class="blob-code js-file-line"><span class="pl-c">* @return {number} The index of the tileset in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3922" class="blob-num js-line-number" data-line-number="3922"></td>
        <td id="LC3922" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3923" class="blob-num js-line-number" data-line-number="3923"></td>
        <td id="LC3923" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTilesetIndex</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3924" class="blob-num js-line-number" data-line-number="3924"></td>
        <td id="LC3924" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3925" class="blob-num js-line-number" data-line-number="3925"></td>
        <td id="LC3925" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.getIndex(<span class="pl-v">this</span>.tilesets, name);</td>
      </tr>
      <tr>
        <td id="L3926" class="blob-num js-line-number" data-line-number="3926"></td>
        <td id="LC3926" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3927" class="blob-num js-line-number" data-line-number="3927"></td>
        <td id="LC3927" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3928" class="blob-num js-line-number" data-line-number="3928"></td>
        <td id="LC3928" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3929" class="blob-num js-line-number" data-line-number="3929"></td>
        <td id="LC3929" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3930" class="blob-num js-line-number" data-line-number="3930"></td>
        <td id="LC3930" class="blob-code js-file-line"><span class="pl-c">* Gets the image index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3931" class="blob-num js-line-number" data-line-number="3931"></td>
        <td id="LC3931" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3932" class="blob-num js-line-number" data-line-number="3932"></td>
        <td id="LC3932" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getImagelayer</span></td>
      </tr>
      <tr>
        <td id="L3933" class="blob-num js-line-number" data-line-number="3933"></td>
        <td id="LC3933" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the image to get.</span></td>
      </tr>
      <tr>
        <td id="L3934" class="blob-num js-line-number" data-line-number="3934"></td>
        <td id="LC3934" class="blob-code js-file-line"><span class="pl-c">* @return {number} The index of the image in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3935" class="blob-num js-line-number" data-line-number="3935"></td>
        <td id="LC3935" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3936" class="blob-num js-line-number" data-line-number="3936"></td>
        <td id="LC3936" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getImagelayerIndex</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3937" class="blob-num js-line-number" data-line-number="3937"></td>
        <td id="LC3937" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3938" class="blob-num js-line-number" data-line-number="3938"></td>
        <td id="LC3938" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.getIndex(<span class="pl-v">this</span>.<span class="pl-sc">images</span>, name);</td>
      </tr>
      <tr>
        <td id="L3939" class="blob-num js-line-number" data-line-number="3939"></td>
        <td id="LC3939" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3940" class="blob-num js-line-number" data-line-number="3940"></td>
        <td id="LC3940" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3941" class="blob-num js-line-number" data-line-number="3941"></td>
        <td id="LC3941" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3942" class="blob-num js-line-number" data-line-number="3942"></td>
        <td id="LC3942" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3943" class="blob-num js-line-number" data-line-number="3943"></td>
        <td id="LC3943" class="blob-code js-file-line"><span class="pl-c">* Gets the object index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3944" class="blob-num js-line-number" data-line-number="3944"></td>
        <td id="LC3944" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3945" class="blob-num js-line-number" data-line-number="3945"></td>
        <td id="LC3945" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getObjectlayerIndex</span></td>
      </tr>
      <tr>
        <td id="L3946" class="blob-num js-line-number" data-line-number="3946"></td>
        <td id="LC3946" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the object to get.</span></td>
      </tr>
      <tr>
        <td id="L3947" class="blob-num js-line-number" data-line-number="3947"></td>
        <td id="LC3947" class="blob-code js-file-line"><span class="pl-c">* @return {number} The index of the object in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3948" class="blob-num js-line-number" data-line-number="3948"></td>
        <td id="LC3948" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3949" class="blob-num js-line-number" data-line-number="3949"></td>
        <td id="LC3949" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getObjectlayerIndex</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3950" class="blob-num js-line-number" data-line-number="3950"></td>
        <td id="LC3950" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3951" class="blob-num js-line-number" data-line-number="3951"></td>
        <td id="LC3951" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.getIndex(<span class="pl-v">this</span>.objects, name);</td>
      </tr>
      <tr>
        <td id="L3952" class="blob-num js-line-number" data-line-number="3952"></td>
        <td id="LC3952" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3953" class="blob-num js-line-number" data-line-number="3953"></td>
        <td id="LC3953" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3954" class="blob-num js-line-number" data-line-number="3954"></td>
        <td id="LC3954" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3955" class="blob-num js-line-number" data-line-number="3955"></td>
        <td id="LC3955" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3956" class="blob-num js-line-number" data-line-number="3956"></td>
        <td id="LC3956" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3957" class="blob-num js-line-number" data-line-number="3957"></td>
        <td id="LC3957" class="blob-code js-file-line"><span class="pl-c">* Gets the layer based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3958" class="blob-num js-line-number" data-line-number="3958"></td>
        <td id="LC3958" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3959" class="blob-num js-line-number" data-line-number="3959"></td>
        <td id="LC3959" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTilelayer</span></td>
      </tr>
      <tr>
        <td id="L3960" class="blob-num js-line-number" data-line-number="3960"></td>
        <td id="LC3960" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the layer to get.</span></td>
      </tr>
      <tr>
        <td id="L3961" class="blob-num js-line-number" data-line-number="3961"></td>
        <td id="LC3961" class="blob-code js-file-line"><span class="pl-c">* @return {Tilelayer} The index of the layer in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3962" class="blob-num js-line-number" data-line-number="3962"></td>
        <td id="LC3962" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3963" class="blob-num js-line-number" data-line-number="3963"></td>
        <td id="LC3963" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTilelayer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3964" class="blob-num js-line-number" data-line-number="3964"></td>
        <td id="LC3964" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3965" class="blob-num js-line-number" data-line-number="3965"></td>
        <td id="LC3965" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.getTilelayerIndex(name)];</td>
      </tr>
      <tr>
        <td id="L3966" class="blob-num js-line-number" data-line-number="3966"></td>
        <td id="LC3966" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3967" class="blob-num js-line-number" data-line-number="3967"></td>
        <td id="LC3967" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3968" class="blob-num js-line-number" data-line-number="3968"></td>
        <td id="LC3968" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3969" class="blob-num js-line-number" data-line-number="3969"></td>
        <td id="LC3969" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3970" class="blob-num js-line-number" data-line-number="3970"></td>
        <td id="LC3970" class="blob-code js-file-line"><span class="pl-c">* Gets the tileset index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3971" class="blob-num js-line-number" data-line-number="3971"></td>
        <td id="LC3971" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3972" class="blob-num js-line-number" data-line-number="3972"></td>
        <td id="LC3972" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTileset</span></td>
      </tr>
      <tr>
        <td id="L3973" class="blob-num js-line-number" data-line-number="3973"></td>
        <td id="LC3973" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the tileset to get.</span></td>
      </tr>
      <tr>
        <td id="L3974" class="blob-num js-line-number" data-line-number="3974"></td>
        <td id="LC3974" class="blob-code js-file-line"><span class="pl-c">* @return {Tileset} The index of the tileset in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3975" class="blob-num js-line-number" data-line-number="3975"></td>
        <td id="LC3975" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3976" class="blob-num js-line-number" data-line-number="3976"></td>
        <td id="LC3976" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileset</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3977" class="blob-num js-line-number" data-line-number="3977"></td>
        <td id="LC3977" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3978" class="blob-num js-line-number" data-line-number="3978"></td>
        <td id="LC3978" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.tilesets[<span class="pl-v">this</span>.getTilesetIndex(name)];</td>
      </tr>
      <tr>
        <td id="L3979" class="blob-num js-line-number" data-line-number="3979"></td>
        <td id="LC3979" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3980" class="blob-num js-line-number" data-line-number="3980"></td>
        <td id="LC3980" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3981" class="blob-num js-line-number" data-line-number="3981"></td>
        <td id="LC3981" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3982" class="blob-num js-line-number" data-line-number="3982"></td>
        <td id="LC3982" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3983" class="blob-num js-line-number" data-line-number="3983"></td>
        <td id="LC3983" class="blob-code js-file-line"><span class="pl-c">* Gets the image index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3984" class="blob-num js-line-number" data-line-number="3984"></td>
        <td id="LC3984" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3985" class="blob-num js-line-number" data-line-number="3985"></td>
        <td id="LC3985" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getImagelayer</span></td>
      </tr>
      <tr>
        <td id="L3986" class="blob-num js-line-number" data-line-number="3986"></td>
        <td id="LC3986" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the image to get.</span></td>
      </tr>
      <tr>
        <td id="L3987" class="blob-num js-line-number" data-line-number="3987"></td>
        <td id="LC3987" class="blob-code js-file-line"><span class="pl-c">* @return {Image} The index of the image in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L3988" class="blob-num js-line-number" data-line-number="3988"></td>
        <td id="LC3988" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L3989" class="blob-num js-line-number" data-line-number="3989"></td>
        <td id="LC3989" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getImagelayer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3990" class="blob-num js-line-number" data-line-number="3990"></td>
        <td id="LC3990" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3991" class="blob-num js-line-number" data-line-number="3991"></td>
        <td id="LC3991" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">images</span>[<span class="pl-v">this</span>.getImagelayerIndex(name)];</td>
      </tr>
      <tr>
        <td id="L3992" class="blob-num js-line-number" data-line-number="3992"></td>
        <td id="LC3992" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3993" class="blob-num js-line-number" data-line-number="3993"></td>
        <td id="LC3993" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L3994" class="blob-num js-line-number" data-line-number="3994"></td>
        <td id="LC3994" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3995" class="blob-num js-line-number" data-line-number="3995"></td>
        <td id="LC3995" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3996" class="blob-num js-line-number" data-line-number="3996"></td>
        <td id="LC3996" class="blob-code js-file-line"><span class="pl-c">* Gets the object index based on its name.</span></td>
      </tr>
      <tr>
        <td id="L3997" class="blob-num js-line-number" data-line-number="3997"></td>
        <td id="LC3997" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L3998" class="blob-num js-line-number" data-line-number="3998"></td>
        <td id="LC3998" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getObjectlayer</span></td>
      </tr>
      <tr>
        <td id="L3999" class="blob-num js-line-number" data-line-number="3999"></td>
        <td id="LC3999" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|object} name - The name of the object to get.</span></td>
      </tr>
      <tr>
        <td id="L4000" class="blob-num js-line-number" data-line-number="4000"></td>
        <td id="LC4000" class="blob-code js-file-line"><span class="pl-c">* @return {Objectlayer} The index of the object in this tilemap, or null if not found.</span></td>
      </tr>
      <tr>
        <td id="L4001" class="blob-num js-line-number" data-line-number="4001"></td>
        <td id="LC4001" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4002" class="blob-num js-line-number" data-line-number="4002"></td>
        <td id="LC4002" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getObjectlayer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L4003" class="blob-num js-line-number" data-line-number="4003"></td>
        <td id="LC4003" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4004" class="blob-num js-line-number" data-line-number="4004"></td>
        <td id="LC4004" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.objects[<span class="pl-v">this</span>.getObjectlayerIndex(name)];</td>
      </tr>
      <tr>
        <td id="L4005" class="blob-num js-line-number" data-line-number="4005"></td>
        <td id="LC4005" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4006" class="blob-num js-line-number" data-line-number="4006"></td>
        <td id="LC4006" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4007" class="blob-num js-line-number" data-line-number="4007"></td>
        <td id="LC4007" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4008" class="blob-num js-line-number" data-line-number="4008"></td>
        <td id="LC4008" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4009" class="blob-num js-line-number" data-line-number="4009"></td>
        <td id="LC4009" class="blob-code js-file-line"><span class="pl-c">* Turn off/on the recalculation of faces for tile or collission updates.</span></td>
      </tr>
      <tr>
        <td id="L4010" class="blob-num js-line-number" data-line-number="4010"></td>
        <td id="LC4010" class="blob-code js-file-line"><span class="pl-c">* setPreventRecalculate(true) puts recalculation on hold while</span></td>
      </tr>
      <tr>
        <td id="L4011" class="blob-num js-line-number" data-line-number="4011"></td>
        <td id="LC4011" class="blob-code js-file-line"><span class="pl-c">* setPreventRecalculate(false) recalculates all the changed layers.</span></td>
      </tr>
      <tr>
        <td id="L4012" class="blob-num js-line-number" data-line-number="4012"></td>
        <td id="LC4012" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4013" class="blob-num js-line-number" data-line-number="4013"></td>
        <td id="LC4013" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#setPreventRecalculate</span></td>
      </tr>
      <tr>
        <td id="L4014" class="blob-num js-line-number" data-line-number="4014"></td>
        <td id="LC4014" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} if true it will put the recalculation on hold.</span></td>
      </tr>
      <tr>
        <td id="L4015" class="blob-num js-line-number" data-line-number="4015"></td>
        <td id="LC4015" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4016" class="blob-num js-line-number" data-line-number="4016"></td>
        <td id="LC4016" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setPreventRecalculate</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4017" class="blob-num js-line-number" data-line-number="4017"></td>
        <td id="LC4017" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4018" class="blob-num js-line-number" data-line-number="4018"></td>
        <td id="LC4018" class="blob-code js-file-line">    <span class="pl-k">if</span> ((value <span class="pl-k">===</span> <span class="pl-c1">true</span>) <span class="pl-k">&amp;&amp;</span> (<span class="pl-v">this</span>.preventingRecalculate <span class="pl-k">!==</span> <span class="pl-c1">true</span>))</td>
      </tr>
      <tr>
        <td id="L4019" class="blob-num js-line-number" data-line-number="4019"></td>
        <td id="LC4019" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4020" class="blob-num js-line-number" data-line-number="4020"></td>
        <td id="LC4020" class="blob-code js-file-line">        <span class="pl-v">this</span>.preventingRecalculate <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4021" class="blob-num js-line-number" data-line-number="4021"></td>
        <td id="LC4021" class="blob-code js-file-line">        <span class="pl-v">this</span>.needToRecalculate <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4022" class="blob-num js-line-number" data-line-number="4022"></td>
        <td id="LC4022" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4023" class="blob-num js-line-number" data-line-number="4023"></td>
        <td id="LC4023" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4024" class="blob-num js-line-number" data-line-number="4024"></td>
        <td id="LC4024" class="blob-code js-file-line">    <span class="pl-k">if</span> ((value <span class="pl-k">===</span>  <span class="pl-c1">false</span>) <span class="pl-k">&amp;&amp;</span> (<span class="pl-v">this</span>.preventingRecalculate <span class="pl-k">===</span> <span class="pl-c1">true</span>))</td>
      </tr>
      <tr>
        <td id="L4025" class="blob-num js-line-number" data-line-number="4025"></td>
        <td id="LC4025" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4026" class="blob-num js-line-number" data-line-number="4026"></td>
        <td id="LC4026" class="blob-code js-file-line">        <span class="pl-v">this</span>.preventingRecalculate <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4027" class="blob-num js-line-number" data-line-number="4027"></td>
        <td id="LC4027" class="blob-code js-file-line">        <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">in</span> <span class="pl-v">this</span>.needToRecalculate){</td>
      </tr>
      <tr>
        <td id="L4028" class="blob-num js-line-number" data-line-number="4028"></td>
        <td id="LC4028" class="blob-code js-file-line">            <span class="pl-v">this</span>.calculateFaces(i);</td>
      </tr>
      <tr>
        <td id="L4029" class="blob-num js-line-number" data-line-number="4029"></td>
        <td id="LC4029" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4030" class="blob-num js-line-number" data-line-number="4030"></td>
        <td id="LC4030" class="blob-code js-file-line">        <span class="pl-v">this</span>.needToRecalculate <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4031" class="blob-num js-line-number" data-line-number="4031"></td>
        <td id="LC4031" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4032" class="blob-num js-line-number" data-line-number="4032"></td>
        <td id="LC4032" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4033" class="blob-num js-line-number" data-line-number="4033"></td>
        <td id="LC4033" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4034" class="blob-num js-line-number" data-line-number="4034"></td>
        <td id="LC4034" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4035" class="blob-num js-line-number" data-line-number="4035"></td>
        <td id="LC4035" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4036" class="blob-num js-line-number" data-line-number="4036"></td>
        <td id="LC4036" class="blob-code js-file-line"><span class="pl-c">* Internal function.</span></td>
      </tr>
      <tr>
        <td id="L4037" class="blob-num js-line-number" data-line-number="4037"></td>
        <td id="LC4037" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4038" class="blob-num js-line-number" data-line-number="4038"></td>
        <td id="LC4038" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#calculateFaces</span></td>
      </tr>
      <tr>
        <td id="L4039" class="blob-num js-line-number" data-line-number="4039"></td>
        <td id="LC4039" class="blob-code js-file-line"><span class="pl-c">* @protected</span></td>
      </tr>
      <tr>
        <td id="L4040" class="blob-num js-line-number" data-line-number="4040"></td>
        <td id="LC4040" class="blob-code js-file-line"><span class="pl-c">* @param {number} layer - The index of the TilemapLayer to operate on.</span></td>
      </tr>
      <tr>
        <td id="L4041" class="blob-num js-line-number" data-line-number="4041"></td>
        <td id="LC4041" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4042" class="blob-num js-line-number" data-line-number="4042"></td>
        <td id="LC4042" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">calculateFaces</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4043" class="blob-num js-line-number" data-line-number="4043"></td>
        <td id="LC4043" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4044" class="blob-num js-line-number" data-line-number="4044"></td>
        <td id="LC4044" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.preventingRecalculate)</td>
      </tr>
      <tr>
        <td id="L4045" class="blob-num js-line-number" data-line-number="4045"></td>
        <td id="LC4045" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4046" class="blob-num js-line-number" data-line-number="4046"></td>
        <td id="LC4046" class="blob-code js-file-line">        <span class="pl-v">this</span>.needToRecalculate[layer] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4047" class="blob-num js-line-number" data-line-number="4047"></td>
        <td id="LC4047" class="blob-code js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4048" class="blob-num js-line-number" data-line-number="4048"></td>
        <td id="LC4048" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4049" class="blob-num js-line-number" data-line-number="4049"></td>
        <td id="LC4049" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4050" class="blob-num js-line-number" data-line-number="4050"></td>
        <td id="LC4050" class="blob-code js-file-line">    <span class="pl-s">var</span> above <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4051" class="blob-num js-line-number" data-line-number="4051"></td>
        <td id="LC4051" class="blob-code js-file-line">    <span class="pl-s">var</span> below <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4052" class="blob-num js-line-number" data-line-number="4052"></td>
        <td id="LC4052" class="blob-code js-file-line">    <span class="pl-s">var</span> left <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4053" class="blob-num js-line-number" data-line-number="4053"></td>
        <td id="LC4053" class="blob-code js-file-line">    <span class="pl-s">var</span> right <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4054" class="blob-num js-line-number" data-line-number="4054"></td>
        <td id="LC4054" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4055" class="blob-num js-line-number" data-line-number="4055"></td>
        <td id="LC4055" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> y <span class="pl-k">=</span> <span class="pl-c1">0</span>, h <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">y</span>; y <span class="pl-k">&lt;</span> h; y<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L4056" class="blob-num js-line-number" data-line-number="4056"></td>
        <td id="LC4056" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4057" class="blob-num js-line-number" data-line-number="4057"></td>
        <td id="LC4057" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> x <span class="pl-k">=</span> <span class="pl-c1">0</span>, w <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span>; x <span class="pl-k">&lt;</span> w; x<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L4058" class="blob-num js-line-number" data-line-number="4058"></td>
        <td id="LC4058" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L4059" class="blob-num js-line-number" data-line-number="4059"></td>
        <td id="LC4059" class="blob-code js-file-line">            <span class="pl-s">var</span> tile <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4060" class="blob-num js-line-number" data-line-number="4060"></td>
        <td id="LC4060" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4061" class="blob-num js-line-number" data-line-number="4061"></td>
        <td id="LC4061" class="blob-code js-file-line">            <span class="pl-k">if</span> (tile)</td>
      </tr>
      <tr>
        <td id="L4062" class="blob-num js-line-number" data-line-number="4062"></td>
        <td id="LC4062" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L4063" class="blob-num js-line-number" data-line-number="4063"></td>
        <td id="LC4063" class="blob-code js-file-line">                above <span class="pl-k">=</span> <span class="pl-v">this</span>.getTileAbove(layer, x, y);</td>
      </tr>
      <tr>
        <td id="L4064" class="blob-num js-line-number" data-line-number="4064"></td>
        <td id="LC4064" class="blob-code js-file-line">                below <span class="pl-k">=</span> <span class="pl-v">this</span>.getTileBelow(layer, x, y);</td>
      </tr>
      <tr>
        <td id="L4065" class="blob-num js-line-number" data-line-number="4065"></td>
        <td id="LC4065" class="blob-code js-file-line">                left <span class="pl-k">=</span> <span class="pl-v">this</span>.getTileLeft(layer, x, y);</td>
      </tr>
      <tr>
        <td id="L4066" class="blob-num js-line-number" data-line-number="4066"></td>
        <td id="LC4066" class="blob-code js-file-line">                right <span class="pl-k">=</span> <span class="pl-v">this</span>.getTileRight(layer, x, y);</td>
      </tr>
      <tr>
        <td id="L4067" class="blob-num js-line-number" data-line-number="4067"></td>
        <td id="LC4067" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4068" class="blob-num js-line-number" data-line-number="4068"></td>
        <td id="LC4068" class="blob-code js-file-line">                <span class="pl-k">if</span> (tile.collides)</td>
      </tr>
      <tr>
        <td id="L4069" class="blob-num js-line-number" data-line-number="4069"></td>
        <td id="LC4069" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4070" class="blob-num js-line-number" data-line-number="4070"></td>
        <td id="LC4070" class="blob-code js-file-line">                    tile.faceTop <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4071" class="blob-num js-line-number" data-line-number="4071"></td>
        <td id="LC4071" class="blob-code js-file-line">                    tile.faceBottom <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4072" class="blob-num js-line-number" data-line-number="4072"></td>
        <td id="LC4072" class="blob-code js-file-line">                    tile.faceLeft <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4073" class="blob-num js-line-number" data-line-number="4073"></td>
        <td id="LC4073" class="blob-code js-file-line">                    tile.faceRight <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4074" class="blob-num js-line-number" data-line-number="4074"></td>
        <td id="LC4074" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4075" class="blob-num js-line-number" data-line-number="4075"></td>
        <td id="LC4075" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4076" class="blob-num js-line-number" data-line-number="4076"></td>
        <td id="LC4076" class="blob-code js-file-line">                <span class="pl-k">if</span> (above <span class="pl-k">&amp;&amp;</span> above.collides)</td>
      </tr>
      <tr>
        <td id="L4077" class="blob-num js-line-number" data-line-number="4077"></td>
        <td id="LC4077" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4078" class="blob-num js-line-number" data-line-number="4078"></td>
        <td id="LC4078" class="blob-code js-file-line">                    <span class="pl-c">//  There is a tile above this one that also collides,</span></td>
      </tr>
      <tr>
        <td id="L4079" class="blob-num js-line-number" data-line-number="4079"></td>
        <td id="LC4079" class="blob-code js-file-line">                    <span class="pl-c">// so the top of this tile is no longer interesting</span></td>
      </tr>
      <tr>
        <td id="L4080" class="blob-num js-line-number" data-line-number="4080"></td>
        <td id="LC4080" class="blob-code js-file-line">                    tile.faceTop <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4081" class="blob-num js-line-number" data-line-number="4081"></td>
        <td id="LC4081" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4082" class="blob-num js-line-number" data-line-number="4082"></td>
        <td id="LC4082" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4083" class="blob-num js-line-number" data-line-number="4083"></td>
        <td id="LC4083" class="blob-code js-file-line">                <span class="pl-k">if</span> (below <span class="pl-k">&amp;&amp;</span> below.collides)</td>
      </tr>
      <tr>
        <td id="L4084" class="blob-num js-line-number" data-line-number="4084"></td>
        <td id="LC4084" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4085" class="blob-num js-line-number" data-line-number="4085"></td>
        <td id="LC4085" class="blob-code js-file-line">                    <span class="pl-c">//  There is a tile below this one that also collides,</span></td>
      </tr>
      <tr>
        <td id="L4086" class="blob-num js-line-number" data-line-number="4086"></td>
        <td id="LC4086" class="blob-code js-file-line">                    <span class="pl-c">// so the bottom of this tile is no longer interesting</span></td>
      </tr>
      <tr>
        <td id="L4087" class="blob-num js-line-number" data-line-number="4087"></td>
        <td id="LC4087" class="blob-code js-file-line">                    tile.faceBottom <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4088" class="blob-num js-line-number" data-line-number="4088"></td>
        <td id="LC4088" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4089" class="blob-num js-line-number" data-line-number="4089"></td>
        <td id="LC4089" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4090" class="blob-num js-line-number" data-line-number="4090"></td>
        <td id="LC4090" class="blob-code js-file-line">                <span class="pl-k">if</span> (left <span class="pl-k">&amp;&amp;</span> left.collides)</td>
      </tr>
      <tr>
        <td id="L4091" class="blob-num js-line-number" data-line-number="4091"></td>
        <td id="LC4091" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4092" class="blob-num js-line-number" data-line-number="4092"></td>
        <td id="LC4092" class="blob-code js-file-line">                    <span class="pl-c">//  There is a tile left this one that also collides,</span></td>
      </tr>
      <tr>
        <td id="L4093" class="blob-num js-line-number" data-line-number="4093"></td>
        <td id="LC4093" class="blob-code js-file-line">                    <span class="pl-c">// so the left of this tile is no longer interesting</span></td>
      </tr>
      <tr>
        <td id="L4094" class="blob-num js-line-number" data-line-number="4094"></td>
        <td id="LC4094" class="blob-code js-file-line">                    tile.faceLeft <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4095" class="blob-num js-line-number" data-line-number="4095"></td>
        <td id="LC4095" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4096" class="blob-num js-line-number" data-line-number="4096"></td>
        <td id="LC4096" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4097" class="blob-num js-line-number" data-line-number="4097"></td>
        <td id="LC4097" class="blob-code js-file-line">                <span class="pl-k">if</span> (right <span class="pl-k">&amp;&amp;</span> right.collides)</td>
      </tr>
      <tr>
        <td id="L4098" class="blob-num js-line-number" data-line-number="4098"></td>
        <td id="LC4098" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4099" class="blob-num js-line-number" data-line-number="4099"></td>
        <td id="LC4099" class="blob-code js-file-line">                    <span class="pl-c">//  There is a tile right this one that also collides,</span></td>
      </tr>
      <tr>
        <td id="L4100" class="blob-num js-line-number" data-line-number="4100"></td>
        <td id="LC4100" class="blob-code js-file-line">                    <span class="pl-c">// so the right of this tile is no longer interesting</span></td>
      </tr>
      <tr>
        <td id="L4101" class="blob-num js-line-number" data-line-number="4101"></td>
        <td id="LC4101" class="blob-code js-file-line">                    tile.faceRight <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4102" class="blob-num js-line-number" data-line-number="4102"></td>
        <td id="LC4102" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4103" class="blob-num js-line-number" data-line-number="4103"></td>
        <td id="LC4103" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4104" class="blob-num js-line-number" data-line-number="4104"></td>
        <td id="LC4104" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4105" class="blob-num js-line-number" data-line-number="4105"></td>
        <td id="LC4105" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4106" class="blob-num js-line-number" data-line-number="4106"></td>
        <td id="LC4106" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4107" class="blob-num js-line-number" data-line-number="4107"></td>
        <td id="LC4107" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4108" class="blob-num js-line-number" data-line-number="4108"></td>
        <td id="LC4108" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4109" class="blob-num js-line-number" data-line-number="4109"></td>
        <td id="LC4109" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4110" class="blob-num js-line-number" data-line-number="4110"></td>
        <td id="LC4110" class="blob-code js-file-line"><span class="pl-c">* Gets the tile above the tile coordinates given.</span></td>
      </tr>
      <tr>
        <td id="L4111" class="blob-num js-line-number" data-line-number="4111"></td>
        <td id="LC4111" class="blob-code js-file-line"><span class="pl-c">* Mostly used as an internal function by calculateFaces.</span></td>
      </tr>
      <tr>
        <td id="L4112" class="blob-num js-line-number" data-line-number="4112"></td>
        <td id="LC4112" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4113" class="blob-num js-line-number" data-line-number="4113"></td>
        <td id="LC4113" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTileAbove</span></td>
      </tr>
      <tr>
        <td id="L4114" class="blob-num js-line-number" data-line-number="4114"></td>
        <td id="LC4114" class="blob-code js-file-line"><span class="pl-c">* @param {number} layer - The local layer index to get the tile from.</span></td>
      </tr>
      <tr>
        <td id="L4115" class="blob-num js-line-number" data-line-number="4115"></td>
        <td id="LC4115" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4116" class="blob-num js-line-number" data-line-number="4116"></td>
        <td id="LC4116" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4117" class="blob-num js-line-number" data-line-number="4117"></td>
        <td id="LC4117" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4118" class="blob-num js-line-number" data-line-number="4118"></td>
        <td id="LC4118" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileAbove</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">layer</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4119" class="blob-num js-line-number" data-line-number="4119"></td>
        <td id="LC4119" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4120" class="blob-num js-line-number" data-line-number="4120"></td>
        <td id="LC4120" class="blob-code js-file-line">    <span class="pl-k">if</span> (y <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L4121" class="blob-num js-line-number" data-line-number="4121"></td>
        <td id="LC4121" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4122" class="blob-num js-line-number" data-line-number="4122"></td>
        <td id="LC4122" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y <span class="pl-k">-</span> <span class="pl-c1">1</span>][x] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4123" class="blob-num js-line-number" data-line-number="4123"></td>
        <td id="LC4123" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4124" class="blob-num js-line-number" data-line-number="4124"></td>
        <td id="LC4124" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4125" class="blob-num js-line-number" data-line-number="4125"></td>
        <td id="LC4125" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4126" class="blob-num js-line-number" data-line-number="4126"></td>
        <td id="LC4126" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4127" class="blob-num js-line-number" data-line-number="4127"></td>
        <td id="LC4127" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4128" class="blob-num js-line-number" data-line-number="4128"></td>
        <td id="LC4128" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4129" class="blob-num js-line-number" data-line-number="4129"></td>
        <td id="LC4129" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4130" class="blob-num js-line-number" data-line-number="4130"></td>
        <td id="LC4130" class="blob-code js-file-line"><span class="pl-c">* Gets the tile below the tile coordinates given.</span></td>
      </tr>
      <tr>
        <td id="L4131" class="blob-num js-line-number" data-line-number="4131"></td>
        <td id="LC4131" class="blob-code js-file-line"><span class="pl-c">* Mostly used as an internal function by calculateFaces.</span></td>
      </tr>
      <tr>
        <td id="L4132" class="blob-num js-line-number" data-line-number="4132"></td>
        <td id="LC4132" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4133" class="blob-num js-line-number" data-line-number="4133"></td>
        <td id="LC4133" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTileBelow</span></td>
      </tr>
      <tr>
        <td id="L4134" class="blob-num js-line-number" data-line-number="4134"></td>
        <td id="LC4134" class="blob-code js-file-line"><span class="pl-c">* @param {number} layer - The local layer index to get the tile from.</span></td>
      </tr>
      <tr>
        <td id="L4135" class="blob-num js-line-number" data-line-number="4135"></td>
        <td id="LC4135" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4136" class="blob-num js-line-number" data-line-number="4136"></td>
        <td id="LC4136" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4137" class="blob-num js-line-number" data-line-number="4137"></td>
        <td id="LC4137" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4138" class="blob-num js-line-number" data-line-number="4138"></td>
        <td id="LC4138" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileBelow</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">layer</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4139" class="blob-num js-line-number" data-line-number="4139"></td>
        <td id="LC4139" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4140" class="blob-num js-line-number" data-line-number="4140"></td>
        <td id="LC4140" class="blob-code js-file-line">    <span class="pl-k">if</span> (y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">height</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L4141" class="blob-num js-line-number" data-line-number="4141"></td>
        <td id="LC4141" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4142" class="blob-num js-line-number" data-line-number="4142"></td>
        <td id="LC4142" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y <span class="pl-k">+</span> <span class="pl-c1">1</span>][x] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4143" class="blob-num js-line-number" data-line-number="4143"></td>
        <td id="LC4143" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4144" class="blob-num js-line-number" data-line-number="4144"></td>
        <td id="LC4144" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4145" class="blob-num js-line-number" data-line-number="4145"></td>
        <td id="LC4145" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4146" class="blob-num js-line-number" data-line-number="4146"></td>
        <td id="LC4146" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4147" class="blob-num js-line-number" data-line-number="4147"></td>
        <td id="LC4147" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4148" class="blob-num js-line-number" data-line-number="4148"></td>
        <td id="LC4148" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4149" class="blob-num js-line-number" data-line-number="4149"></td>
        <td id="LC4149" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4150" class="blob-num js-line-number" data-line-number="4150"></td>
        <td id="LC4150" class="blob-code js-file-line"><span class="pl-c">* Gets the tile to the left of the tile coordinates given.</span></td>
      </tr>
      <tr>
        <td id="L4151" class="blob-num js-line-number" data-line-number="4151"></td>
        <td id="LC4151" class="blob-code js-file-line"><span class="pl-c">* Mostly used as an internal function by calculateFaces.</span></td>
      </tr>
      <tr>
        <td id="L4152" class="blob-num js-line-number" data-line-number="4152"></td>
        <td id="LC4152" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4153" class="blob-num js-line-number" data-line-number="4153"></td>
        <td id="LC4153" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTileLeft</span></td>
      </tr>
      <tr>
        <td id="L4154" class="blob-num js-line-number" data-line-number="4154"></td>
        <td id="LC4154" class="blob-code js-file-line"><span class="pl-c">* @param {number} layer - The local layer index to get the tile from.</span></td>
      </tr>
      <tr>
        <td id="L4155" class="blob-num js-line-number" data-line-number="4155"></td>
        <td id="LC4155" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4156" class="blob-num js-line-number" data-line-number="4156"></td>
        <td id="LC4156" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4157" class="blob-num js-line-number" data-line-number="4157"></td>
        <td id="LC4157" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4158" class="blob-num js-line-number" data-line-number="4158"></td>
        <td id="LC4158" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileLeft</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">layer</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4159" class="blob-num js-line-number" data-line-number="4159"></td>
        <td id="LC4159" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4160" class="blob-num js-line-number" data-line-number="4160"></td>
        <td id="LC4160" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L4161" class="blob-num js-line-number" data-line-number="4161"></td>
        <td id="LC4161" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4162" class="blob-num js-line-number" data-line-number="4162"></td>
        <td id="LC4162" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4163" class="blob-num js-line-number" data-line-number="4163"></td>
        <td id="LC4163" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4164" class="blob-num js-line-number" data-line-number="4164"></td>
        <td id="LC4164" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4165" class="blob-num js-line-number" data-line-number="4165"></td>
        <td id="LC4165" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4166" class="blob-num js-line-number" data-line-number="4166"></td>
        <td id="LC4166" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4167" class="blob-num js-line-number" data-line-number="4167"></td>
        <td id="LC4167" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4168" class="blob-num js-line-number" data-line-number="4168"></td>
        <td id="LC4168" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4169" class="blob-num js-line-number" data-line-number="4169"></td>
        <td id="LC4169" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4170" class="blob-num js-line-number" data-line-number="4170"></td>
        <td id="LC4170" class="blob-code js-file-line"><span class="pl-c">* Gets the tile to the right of the tile coordinates given.</span></td>
      </tr>
      <tr>
        <td id="L4171" class="blob-num js-line-number" data-line-number="4171"></td>
        <td id="LC4171" class="blob-code js-file-line"><span class="pl-c">* Mostly used as an internal function by calculateFaces.</span></td>
      </tr>
      <tr>
        <td id="L4172" class="blob-num js-line-number" data-line-number="4172"></td>
        <td id="LC4172" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4173" class="blob-num js-line-number" data-line-number="4173"></td>
        <td id="LC4173" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTileRight</span></td>
      </tr>
      <tr>
        <td id="L4174" class="blob-num js-line-number" data-line-number="4174"></td>
        <td id="LC4174" class="blob-code js-file-line"><span class="pl-c">* @param {number} layer - The local layer index to get the tile from.</span></td>
      </tr>
      <tr>
        <td id="L4175" class="blob-num js-line-number" data-line-number="4175"></td>
        <td id="LC4175" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - The x coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4176" class="blob-num js-line-number" data-line-number="4176"></td>
        <td id="LC4176" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - The y coordinate to get the tile from. In tiles, not pixels.</span></td>
      </tr>
      <tr>
        <td id="L4177" class="blob-num js-line-number" data-line-number="4177"></td>
        <td id="LC4177" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4178" class="blob-num js-line-number" data-line-number="4178"></td>
        <td id="LC4178" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileRight</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">layer</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4179" class="blob-num js-line-number" data-line-number="4179"></td>
        <td id="LC4179" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4180" class="blob-num js-line-number" data-line-number="4180"></td>
        <td id="LC4180" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L4181" class="blob-num js-line-number" data-line-number="4181"></td>
        <td id="LC4181" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4182" class="blob-num js-line-number" data-line-number="4182"></td>
        <td id="LC4182" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4183" class="blob-num js-line-number" data-line-number="4183"></td>
        <td id="LC4183" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4184" class="blob-num js-line-number" data-line-number="4184"></td>
        <td id="LC4184" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4185" class="blob-num js-line-number" data-line-number="4185"></td>
        <td id="LC4185" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4186" class="blob-num js-line-number" data-line-number="4186"></td>
        <td id="LC4186" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4187" class="blob-num js-line-number" data-line-number="4187"></td>
        <td id="LC4187" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4188" class="blob-num js-line-number" data-line-number="4188"></td>
        <td id="LC4188" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4189" class="blob-num js-line-number" data-line-number="4189"></td>
        <td id="LC4189" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4190" class="blob-num js-line-number" data-line-number="4190"></td>
        <td id="LC4190" class="blob-code js-file-line"><span class="pl-c">* Sets the current layer to the given index.</span></td>
      </tr>
      <tr>
        <td id="L4191" class="blob-num js-line-number" data-line-number="4191"></td>
        <td id="LC4191" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4192" class="blob-num js-line-number" data-line-number="4192"></td>
        <td id="LC4192" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#setLayer</span></td>
      </tr>
      <tr>
        <td id="L4193" class="blob-num js-line-number" data-line-number="4193"></td>
        <td id="LC4193" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} layer - The layer to set as current.</span></td>
      </tr>
      <tr>
        <td id="L4194" class="blob-num js-line-number" data-line-number="4194"></td>
        <td id="LC4194" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4195" class="blob-num js-line-number" data-line-number="4195"></td>
        <td id="LC4195" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setLayer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4196" class="blob-num js-line-number" data-line-number="4196"></td>
        <td id="LC4196" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4197" class="blob-num js-line-number" data-line-number="4197"></td>
        <td id="LC4197" class="blob-code js-file-line">    layer <span class="pl-k">=</span> <span class="pl-v">this</span>.getTilelayerIndex(layer);</td>
      </tr>
      <tr>
        <td id="L4198" class="blob-num js-line-number" data-line-number="4198"></td>
        <td id="LC4198" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4199" class="blob-num js-line-number" data-line-number="4199"></td>
        <td id="LC4199" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer])</td>
      </tr>
      <tr>
        <td id="L4200" class="blob-num js-line-number" data-line-number="4200"></td>
        <td id="LC4200" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4201" class="blob-num js-line-number" data-line-number="4201"></td>
        <td id="LC4201" class="blob-code js-file-line">        <span class="pl-v">this</span>.currentLayer <span class="pl-k">=</span> layer;</td>
      </tr>
      <tr>
        <td id="L4202" class="blob-num js-line-number" data-line-number="4202"></td>
        <td id="LC4202" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4203" class="blob-num js-line-number" data-line-number="4203"></td>
        <td id="LC4203" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4204" class="blob-num js-line-number" data-line-number="4204"></td>
        <td id="LC4204" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4205" class="blob-num js-line-number" data-line-number="4205"></td>
        <td id="LC4205" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4206" class="blob-num js-line-number" data-line-number="4206"></td>
        <td id="LC4206" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4207" class="blob-num js-line-number" data-line-number="4207"></td>
        <td id="LC4207" class="blob-code js-file-line"><span class="pl-c">* Checks if there is a tile at the given location.</span></td>
      </tr>
      <tr>
        <td id="L4208" class="blob-num js-line-number" data-line-number="4208"></td>
        <td id="LC4208" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4209" class="blob-num js-line-number" data-line-number="4209"></td>
        <td id="LC4209" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#hasTile</span></td>
      </tr>
      <tr>
        <td id="L4210" class="blob-num js-line-number" data-line-number="4210"></td>
        <td id="LC4210" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to check if a tile exists at (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4211" class="blob-num js-line-number" data-line-number="4211"></td>
        <td id="LC4211" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to check if a tile exists at (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4212" class="blob-num js-line-number" data-line-number="4212"></td>
        <td id="LC4212" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} layer - The layer to set as current.</span></td>
      </tr>
      <tr>
        <td id="L4213" class="blob-num js-line-number" data-line-number="4213"></td>
        <td id="LC4213" class="blob-code js-file-line"><span class="pl-c">* @return {boolean} True if there is a tile at the given location, otherwise false.</span></td>
      </tr>
      <tr>
        <td id="L4214" class="blob-num js-line-number" data-line-number="4214"></td>
        <td id="LC4214" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4215" class="blob-num js-line-number" data-line-number="4215"></td>
        <td id="LC4215" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">hasTile</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4216" class="blob-num js-line-number" data-line-number="4216"></td>
        <td id="LC4216" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4217" class="blob-num js-line-number" data-line-number="4217"></td>
        <td id="LC4217" class="blob-code js-file-line">    layer <span class="pl-k">=</span> <span class="pl-v">this</span>.getTilelayerIndex(layer);</td>
      </tr>
      <tr>
        <td id="L4218" class="blob-num js-line-number" data-line-number="4218"></td>
        <td id="LC4218" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4219" class="blob-num js-line-number" data-line-number="4219"></td>
        <td id="LC4219" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!!</span>(<span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">:</span> <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L4220" class="blob-num js-line-number" data-line-number="4220"></td>
        <td id="LC4220" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4221" class="blob-num js-line-number" data-line-number="4221"></td>
        <td id="LC4221" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4222" class="blob-num js-line-number" data-line-number="4222"></td>
        <td id="LC4222" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4223" class="blob-num js-line-number" data-line-number="4223"></td>
        <td id="LC4223" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4224" class="blob-num js-line-number" data-line-number="4224"></td>
        <td id="LC4224" class="blob-code js-file-line"><span class="pl-c">* Removes the tile located at the given coordinates and updates the collision data.</span></td>
      </tr>
      <tr>
        <td id="L4225" class="blob-num js-line-number" data-line-number="4225"></td>
        <td id="LC4225" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4226" class="blob-num js-line-number" data-line-number="4226"></td>
        <td id="LC4226" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#removeTile</span></td>
      </tr>
      <tr>
        <td id="L4227" class="blob-num js-line-number" data-line-number="4227"></td>
        <td id="LC4227" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to place the tile (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4228" class="blob-num js-line-number" data-line-number="4228"></td>
        <td id="LC4228" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to place the tile (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4229" class="blob-num js-line-number" data-line-number="4229"></td>
        <td id="LC4229" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.</span></td>
      </tr>
      <tr>
        <td id="L4230" class="blob-num js-line-number" data-line-number="4230"></td>
        <td id="LC4230" class="blob-code js-file-line"><span class="pl-c">* @return {Phaser.Tile} The Tile object that was removed from this map.</span></td>
      </tr>
      <tr>
        <td id="L4231" class="blob-num js-line-number" data-line-number="4231"></td>
        <td id="LC4231" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4232" class="blob-num js-line-number" data-line-number="4232"></td>
        <td id="LC4232" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">removeTile</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4233" class="blob-num js-line-number" data-line-number="4233"></td>
        <td id="LC4233" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4234" class="blob-num js-line-number" data-line-number="4234"></td>
        <td id="LC4234" class="blob-code js-file-line">    layer <span class="pl-k">=</span> <span class="pl-v">this</span>.getTilelayerIndex(layer);</td>
      </tr>
      <tr>
        <td id="L4235" class="blob-num js-line-number" data-line-number="4235"></td>
        <td id="LC4235" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4236" class="blob-num js-line-number" data-line-number="4236"></td>
        <td id="LC4236" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">y</span>)</td>
      </tr>
      <tr>
        <td id="L4237" class="blob-num js-line-number" data-line-number="4237"></td>
        <td id="LC4237" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4238" class="blob-num js-line-number" data-line-number="4238"></td>
        <td id="LC4238" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.hasTile(x, y, layer))</td>
      </tr>
      <tr>
        <td id="L4239" class="blob-num js-line-number" data-line-number="4239"></td>
        <td id="LC4239" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L4240" class="blob-num js-line-number" data-line-number="4240"></td>
        <td id="LC4240" class="blob-code js-file-line">            <span class="pl-s">var</span> tile <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x];</td>
      </tr>
      <tr>
        <td id="L4241" class="blob-num js-line-number" data-line-number="4241"></td>
        <td id="LC4241" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4242" class="blob-num js-line-number" data-line-number="4242"></td>
        <td id="LC4242" class="blob-code js-file-line">            <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4243" class="blob-num js-line-number" data-line-number="4243"></td>
        <td id="LC4243" class="blob-code js-file-line">            <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4244" class="blob-num js-line-number" data-line-number="4244"></td>
        <td id="LC4244" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4245" class="blob-num js-line-number" data-line-number="4245"></td>
        <td id="LC4245" class="blob-code js-file-line">            <span class="pl-v">this</span>.calculateFaces(layer);</td>
      </tr>
      <tr>
        <td id="L4246" class="blob-num js-line-number" data-line-number="4246"></td>
        <td id="LC4246" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4247" class="blob-num js-line-number" data-line-number="4247"></td>
        <td id="LC4247" class="blob-code js-file-line">            <span class="pl-k">return</span> tile;</td>
      </tr>
      <tr>
        <td id="L4248" class="blob-num js-line-number" data-line-number="4248"></td>
        <td id="LC4248" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4249" class="blob-num js-line-number" data-line-number="4249"></td>
        <td id="LC4249" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4250" class="blob-num js-line-number" data-line-number="4250"></td>
        <td id="LC4250" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4251" class="blob-num js-line-number" data-line-number="4251"></td>
        <td id="LC4251" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4252" class="blob-num js-line-number" data-line-number="4252"></td>
        <td id="LC4252" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4253" class="blob-num js-line-number" data-line-number="4253"></td>
        <td id="LC4253" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4254" class="blob-num js-line-number" data-line-number="4254"></td>
        <td id="LC4254" class="blob-code js-file-line"><span class="pl-c">* Removes the tile located at the given coordinates and updates the collision data.</span></td>
      </tr>
      <tr>
        <td id="L4255" class="blob-num js-line-number" data-line-number="4255"></td>
        <td id="LC4255" class="blob-code js-file-line"><span class="pl-c">* The coordinates are given in pixel values.</span></td>
      </tr>
      <tr>
        <td id="L4256" class="blob-num js-line-number" data-line-number="4256"></td>
        <td id="LC4256" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4257" class="blob-num js-line-number" data-line-number="4257"></td>
        <td id="LC4257" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#removeTileWorldXY</span></td>
      </tr>
      <tr>
        <td id="L4258" class="blob-num js-line-number" data-line-number="4258"></td>
        <td id="LC4258" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to remove the tile (given in pixels)</span></td>
      </tr>
      <tr>
        <td id="L4259" class="blob-num js-line-number" data-line-number="4259"></td>
        <td id="LC4259" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to remove the tile (given in pixels)</span></td>
      </tr>
      <tr>
        <td id="L4260" class="blob-num js-line-number" data-line-number="4260"></td>
        <td id="LC4260" class="blob-code js-file-line"><span class="pl-c">* @param {number} tileWidth - The width of the tile in pixels.</span></td>
      </tr>
      <tr>
        <td id="L4261" class="blob-num js-line-number" data-line-number="4261"></td>
        <td id="LC4261" class="blob-code js-file-line"><span class="pl-c">* @param {number} tileHeight - The height of the tile in pixels.</span></td>
      </tr>
      <tr>
        <td id="L4262" class="blob-num js-line-number" data-line-number="4262"></td>
        <td id="LC4262" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.</span></td>
      </tr>
      <tr>
        <td id="L4263" class="blob-num js-line-number" data-line-number="4263"></td>
        <td id="LC4263" class="blob-code js-file-line"><span class="pl-c">* @return {Phaser.Tile} The Tile object that was removed from this map.</span></td>
      </tr>
      <tr>
        <td id="L4264" class="blob-num js-line-number" data-line-number="4264"></td>
        <td id="LC4264" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4265" class="blob-num js-line-number" data-line-number="4265"></td>
        <td id="LC4265" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">removeTileWorldXY</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">tileWidth</span>, <span class="pl-vpf">tileHeight</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4266" class="blob-num js-line-number" data-line-number="4266"></td>
        <td id="LC4266" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4267" class="blob-num js-line-number" data-line-number="4267"></td>
        <td id="LC4267" class="blob-code js-file-line">    x <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(x, tileWidth) / tileWidth;</td>
      </tr>
      <tr>
        <td id="L4268" class="blob-num js-line-number" data-line-number="4268"></td>
        <td id="LC4268" class="blob-code js-file-line">    y <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(y, tileHeight) / tileHeight;</td>
      </tr>
      <tr>
        <td id="L4269" class="blob-num js-line-number" data-line-number="4269"></td>
        <td id="LC4269" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4270" class="blob-num js-line-number" data-line-number="4270"></td>
        <td id="LC4270" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.removeTile(x, y, layer);</td>
      </tr>
      <tr>
        <td id="L4271" class="blob-num js-line-number" data-line-number="4271"></td>
        <td id="LC4271" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4272" class="blob-num js-line-number" data-line-number="4272"></td>
        <td id="LC4272" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4273" class="blob-num js-line-number" data-line-number="4273"></td>
        <td id="LC4273" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4274" class="blob-num js-line-number" data-line-number="4274"></td>
        <td id="LC4274" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4275" class="blob-num js-line-number" data-line-number="4275"></td>
        <td id="LC4275" class="blob-code js-file-line"><span class="pl-c">* Puts a tile of the given index value at the coordinate specified.</span></td>
      </tr>
      <tr>
        <td id="L4276" class="blob-num js-line-number" data-line-number="4276"></td>
        <td id="LC4276" class="blob-code js-file-line"><span class="pl-c">* If you pass `null` as the tile it will pass your call over to Tilemap.removeTile instead.</span></td>
      </tr>
      <tr>
        <td id="L4277" class="blob-num js-line-number" data-line-number="4277"></td>
        <td id="LC4277" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4278" class="blob-num js-line-number" data-line-number="4278"></td>
        <td id="LC4278" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#putTile</span></td>
      </tr>
      <tr>
        <td id="L4279" class="blob-num js-line-number" data-line-number="4279"></td>
        <td id="LC4279" class="blob-code js-file-line"><span class="pl-c">* @param {Phaser.Tile|number|null} tile - The index of this tile to set or a Phaser.Tile object,</span></td>
      </tr>
      <tr>
        <td id="L4280" class="blob-num js-line-number" data-line-number="4280"></td>
        <td id="LC4280" class="blob-code js-file-line"><span class="pl-c">*       null means to remove the tile.</span></td>
      </tr>
      <tr>
        <td id="L4281" class="blob-num js-line-number" data-line-number="4281"></td>
        <td id="LC4281" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to place the tile (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4282" class="blob-num js-line-number" data-line-number="4282"></td>
        <td id="LC4282" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to place the tile (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4283" class="blob-num js-line-number" data-line-number="4283"></td>
        <td id="LC4283" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.</span></td>
      </tr>
      <tr>
        <td id="L4284" class="blob-num js-line-number" data-line-number="4284"></td>
        <td id="LC4284" class="blob-code js-file-line"><span class="pl-c">* @return {Phaser.Tile} The Tile object that was created or added to this map.</span></td>
      </tr>
      <tr>
        <td id="L4285" class="blob-num js-line-number" data-line-number="4285"></td>
        <td id="LC4285" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4286" class="blob-num js-line-number" data-line-number="4286"></td>
        <td id="LC4286" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">putTile</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tile</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4287" class="blob-num js-line-number" data-line-number="4287"></td>
        <td id="LC4287" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4288" class="blob-num js-line-number" data-line-number="4288"></td>
        <td id="LC4288" class="blob-code js-file-line">    <span class="pl-k">if</span> (tile <span class="pl-k">===</span> <span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L4289" class="blob-num js-line-number" data-line-number="4289"></td>
        <td id="LC4289" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4290" class="blob-num js-line-number" data-line-number="4290"></td>
        <td id="LC4290" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.removeTile(x, y, layer);</td>
      </tr>
      <tr>
        <td id="L4291" class="blob-num js-line-number" data-line-number="4291"></td>
        <td id="LC4291" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4292" class="blob-num js-line-number" data-line-number="4292"></td>
        <td id="LC4292" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4293" class="blob-num js-line-number" data-line-number="4293"></td>
        <td id="LC4293" class="blob-code js-file-line">    layer <span class="pl-k">=</span> <span class="pl-v">this</span>.getTilelayerIndex(layer);</td>
      </tr>
      <tr>
        <td id="L4294" class="blob-num js-line-number" data-line-number="4294"></td>
        <td id="LC4294" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4295" class="blob-num js-line-number" data-line-number="4295"></td>
        <td id="LC4295" class="blob-code js-file-line">    <span class="pl-s">var</span> tileId,</td>
      </tr>
      <tr>
        <td id="L4296" class="blob-num js-line-number" data-line-number="4296"></td>
        <td id="LC4296" class="blob-code js-file-line">        tileset;</td>
      </tr>
      <tr>
        <td id="L4297" class="blob-num js-line-number" data-line-number="4297"></td>
        <td id="LC4297" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4298" class="blob-num js-line-number" data-line-number="4298"></td>
        <td id="LC4298" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">y</span>)</td>
      </tr>
      <tr>
        <td id="L4299" class="blob-num js-line-number" data-line-number="4299"></td>
        <td id="LC4299" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4300" class="blob-num js-line-number" data-line-number="4300"></td>
        <td id="LC4300" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y]) {</td>
      </tr>
      <tr>
        <td id="L4301" class="blob-num js-line-number" data-line-number="4301"></td>
        <td id="LC4301" class="blob-code js-file-line">            <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y] <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4302" class="blob-num js-line-number" data-line-number="4302"></td>
        <td id="LC4302" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4303" class="blob-num js-line-number" data-line-number="4303"></td>
        <td id="LC4303" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4304" class="blob-num js-line-number" data-line-number="4304"></td>
        <td id="LC4304" class="blob-code js-file-line">        <span class="pl-k">if</span> (tile <span class="pl-k">instanceof</span> Phaser.Tile)</td>
      </tr>
      <tr>
        <td id="L4305" class="blob-num js-line-number" data-line-number="4305"></td>
        <td id="LC4305" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L4306" class="blob-num js-line-number" data-line-number="4306"></td>
        <td id="LC4306" class="blob-code js-file-line">            <span class="pl-s">var</span> idx <span class="pl-k">=</span> (y <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span>) <span class="pl-k">+</span> x;</td>
      </tr>
      <tr>
        <td id="L4307" class="blob-num js-line-number" data-line-number="4307"></td>
        <td id="LC4307" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4308" class="blob-num js-line-number" data-line-number="4308"></td>
        <td id="LC4308" class="blob-code js-file-line">            tileId <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tileIds[idx];</td>
      </tr>
      <tr>
        <td id="L4309" class="blob-num js-line-number" data-line-number="4309"></td>
        <td id="LC4309" class="blob-code js-file-line">            tileset <span class="pl-k">=</span> <span class="pl-v">this</span>.getTileset(tileId);</td>
      </tr>
      <tr>
        <td id="L4310" class="blob-num js-line-number" data-line-number="4310"></td>
        <td id="LC4310" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4311" class="blob-num js-line-number" data-line-number="4311"></td>
        <td id="LC4311" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-v">this</span>.hasTile(x, y, layer))</td>
      </tr>
      <tr>
        <td id="L4312" class="blob-num js-line-number" data-line-number="4312"></td>
        <td id="LC4312" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L4313" class="blob-num js-line-number" data-line-number="4313"></td>
        <td id="LC4313" class="blob-code js-file-line">                <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x].copy(tile);</td>
      </tr>
      <tr>
        <td id="L4314" class="blob-num js-line-number" data-line-number="4314"></td>
        <td id="LC4314" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4315" class="blob-num js-line-number" data-line-number="4315"></td>
        <td id="LC4315" class="blob-code js-file-line">            <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L4316" class="blob-num js-line-number" data-line-number="4316"></td>
        <td id="LC4316" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L4317" class="blob-num js-line-number" data-line-number="4317"></td>
        <td id="LC4317" class="blob-code js-file-line">                <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Tile</span>(<span class="pl-v">this</span>.game, x, y, tileId, tileset, <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer]);</td>
      </tr>
      <tr>
        <td id="L4318" class="blob-num js-line-number" data-line-number="4318"></td>
        <td id="LC4318" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4319" class="blob-num js-line-number" data-line-number="4319"></td>
        <td id="LC4319" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4320" class="blob-num js-line-number" data-line-number="4320"></td>
        <td id="LC4320" class="blob-code js-file-line">        <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L4321" class="blob-num js-line-number" data-line-number="4321"></td>
        <td id="LC4321" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L4322" class="blob-num js-line-number" data-line-number="4322"></td>
        <td id="LC4322" class="blob-code js-file-line">            tileId <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tileIds[tile];</td>
      </tr>
      <tr>
        <td id="L4323" class="blob-num js-line-number" data-line-number="4323"></td>
        <td id="LC4323" class="blob-code js-file-line">            tileset <span class="pl-k">=</span> <span class="pl-v">this</span>.getTileset(tileId);</td>
      </tr>
      <tr>
        <td id="L4324" class="blob-num js-line-number" data-line-number="4324"></td>
        <td id="LC4324" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4325" class="blob-num js-line-number" data-line-number="4325"></td>
        <td id="LC4325" class="blob-code js-file-line">            <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4326" class="blob-num js-line-number" data-line-number="4326"></td>
        <td id="LC4326" class="blob-code js-file-line">            <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Tile</span>(<span class="pl-v">this</span>.game, x, y, tileId, tileset, <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer]);</td>
      </tr>
      <tr>
        <td id="L4327" class="blob-num js-line-number" data-line-number="4327"></td>
        <td id="LC4327" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4328" class="blob-num js-line-number" data-line-number="4328"></td>
        <td id="LC4328" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4329" class="blob-num js-line-number" data-line-number="4329"></td>
        <td id="LC4329" class="blob-code js-file-line">        <span class="pl-c">// if (this.collideIndexes.indexOf(index) &gt; -1)</span></td>
      </tr>
      <tr>
        <td id="L4330" class="blob-num js-line-number" data-line-number="4330"></td>
        <td id="LC4330" class="blob-code js-file-line">        <span class="pl-c">// {</span></td>
      </tr>
      <tr>
        <td id="L4331" class="blob-num js-line-number" data-line-number="4331"></td>
        <td id="LC4331" class="blob-code js-file-line">        <span class="pl-c">//     this.layers[layer].tiles[y][x].setCollision(true, true, true, true);</span></td>
      </tr>
      <tr>
        <td id="L4332" class="blob-num js-line-number" data-line-number="4332"></td>
        <td id="LC4332" class="blob-code js-file-line">        <span class="pl-c">// }</span></td>
      </tr>
      <tr>
        <td id="L4333" class="blob-num js-line-number" data-line-number="4333"></td>
        <td id="LC4333" class="blob-code js-file-line">        <span class="pl-c">// else</span></td>
      </tr>
      <tr>
        <td id="L4334" class="blob-num js-line-number" data-line-number="4334"></td>
        <td id="LC4334" class="blob-code js-file-line">        <span class="pl-c">// {</span></td>
      </tr>
      <tr>
        <td id="L4335" class="blob-num js-line-number" data-line-number="4335"></td>
        <td id="LC4335" class="blob-code js-file-line">        <span class="pl-c">//     this.layers[layer].tiles[y][x].resetCollision();</span></td>
      </tr>
      <tr>
        <td id="L4336" class="blob-num js-line-number" data-line-number="4336"></td>
        <td id="LC4336" class="blob-code js-file-line">        <span class="pl-c">// }</span></td>
      </tr>
      <tr>
        <td id="L4337" class="blob-num js-line-number" data-line-number="4337"></td>
        <td id="LC4337" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4338" class="blob-num js-line-number" data-line-number="4338"></td>
        <td id="LC4338" class="blob-code js-file-line">        <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4339" class="blob-num js-line-number" data-line-number="4339"></td>
        <td id="LC4339" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4340" class="blob-num js-line-number" data-line-number="4340"></td>
        <td id="LC4340" class="blob-code js-file-line">        <span class="pl-v">this</span>.calculateFaces(layer);</td>
      </tr>
      <tr>
        <td id="L4341" class="blob-num js-line-number" data-line-number="4341"></td>
        <td id="LC4341" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4342" class="blob-num js-line-number" data-line-number="4342"></td>
        <td id="LC4342" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x];</td>
      </tr>
      <tr>
        <td id="L4343" class="blob-num js-line-number" data-line-number="4343"></td>
        <td id="LC4343" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4344" class="blob-num js-line-number" data-line-number="4344"></td>
        <td id="LC4344" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4345" class="blob-num js-line-number" data-line-number="4345"></td>
        <td id="LC4345" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4346" class="blob-num js-line-number" data-line-number="4346"></td>
        <td id="LC4346" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4347" class="blob-num js-line-number" data-line-number="4347"></td>
        <td id="LC4347" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4348" class="blob-num js-line-number" data-line-number="4348"></td>
        <td id="LC4348" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4349" class="blob-num js-line-number" data-line-number="4349"></td>
        <td id="LC4349" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4350" class="blob-num js-line-number" data-line-number="4350"></td>
        <td id="LC4350" class="blob-code js-file-line"><span class="pl-c">* Puts a tile into the Tilemap layer. The coordinates are given in pixel values.</span></td>
      </tr>
      <tr>
        <td id="L4351" class="blob-num js-line-number" data-line-number="4351"></td>
        <td id="LC4351" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4352" class="blob-num js-line-number" data-line-number="4352"></td>
        <td id="LC4352" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#putTileWorldXY</span></td>
      </tr>
      <tr>
        <td id="L4353" class="blob-num js-line-number" data-line-number="4353"></td>
        <td id="LC4353" class="blob-code js-file-line"><span class="pl-c">* @param {Phaser.Tile|number} tile - The index of this tile to set or a Phaser.Tile object.</span></td>
      </tr>
      <tr>
        <td id="L4354" class="blob-num js-line-number" data-line-number="4354"></td>
        <td id="LC4354" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to insert the tile (given in pixels)</span></td>
      </tr>
      <tr>
        <td id="L4355" class="blob-num js-line-number" data-line-number="4355"></td>
        <td id="LC4355" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to insert the tile (given in pixels)</span></td>
      </tr>
      <tr>
        <td id="L4356" class="blob-num js-line-number" data-line-number="4356"></td>
        <td id="LC4356" class="blob-code js-file-line"><span class="pl-c">* @param {number} tileWidth - The width of the tile in pixels.</span></td>
      </tr>
      <tr>
        <td id="L4357" class="blob-num js-line-number" data-line-number="4357"></td>
        <td id="LC4357" class="blob-code js-file-line"><span class="pl-c">* @param {number} tileHeight - The height of the tile in pixels.</span></td>
      </tr>
      <tr>
        <td id="L4358" class="blob-num js-line-number" data-line-number="4358"></td>
        <td id="LC4358" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to modify.</span></td>
      </tr>
      <tr>
        <td id="L4359" class="blob-num js-line-number" data-line-number="4359"></td>
        <td id="LC4359" class="blob-code js-file-line"><span class="pl-c">* @return {Phaser.Tile} The Tile object that was created or added to this map.</span></td>
      </tr>
      <tr>
        <td id="L4360" class="blob-num js-line-number" data-line-number="4360"></td>
        <td id="LC4360" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4361" class="blob-num js-line-number" data-line-number="4361"></td>
        <td id="LC4361" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">putTileWorldXY</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tile</span>, <span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">tileWidth</span>, <span class="pl-vpf">tileHeight</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4362" class="blob-num js-line-number" data-line-number="4362"></td>
        <td id="LC4362" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4363" class="blob-num js-line-number" data-line-number="4363"></td>
        <td id="LC4363" class="blob-code js-file-line">    x <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(x, tileWidth) / tileWidth;</td>
      </tr>
      <tr>
        <td id="L4364" class="blob-num js-line-number" data-line-number="4364"></td>
        <td id="LC4364" class="blob-code js-file-line">    y <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(y, tileHeight) / tileHeight;</td>
      </tr>
      <tr>
        <td id="L4365" class="blob-num js-line-number" data-line-number="4365"></td>
        <td id="LC4365" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4366" class="blob-num js-line-number" data-line-number="4366"></td>
        <td id="LC4366" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.putTile(tile, x, y, layer);</td>
      </tr>
      <tr>
        <td id="L4367" class="blob-num js-line-number" data-line-number="4367"></td>
        <td id="LC4367" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4368" class="blob-num js-line-number" data-line-number="4368"></td>
        <td id="LC4368" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4369" class="blob-num js-line-number" data-line-number="4369"></td>
        <td id="LC4369" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4370" class="blob-num js-line-number" data-line-number="4370"></td>
        <td id="LC4370" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4371" class="blob-num js-line-number" data-line-number="4371"></td>
        <td id="LC4371" class="blob-code js-file-line"><span class="pl-c">* Gets a tile from the Tilemap Layer. The coordinates are given in tile values.</span></td>
      </tr>
      <tr>
        <td id="L4372" class="blob-num js-line-number" data-line-number="4372"></td>
        <td id="LC4372" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4373" class="blob-num js-line-number" data-line-number="4373"></td>
        <td id="LC4373" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTile</span></td>
      </tr>
      <tr>
        <td id="L4374" class="blob-num js-line-number" data-line-number="4374"></td>
        <td id="LC4374" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to get the tile from (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4375" class="blob-num js-line-number" data-line-number="4375"></td>
        <td id="LC4375" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to get the tile from (given in tile units, not pixels)</span></td>
      </tr>
      <tr>
        <td id="L4376" class="blob-num js-line-number" data-line-number="4376"></td>
        <td id="LC4376" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to get the tile from.</span></td>
      </tr>
      <tr>
        <td id="L4377" class="blob-num js-line-number" data-line-number="4377"></td>
        <td id="LC4377" class="blob-code js-file-line"><span class="pl-c">* @param {boolean} [nonNull=false] - If true getTile won&#39;t return null for empty tiles,</span></td>
      </tr>
      <tr>
        <td id="L4378" class="blob-num js-line-number" data-line-number="4378"></td>
        <td id="LC4378" class="blob-code js-file-line"><span class="pl-c">*       but a Tile object with an index of -1.</span></td>
      </tr>
      <tr>
        <td id="L4379" class="blob-num js-line-number" data-line-number="4379"></td>
        <td id="LC4379" class="blob-code js-file-line"><span class="pl-c">* @return {Phaser.Tile} The tile at the given coordinates or null if no tile was found or the coordinates were invalid.</span></td>
      </tr>
      <tr>
        <td id="L4380" class="blob-num js-line-number" data-line-number="4380"></td>
        <td id="LC4380" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4381" class="blob-num js-line-number" data-line-number="4381"></td>
        <td id="LC4381" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTile</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">layer</span>, <span class="pl-vpf">nonNull</span>) {</td>
      </tr>
      <tr>
        <td id="L4382" class="blob-num js-line-number" data-line-number="4382"></td>
        <td id="LC4382" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4383" class="blob-num js-line-number" data-line-number="4383"></td>
        <td id="LC4383" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> nonNull <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { nonNull <span class="pl-k">=</span> <span class="pl-c1">false</span>; }</td>
      </tr>
      <tr>
        <td id="L4384" class="blob-num js-line-number" data-line-number="4384"></td>
        <td id="LC4384" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4385" class="blob-num js-line-number" data-line-number="4385"></td>
        <td id="LC4385" class="blob-code js-file-line">    layer <span class="pl-k">=</span> <span class="pl-v">this</span>.getTilelayerIndex(layer);</td>
      </tr>
      <tr>
        <td id="L4386" class="blob-num js-line-number" data-line-number="4386"></td>
        <td id="LC4386" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4387" class="blob-num js-line-number" data-line-number="4387"></td>
        <td id="LC4387" class="blob-code js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].<span class="pl-sc">size</span>.<span class="pl-sc">y</span>)</td>
      </tr>
      <tr>
        <td id="L4388" class="blob-num js-line-number" data-line-number="4388"></td>
        <td id="LC4388" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4389" class="blob-num js-line-number" data-line-number="4389"></td>
        <td id="LC4389" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y] <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[layer].tiles[y][x] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4390" class="blob-num js-line-number" data-line-number="4390"></td>
        <td id="LC4390" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4391" class="blob-num js-line-number" data-line-number="4391"></td>
        <td id="LC4391" class="blob-code js-file-line">    <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L4392" class="blob-num js-line-number" data-line-number="4392"></td>
        <td id="LC4392" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4393" class="blob-num js-line-number" data-line-number="4393"></td>
        <td id="LC4393" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4394" class="blob-num js-line-number" data-line-number="4394"></td>
        <td id="LC4394" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4395" class="blob-num js-line-number" data-line-number="4395"></td>
        <td id="LC4395" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4396" class="blob-num js-line-number" data-line-number="4396"></td>
        <td id="LC4396" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4397" class="blob-num js-line-number" data-line-number="4397"></td>
        <td id="LC4397" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4398" class="blob-num js-line-number" data-line-number="4398"></td>
        <td id="LC4398" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4399" class="blob-num js-line-number" data-line-number="4399"></td>
        <td id="LC4399" class="blob-code js-file-line"><span class="pl-c">* Gets a tile from the Tilemap layer. The coordinates are given in pixel values.</span></td>
      </tr>
      <tr>
        <td id="L4400" class="blob-num js-line-number" data-line-number="4400"></td>
        <td id="LC4400" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4401" class="blob-num js-line-number" data-line-number="4401"></td>
        <td id="LC4401" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#getTileWorldXY</span></td>
      </tr>
      <tr>
        <td id="L4402" class="blob-num js-line-number" data-line-number="4402"></td>
        <td id="LC4402" class="blob-code js-file-line"><span class="pl-c">* @param {number} x - X position to get the tile from (given in pixels)</span></td>
      </tr>
      <tr>
        <td id="L4403" class="blob-num js-line-number" data-line-number="4403"></td>
        <td id="LC4403" class="blob-code js-file-line"><span class="pl-c">* @param {number} y - Y position to get the tile from (given in pixels)</span></td>
      </tr>
      <tr>
        <td id="L4404" class="blob-num js-line-number" data-line-number="4404"></td>
        <td id="LC4404" class="blob-code js-file-line"><span class="pl-c">* @param {number} [tileWidth] - The width of the tiles. If not given the map default is used.</span></td>
      </tr>
      <tr>
        <td id="L4405" class="blob-num js-line-number" data-line-number="4405"></td>
        <td id="LC4405" class="blob-code js-file-line"><span class="pl-c">* @param {number} [tileHeight] - The height of the tiles. If not given the map default is used.</span></td>
      </tr>
      <tr>
        <td id="L4406" class="blob-num js-line-number" data-line-number="4406"></td>
        <td id="LC4406" class="blob-code js-file-line"><span class="pl-c">* @param {number|string|Phaser.TilemapLayer} [layer] - The layer to get the tile from.</span></td>
      </tr>
      <tr>
        <td id="L4407" class="blob-num js-line-number" data-line-number="4407"></td>
        <td id="LC4407" class="blob-code js-file-line"><span class="pl-c">* @return {Phaser.Tile} The tile at the given coordinates.</span></td>
      </tr>
      <tr>
        <td id="L4408" class="blob-num js-line-number" data-line-number="4408"></td>
        <td id="LC4408" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4409" class="blob-num js-line-number" data-line-number="4409"></td>
        <td id="LC4409" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileWorldXY</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">x</span>, <span class="pl-vpf">y</span>, <span class="pl-vpf">tileWidth</span>, <span class="pl-vpf">tileHeight</span>, <span class="pl-vpf">layer</span>) {</td>
      </tr>
      <tr>
        <td id="L4410" class="blob-num js-line-number" data-line-number="4410"></td>
        <td id="LC4410" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4411" class="blob-num js-line-number" data-line-number="4411"></td>
        <td id="LC4411" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> tileWidth <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { tileWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.tileWidth; }</td>
      </tr>
      <tr>
        <td id="L4412" class="blob-num js-line-number" data-line-number="4412"></td>
        <td id="LC4412" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> tileHeight <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { tileHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.tileHeight; }</td>
      </tr>
      <tr>
        <td id="L4413" class="blob-num js-line-number" data-line-number="4413"></td>
        <td id="LC4413" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4414" class="blob-num js-line-number" data-line-number="4414"></td>
        <td id="LC4414" class="blob-code js-file-line">    x <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(x, tileWidth) / tileWidth;</td>
      </tr>
      <tr>
        <td id="L4415" class="blob-num js-line-number" data-line-number="4415"></td>
        <td id="LC4415" class="blob-code js-file-line">    y <span class="pl-k">=</span> <span class="pl-v">this</span>.game.math.snapToFloor(y, tileHeight) / tileHeight;</td>
      </tr>
      <tr>
        <td id="L4416" class="blob-num js-line-number" data-line-number="4416"></td>
        <td id="LC4416" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4417" class="blob-num js-line-number" data-line-number="4417"></td>
        <td id="LC4417" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.getTile(x, y, layer);</td>
      </tr>
      <tr>
        <td id="L4418" class="blob-num js-line-number" data-line-number="4418"></td>
        <td id="LC4418" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4419" class="blob-num js-line-number" data-line-number="4419"></td>
        <td id="LC4419" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4420" class="blob-num js-line-number" data-line-number="4420"></td>
        <td id="LC4420" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4421" class="blob-num js-line-number" data-line-number="4421"></td>
        <td id="LC4421" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4422" class="blob-num js-line-number" data-line-number="4422"></td>
        <td id="LC4422" class="blob-code js-file-line"><span class="pl-c">* Removes all layers from this tile map.</span></td>
      </tr>
      <tr>
        <td id="L4423" class="blob-num js-line-number" data-line-number="4423"></td>
        <td id="LC4423" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4424" class="blob-num js-line-number" data-line-number="4424"></td>
        <td id="LC4424" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#removeAllLayers</span></td>
      </tr>
      <tr>
        <td id="L4425" class="blob-num js-line-number" data-line-number="4425"></td>
        <td id="LC4425" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4426" class="blob-num js-line-number" data-line-number="4426"></td>
        <td id="LC4426" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">removeAllLayers</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4427" class="blob-num js-line-number" data-line-number="4427"></td>
        <td id="LC4427" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4428" class="blob-num js-line-number" data-line-number="4428"></td>
        <td id="LC4428" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">layers</span>.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4429" class="blob-num js-line-number" data-line-number="4429"></td>
        <td id="LC4429" class="blob-code js-file-line">    <span class="pl-v">this</span>.currentLayer <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4430" class="blob-num js-line-number" data-line-number="4430"></td>
        <td id="LC4430" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4431" class="blob-num js-line-number" data-line-number="4431"></td>
        <td id="LC4431" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4432" class="blob-num js-line-number" data-line-number="4432"></td>
        <td id="LC4432" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4433" class="blob-num js-line-number" data-line-number="4433"></td>
        <td id="LC4433" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4434" class="blob-num js-line-number" data-line-number="4434"></td>
        <td id="LC4434" class="blob-code js-file-line"><span class="pl-c">* Dumps the tilemap data out to the console.</span></td>
      </tr>
      <tr>
        <td id="L4435" class="blob-num js-line-number" data-line-number="4435"></td>
        <td id="LC4435" class="blob-code js-file-line"><span class="pl-c">*</span></td>
      </tr>
      <tr>
        <td id="L4436" class="blob-num js-line-number" data-line-number="4436"></td>
        <td id="LC4436" class="blob-code js-file-line"><span class="pl-c">* @method Phaser.Tilemap#dump</span></td>
      </tr>
      <tr>
        <td id="L4437" class="blob-num js-line-number" data-line-number="4437"></td>
        <td id="LC4437" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4438" class="blob-num js-line-number" data-line-number="4438"></td>
        <td id="LC4438" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">dump</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4439" class="blob-num js-line-number" data-line-number="4439"></td>
        <td id="LC4439" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4440" class="blob-num js-line-number" data-line-number="4440"></td>
        <td id="LC4440" class="blob-code js-file-line">    <span class="pl-s">var</span> txt <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4441" class="blob-num js-line-number" data-line-number="4441"></td>
        <td id="LC4441" class="blob-code js-file-line">    <span class="pl-s">var</span> args <span class="pl-k">=</span> [<span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L4442" class="blob-num js-line-number" data-line-number="4442"></td>
        <td id="LC4442" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4443" class="blob-num js-line-number" data-line-number="4443"></td>
        <td id="LC4443" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> y <span class="pl-k">=</span> <span class="pl-c1">0</span>; y <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer].<span class="pl-sc">size</span>.<span class="pl-sc">y</span>; y<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L4444" class="blob-num js-line-number" data-line-number="4444"></td>
        <td id="LC4444" class="blob-code js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L4445" class="blob-num js-line-number" data-line-number="4445"></td>
        <td id="LC4445" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> x <span class="pl-k">=</span> <span class="pl-c1">0</span>; x <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer].<span class="pl-sc">size</span>.<span class="pl-sc">x</span>; x<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L4446" class="blob-num js-line-number" data-line-number="4446"></td>
        <td id="LC4446" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L4447" class="blob-num js-line-number" data-line-number="4447"></td>
        <td id="LC4447" class="blob-code js-file-line">            txt <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>%c  <span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4448" class="blob-num js-line-number" data-line-number="4448"></td>
        <td id="LC4448" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4449" class="blob-num js-line-number" data-line-number="4449"></td>
        <td id="LC4449" class="blob-code js-file-line">            <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer].tiles[y] <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer].tiles[y][x])</td>
      </tr>
      <tr>
        <td id="L4450" class="blob-num js-line-number" data-line-number="4450"></td>
        <td id="LC4450" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L4451" class="blob-num js-line-number" data-line-number="4451"></td>
        <td id="LC4451" class="blob-code js-file-line">                <span class="pl-k">if</span> (<span class="pl-v">this</span>.debugMap[<span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer].tiles[y][x]])</td>
      </tr>
      <tr>
        <td id="L4452" class="blob-num js-line-number" data-line-number="4452"></td>
        <td id="LC4452" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4453" class="blob-num js-line-number" data-line-number="4453"></td>
        <td id="LC4453" class="blob-code js-file-line">                    args.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>background: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.debugMap[<span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer].tiles[y][x]]);</td>
      </tr>
      <tr>
        <td id="L4454" class="blob-num js-line-number" data-line-number="4454"></td>
        <td id="LC4454" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4455" class="blob-num js-line-number" data-line-number="4455"></td>
        <td id="LC4455" class="blob-code js-file-line">                <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L4456" class="blob-num js-line-number" data-line-number="4456"></td>
        <td id="LC4456" class="blob-code js-file-line">                {</td>
      </tr>
      <tr>
        <td id="L4457" class="blob-num js-line-number" data-line-number="4457"></td>
        <td id="LC4457" class="blob-code js-file-line">                    args.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>background: #ffffff<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4458" class="blob-num js-line-number" data-line-number="4458"></td>
        <td id="LC4458" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4459" class="blob-num js-line-number" data-line-number="4459"></td>
        <td id="LC4459" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4460" class="blob-num js-line-number" data-line-number="4460"></td>
        <td id="LC4460" class="blob-code js-file-line">            <span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L4461" class="blob-num js-line-number" data-line-number="4461"></td>
        <td id="LC4461" class="blob-code js-file-line">            {</td>
      </tr>
      <tr>
        <td id="L4462" class="blob-num js-line-number" data-line-number="4462"></td>
        <td id="LC4462" class="blob-code js-file-line">                args.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>background: rgb(0, 0, 0)<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4463" class="blob-num js-line-number" data-line-number="4463"></td>
        <td id="LC4463" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4464" class="blob-num js-line-number" data-line-number="4464"></td>
        <td id="LC4464" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4465" class="blob-num js-line-number" data-line-number="4465"></td>
        <td id="LC4465" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4466" class="blob-num js-line-number" data-line-number="4466"></td>
        <td id="LC4466" class="blob-code js-file-line">        txt <span class="pl-k">+=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4467" class="blob-num js-line-number" data-line-number="4467"></td>
        <td id="LC4467" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4468" class="blob-num js-line-number" data-line-number="4468"></td>
        <td id="LC4468" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4469" class="blob-num js-line-number" data-line-number="4469"></td>
        <td id="LC4469" class="blob-code js-file-line">    args[<span class="pl-c1">0</span>] <span class="pl-k">=</span> txt;</td>
      </tr>
      <tr>
        <td id="L4470" class="blob-num js-line-number" data-line-number="4470"></td>
        <td id="LC4470" class="blob-code js-file-line">    <span class="pl-en">console</span><span class="pl-s3">.log</span>.<span class="pl-s3">apply</span>(<span class="pl-en">console</span>, args);</td>
      </tr>
      <tr>
        <td id="L4471" class="blob-num js-line-number" data-line-number="4471"></td>
        <td id="LC4471" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4472" class="blob-num js-line-number" data-line-number="4472"></td>
        <td id="LC4472" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4473" class="blob-num js-line-number" data-line-number="4473"></td>
        <td id="LC4473" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4474" class="blob-num js-line-number" data-line-number="4474"></td>
        <td id="LC4474" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4475" class="blob-num js-line-number" data-line-number="4475"></td>
        <td id="LC4475" class="blob-code js-file-line"><span class="pl-c"> * Gets the tileset that an ID is associated with</span></td>
      </tr>
      <tr>
        <td id="L4476" class="blob-num js-line-number" data-line-number="4476"></td>
        <td id="LC4476" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4477" class="blob-num js-line-number" data-line-number="4477"></td>
        <td id="LC4477" class="blob-code js-file-line"><span class="pl-c"> * @method getTileset</span></td>
      </tr>
      <tr>
        <td id="L4478" class="blob-num js-line-number" data-line-number="4478"></td>
        <td id="LC4478" class="blob-code js-file-line"><span class="pl-c"> * @param tileId {Number} The id of the tile to find the tileset for</span></td>
      </tr>
      <tr>
        <td id="L4479" class="blob-num js-line-number" data-line-number="4479"></td>
        <td id="LC4479" class="blob-code js-file-line"><span class="pl-c"> * @return {TiledTileset} Returns the tileset if found, undefined if not</span></td>
      </tr>
      <tr>
        <td id="L4480" class="blob-num js-line-number" data-line-number="4480"></td>
        <td id="LC4480" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4481" class="blob-num js-line-number" data-line-number="4481"></td>
        <td id="LC4481" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileset</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tileId</span>) {</td>
      </tr>
      <tr>
        <td id="L4482" class="blob-num js-line-number" data-line-number="4482"></td>
        <td id="LC4482" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> <span class="pl-v">this</span>.tilesets.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4483" class="blob-num js-line-number" data-line-number="4483"></td>
        <td id="LC4483" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.tilesets[i].contains(tileId)) {</td>
      </tr>
      <tr>
        <td id="L4484" class="blob-num js-line-number" data-line-number="4484"></td>
        <td id="LC4484" class="blob-code js-file-line">            <span class="pl-k">return</span> <span class="pl-v">this</span>.tilesets[i];</td>
      </tr>
      <tr>
        <td id="L4485" class="blob-num js-line-number" data-line-number="4485"></td>
        <td id="LC4485" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4486" class="blob-num js-line-number" data-line-number="4486"></td>
        <td id="LC4486" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4487" class="blob-num js-line-number" data-line-number="4487"></td>
        <td id="LC4487" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4488" class="blob-num js-line-number" data-line-number="4488"></td>
        <td id="LC4488" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4489" class="blob-num js-line-number" data-line-number="4489"></td>
        <td id="LC4489" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">postUpdate</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4490" class="blob-num js-line-number" data-line-number="4490"></td>
        <td id="LC4490" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>._camScaleX <span class="pl-k">!==</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">x</span> <span class="pl-k">||</span> <span class="pl-v">this</span>._camScaleY <span class="pl-k">!==</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4491" class="blob-num js-line-number" data-line-number="4491"></td>
        <td id="LC4491" class="blob-code js-file-line">        <span class="pl-v">this</span>._camScaleX <span class="pl-k">=</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">x</span>;</td>
      </tr>
      <tr>
        <td id="L4492" class="blob-num js-line-number" data-line-number="4492"></td>
        <td id="LC4492" class="blob-code js-file-line">        <span class="pl-v">this</span>._camScaleY <span class="pl-k">=</span> <span class="pl-v">this</span>.game.camera.scale.<span class="pl-sc">y</span>;</td>
      </tr>
      <tr>
        <td id="L4493" class="blob-num js-line-number" data-line-number="4493"></td>
        <td id="LC4493" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4494" class="blob-num js-line-number" data-line-number="4494"></td>
        <td id="LC4494" class="blob-code js-file-line">        <span class="pl-v">this</span>.setTileSize(<span class="pl-v">this</span>.tileWidth, <span class="pl-v">this</span>.tileHeight);</td>
      </tr>
      <tr>
        <td id="L4495" class="blob-num js-line-number" data-line-number="4495"></td>
        <td id="LC4495" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4496" class="blob-num js-line-number" data-line-number="4496"></td>
        <td id="LC4496" class="blob-code js-file-line">        <span class="pl-v">this</span>.dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4497" class="blob-num js-line-number" data-line-number="4497"></td>
        <td id="LC4497" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4498" class="blob-num js-line-number" data-line-number="4498"></td>
        <td id="LC4498" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4499" class="blob-num js-line-number" data-line-number="4499"></td>
        <td id="LC4499" class="blob-code js-file-line">    Phaser.Group.<span class="pl-sc">prototype</span>.postUpdate.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4500" class="blob-num js-line-number" data-line-number="4500"></td>
        <td id="LC4500" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4501" class="blob-num js-line-number" data-line-number="4501"></td>
        <td id="LC4501" class="blob-code js-file-line">    <span class="pl-v">this</span>.dirty <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4502" class="blob-num js-line-number" data-line-number="4502"></td>
        <td id="LC4502" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4503" class="blob-num js-line-number" data-line-number="4503"></td>
        <td id="LC4503" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4504" class="blob-num js-line-number" data-line-number="4504"></td>
        <td id="LC4504" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4505" class="blob-num js-line-number" data-line-number="4505"></td>
        <td id="LC4505" class="blob-code js-file-line"><span class="pl-c"> * Spawns all the objects in the ObjectGroups of this map</span></td>
      </tr>
      <tr>
        <td id="L4506" class="blob-num js-line-number" data-line-number="4506"></td>
        <td id="LC4506" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4507" class="blob-num js-line-number" data-line-number="4507"></td>
        <td id="LC4507" class="blob-code js-file-line"><span class="pl-c"> * @method spawnObjects</span></td>
      </tr>
      <tr>
        <td id="L4508" class="blob-num js-line-number" data-line-number="4508"></td>
        <td id="LC4508" class="blob-code js-file-line"><span class="pl-c"> * @return {Tilemap} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L4509" class="blob-num js-line-number" data-line-number="4509"></td>
        <td id="LC4509" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L4510" class="blob-num js-line-number" data-line-number="4510"></td>
        <td id="LC4510" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4511" class="blob-num js-line-number" data-line-number="4511"></td>
        <td id="LC4511" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">spawnObjects</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">spawnCallback</span>) {</td>
      </tr>
      <tr>
        <td id="L4512" class="blob-num js-line-number" data-line-number="4512"></td>
        <td id="LC4512" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> <span class="pl-v">this</span>.objects.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4513" class="blob-num js-line-number" data-line-number="4513"></td>
        <td id="LC4513" class="blob-code js-file-line">        <span class="pl-v">this</span>.objects[i].spawn(spawnCallback);</td>
      </tr>
      <tr>
        <td id="L4514" class="blob-num js-line-number" data-line-number="4514"></td>
        <td id="LC4514" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4515" class="blob-num js-line-number" data-line-number="4515"></td>
        <td id="LC4515" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4516" class="blob-num js-line-number" data-line-number="4516"></td>
        <td id="LC4516" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4517" class="blob-num js-line-number" data-line-number="4517"></td>
        <td id="LC4517" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4518" class="blob-num js-line-number" data-line-number="4518"></td>
        <td id="LC4518" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4519" class="blob-num js-line-number" data-line-number="4519"></td>
        <td id="LC4519" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4520" class="blob-num js-line-number" data-line-number="4520"></td>
        <td id="LC4520" class="blob-code js-file-line"><span class="pl-c"> * Spawns all the objects in the ObjectGroups of this map</span></td>
      </tr>
      <tr>
        <td id="L4521" class="blob-num js-line-number" data-line-number="4521"></td>
        <td id="LC4521" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4522" class="blob-num js-line-number" data-line-number="4522"></td>
        <td id="LC4522" class="blob-code js-file-line"><span class="pl-c"> * @method despawnObjects</span></td>
      </tr>
      <tr>
        <td id="L4523" class="blob-num js-line-number" data-line-number="4523"></td>
        <td id="LC4523" class="blob-code js-file-line"><span class="pl-c"> * @return {Tilemap} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L4524" class="blob-num js-line-number" data-line-number="4524"></td>
        <td id="LC4524" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L4525" class="blob-num js-line-number" data-line-number="4525"></td>
        <td id="LC4525" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4526" class="blob-num js-line-number" data-line-number="4526"></td>
        <td id="LC4526" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">despawnObjects</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4527" class="blob-num js-line-number" data-line-number="4527"></td>
        <td id="LC4527" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> <span class="pl-v">this</span>.objects.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4528" class="blob-num js-line-number" data-line-number="4528"></td>
        <td id="LC4528" class="blob-code js-file-line">        <span class="pl-v">this</span>.objects[i].despawn();</td>
      </tr>
      <tr>
        <td id="L4529" class="blob-num js-line-number" data-line-number="4529"></td>
        <td id="LC4529" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4530" class="blob-num js-line-number" data-line-number="4530"></td>
        <td id="LC4530" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4531" class="blob-num js-line-number" data-line-number="4531"></td>
        <td id="LC4531" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4532" class="blob-num js-line-number" data-line-number="4532"></td>
        <td id="LC4532" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4533" class="blob-num js-line-number" data-line-number="4533"></td>
        <td id="LC4533" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4534" class="blob-num js-line-number" data-line-number="4534"></td>
        <td id="LC4534" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4535" class="blob-num js-line-number" data-line-number="4535"></td>
        <td id="LC4535" class="blob-code js-file-line"><span class="pl-c"> * Clears all the tiles that are currently used on all tile layers</span></td>
      </tr>
      <tr>
        <td id="L4536" class="blob-num js-line-number" data-line-number="4536"></td>
        <td id="LC4536" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4537" class="blob-num js-line-number" data-line-number="4537"></td>
        <td id="LC4537" class="blob-code js-file-line"><span class="pl-c"> * @method clearTiles</span></td>
      </tr>
      <tr>
        <td id="L4538" class="blob-num js-line-number" data-line-number="4538"></td>
        <td id="LC4538" class="blob-code js-file-line"><span class="pl-c"> * @return {Tilemap} Returns itself.</span></td>
      </tr>
      <tr>
        <td id="L4539" class="blob-num js-line-number" data-line-number="4539"></td>
        <td id="LC4539" class="blob-code js-file-line"><span class="pl-c"> * @chainable</span></td>
      </tr>
      <tr>
        <td id="L4540" class="blob-num js-line-number" data-line-number="4540"></td>
        <td id="LC4540" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4541" class="blob-num js-line-number" data-line-number="4541"></td>
        <td id="LC4541" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">clearTiles</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4542" class="blob-num js-line-number" data-line-number="4542"></td>
        <td id="LC4542" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4543" class="blob-num js-line-number" data-line-number="4543"></td>
        <td id="LC4543" class="blob-code js-file-line">        <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[i].clearTiles();</td>
      </tr>
      <tr>
        <td id="L4544" class="blob-num js-line-number" data-line-number="4544"></td>
        <td id="LC4544" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4545" class="blob-num js-line-number" data-line-number="4545"></td>
        <td id="LC4545" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4546" class="blob-num js-line-number" data-line-number="4546"></td>
        <td id="LC4546" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4547" class="blob-num js-line-number" data-line-number="4547"></td>
        <td id="LC4547" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4548" class="blob-num js-line-number" data-line-number="4548"></td>
        <td id="LC4548" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4549" class="blob-num js-line-number" data-line-number="4549"></td>
        <td id="LC4549" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4550" class="blob-num js-line-number" data-line-number="4550"></td>
        <td id="LC4550" class="blob-code js-file-line"><span class="pl-c"> * Destroys the tilemap instance</span></td>
      </tr>
      <tr>
        <td id="L4551" class="blob-num js-line-number" data-line-number="4551"></td>
        <td id="LC4551" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4552" class="blob-num js-line-number" data-line-number="4552"></td>
        <td id="LC4552" class="blob-code js-file-line"><span class="pl-c"> * @method destroy</span></td>
      </tr>
      <tr>
        <td id="L4553" class="blob-num js-line-number" data-line-number="4553"></td>
        <td id="LC4553" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4554" class="blob-num js-line-number" data-line-number="4554"></td>
        <td id="LC4554" class="blob-code js-file-line"><span class="pl-s3">Tilemap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">destroy</span> <span class="pl-k">=</span> <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4555" class="blob-num js-line-number" data-line-number="4555"></td>
        <td id="LC4555" class="blob-code js-file-line">    Phaser.Group.<span class="pl-sc">prototype</span>.destroy.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4556" class="blob-num js-line-number" data-line-number="4556"></td>
        <td id="LC4556" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4557" class="blob-num js-line-number" data-line-number="4557"></td>
        <td id="LC4557" class="blob-code js-file-line">    <span class="pl-v">this</span>.key <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4558" class="blob-num js-line-number" data-line-number="4558"></td>
        <td id="LC4558" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">size</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4559" class="blob-num js-line-number" data-line-number="4559"></td>
        <td id="LC4559" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileWidth <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4560" class="blob-num js-line-number" data-line-number="4560"></td>
        <td id="LC4560" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileHeight <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4561" class="blob-num js-line-number" data-line-number="4561"></td>
        <td id="LC4561" class="blob-code js-file-line">    <span class="pl-v">this</span>.scaledTileWidth <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4562" class="blob-num js-line-number" data-line-number="4562"></td>
        <td id="LC4562" class="blob-code js-file-line">    <span class="pl-v">this</span>.scaledTileHeight <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4563" class="blob-num js-line-number" data-line-number="4563"></td>
        <td id="LC4563" class="blob-code js-file-line">    <span class="pl-v">this</span>.orientation <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4564" class="blob-num js-line-number" data-line-number="4564"></td>
        <td id="LC4564" class="blob-code js-file-line">    <span class="pl-v">this</span>.format <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4565" class="blob-num js-line-number" data-line-number="4565"></td>
        <td id="LC4565" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">version</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4566" class="blob-num js-line-number" data-line-number="4566"></td>
        <td id="LC4566" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4567" class="blob-num js-line-number" data-line-number="4567"></td>
        <td id="LC4567" class="blob-code js-file-line">    <span class="pl-v">this</span>.widthInPixels <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4568" class="blob-num js-line-number" data-line-number="4568"></td>
        <td id="LC4568" class="blob-code js-file-line">    <span class="pl-v">this</span>.heightInPixels <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4569" class="blob-num js-line-number" data-line-number="4569"></td>
        <td id="LC4569" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4570" class="blob-num js-line-number" data-line-number="4570"></td>
        <td id="LC4570" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">layers</span>.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4571" class="blob-num js-line-number" data-line-number="4571"></td>
        <td id="LC4571" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">layers</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4572" class="blob-num js-line-number" data-line-number="4572"></td>
        <td id="LC4572" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4573" class="blob-num js-line-number" data-line-number="4573"></td>
        <td id="LC4573" class="blob-code js-file-line">    <span class="pl-v">this</span>.tilesets.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4574" class="blob-num js-line-number" data-line-number="4574"></td>
        <td id="LC4574" class="blob-code js-file-line">    <span class="pl-v">this</span>.tilesets <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4575" class="blob-num js-line-number" data-line-number="4575"></td>
        <td id="LC4575" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4576" class="blob-num js-line-number" data-line-number="4576"></td>
        <td id="LC4576" class="blob-code js-file-line">    <span class="pl-v">this</span>.objects.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4577" class="blob-num js-line-number" data-line-number="4577"></td>
        <td id="LC4577" class="blob-code js-file-line">    <span class="pl-v">this</span>.objects <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4578" class="blob-num js-line-number" data-line-number="4578"></td>
        <td id="LC4578" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4579" class="blob-num js-line-number" data-line-number="4579"></td>
        <td id="LC4579" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">images</span>.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4580" class="blob-num js-line-number" data-line-number="4580"></td>
        <td id="LC4580" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">images</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4581" class="blob-num js-line-number" data-line-number="4581"></td>
        <td id="LC4581" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4582" class="blob-num js-line-number" data-line-number="4582"></td>
        <td id="LC4582" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideIndexes.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4583" class="blob-num js-line-number" data-line-number="4583"></td>
        <td id="LC4583" class="blob-code js-file-line">    <span class="pl-v">this</span>.collideIndexes <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4584" class="blob-num js-line-number" data-line-number="4584"></td>
        <td id="LC4584" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4585" class="blob-num js-line-number" data-line-number="4585"></td>
        <td id="LC4585" class="blob-code js-file-line">    <span class="pl-v">this</span>.debugMap.<span class="pl-sc">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4586" class="blob-num js-line-number" data-line-number="4586"></td>
        <td id="LC4586" class="blob-code js-file-line">    <span class="pl-v">this</span>.debugMap <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4587" class="blob-num js-line-number" data-line-number="4587"></td>
        <td id="LC4587" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4588" class="blob-num js-line-number" data-line-number="4588"></td>
        <td id="LC4588" class="blob-code js-file-line">    <span class="pl-v">this</span>.currentLayer <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4589" class="blob-num js-line-number" data-line-number="4589"></td>
        <td id="LC4589" class="blob-code js-file-line">    <span class="pl-v">this</span>.preventingRecalculate <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4590" class="blob-num js-line-number" data-line-number="4590"></td>
        <td id="LC4590" class="blob-code js-file-line">    <span class="pl-v">this</span>.needToRecalculate <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4591" class="blob-num js-line-number" data-line-number="4591"></td>
        <td id="LC4591" class="blob-code js-file-line">    <span class="pl-v">this</span>._camScaleX <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4592" class="blob-num js-line-number" data-line-number="4592"></td>
        <td id="LC4592" class="blob-code js-file-line">    <span class="pl-v">this</span>._camScaleY <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4593" class="blob-num js-line-number" data-line-number="4593"></td>
        <td id="LC4593" class="blob-code js-file-line">    <span class="pl-v">this</span>.dirty <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4594" class="blob-num js-line-number" data-line-number="4594"></td>
        <td id="LC4594" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4595" class="blob-num js-line-number" data-line-number="4595"></td>
        <td id="LC4595" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4596" class="blob-num js-line-number" data-line-number="4596"></td>
        <td id="LC4596" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4597" class="blob-num js-line-number" data-line-number="4597"></td>
        <td id="LC4597" class="blob-code js-file-line"><span class="pl-c">* @name Phaser.Tilemap#layer</span></td>
      </tr>
      <tr>
        <td id="L4598" class="blob-num js-line-number" data-line-number="4598"></td>
        <td id="LC4598" class="blob-code js-file-line"><span class="pl-c">* @property {number|string|Phaser.TilemapLayer} layer - The current layer object.</span></td>
      </tr>
      <tr>
        <td id="L4599" class="blob-num js-line-number" data-line-number="4599"></td>
        <td id="LC4599" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L4600" class="blob-num js-line-number" data-line-number="4600"></td>
        <td id="LC4600" class="blob-code js-file-line"><span class="pl-s3">Object</span>.defineProperty(Tilemap.<span class="pl-sc">prototype</span>, <span class="pl-s1"><span class="pl-pds">&#39;</span>layer<span class="pl-pds">&#39;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L4601" class="blob-num js-line-number" data-line-number="4601"></td>
        <td id="LC4601" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4602" class="blob-num js-line-number" data-line-number="4602"></td>
        <td id="LC4602" class="blob-code js-file-line">    <span class="pl-en">get</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4603" class="blob-num js-line-number" data-line-number="4603"></td>
        <td id="LC4603" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4604" class="blob-num js-line-number" data-line-number="4604"></td>
        <td id="LC4604" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">layers</span>[<span class="pl-v">this</span>.currentLayer];</td>
      </tr>
      <tr>
        <td id="L4605" class="blob-num js-line-number" data-line-number="4605"></td>
        <td id="LC4605" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4606" class="blob-num js-line-number" data-line-number="4606"></td>
        <td id="LC4606" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4607" class="blob-num js-line-number" data-line-number="4607"></td>
        <td id="LC4607" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4608" class="blob-num js-line-number" data-line-number="4608"></td>
        <td id="LC4608" class="blob-code js-file-line">    <span class="pl-en">set</span>: <span class="pl-st">function</span> (<span class="pl-vpf">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4609" class="blob-num js-line-number" data-line-number="4609"></td>
        <td id="LC4609" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4610" class="blob-num js-line-number" data-line-number="4610"></td>
        <td id="LC4610" class="blob-code js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-v">this</span>.currentLayer)</td>
      </tr>
      <tr>
        <td id="L4611" class="blob-num js-line-number" data-line-number="4611"></td>
        <td id="LC4611" class="blob-code js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L4612" class="blob-num js-line-number" data-line-number="4612"></td>
        <td id="LC4612" class="blob-code js-file-line">            <span class="pl-v">this</span>.setLayer(value);</td>
      </tr>
      <tr>
        <td id="L4613" class="blob-num js-line-number" data-line-number="4613"></td>
        <td id="LC4613" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4614" class="blob-num js-line-number" data-line-number="4614"></td>
        <td id="LC4614" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4615" class="blob-num js-line-number" data-line-number="4615"></td>
        <td id="LC4615" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4616" class="blob-num js-line-number" data-line-number="4616"></td>
        <td id="LC4616" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4617" class="blob-num js-line-number" data-line-number="4617"></td>
        <td id="LC4617" class="blob-code js-file-line">});</td>
      </tr>
      <tr>
        <td id="L4618" class="blob-num js-line-number" data-line-number="4618"></td>
        <td id="LC4618" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4619" class="blob-num js-line-number" data-line-number="4619"></td>
        <td id="LC4619" class="blob-code js-file-line"><span class="pl-k">for</span> (<span class="pl-s">var</span> key <span class="pl-k">in</span> C) {</td>
      </tr>
      <tr>
        <td id="L4620" class="blob-num js-line-number" data-line-number="4620"></td>
        <td id="LC4620" class="blob-code js-file-line">    Tilemap[key] <span class="pl-k">=</span> C[key];</td>
      </tr>
      <tr>
        <td id="L4621" class="blob-num js-line-number" data-line-number="4621"></td>
        <td id="LC4621" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4622" class="blob-num js-line-number" data-line-number="4622"></td>
        <td id="LC4622" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4623" class="blob-num js-line-number" data-line-number="4623"></td>
        <td id="LC4623" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>../constants<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">10</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>../utils<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./Objectlayer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">12</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./Tile<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">13</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./Tilelayer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./TilemapParser<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">16</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>./Tileset<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">17</span>}],<span class="pl-c1">16</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L4624" class="blob-num js-line-number" data-line-number="4624"></td>
        <td id="LC4624" class="blob-code js-file-line"><span class="pl-c">/* jshint maxlen:200 */</span></td>
      </tr>
      <tr>
        <td id="L4625" class="blob-num js-line-number" data-line-number="4625"></td>
        <td id="LC4625" class="blob-code js-file-line"><span class="pl-s">var</span> utils <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../utils<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4626" class="blob-num js-line-number" data-line-number="4626"></td>
        <td id="LC4626" class="blob-code js-file-line">    C <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../constants<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4627" class="blob-num js-line-number" data-line-number="4627"></td>
        <td id="LC4627" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4628" class="blob-num js-line-number" data-line-number="4628"></td>
        <td id="LC4628" class="blob-code js-file-line"><span class="pl-s">var</span> TilemapParser <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4629" class="blob-num js-line-number" data-line-number="4629"></td>
        <td id="LC4629" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4630" class="blob-num js-line-number" data-line-number="4630"></td>
        <td id="LC4630" class="blob-code js-file-line"><span class="pl-c">     * Parse tilemap data from the cache and creates a Tilemap object.</span></td>
      </tr>
      <tr>
        <td id="L4631" class="blob-num js-line-number" data-line-number="4631"></td>
        <td id="LC4631" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4632" class="blob-num js-line-number" data-line-number="4632"></td>
        <td id="LC4632" class="blob-code js-file-line"><span class="pl-c">     * @method parse</span></td>
      </tr>
      <tr>
        <td id="L4633" class="blob-num js-line-number" data-line-number="4633"></td>
        <td id="LC4633" class="blob-code js-file-line"><span class="pl-c">     * @param {Phaser.Game} game - Game reference to the currently running game.</span></td>
      </tr>
      <tr>
        <td id="L4634" class="blob-num js-line-number" data-line-number="4634"></td>
        <td id="LC4634" class="blob-code js-file-line"><span class="pl-c">     * @param {string} key - The key of the tilemap in the Cache.</span></td>
      </tr>
      <tr>
        <td id="L4635" class="blob-num js-line-number" data-line-number="4635"></td>
        <td id="LC4635" class="blob-code js-file-line"><span class="pl-c">     * @param {number} [tileWidth=32] - The pixel width of a single map tile. If using CSV data you must</span></td>
      </tr>
      <tr>
        <td id="L4636" class="blob-num js-line-number" data-line-number="4636"></td>
        <td id="LC4636" class="blob-code js-file-line"><span class="pl-c">     *      specify this. Not required if using Tiled map data.</span></td>
      </tr>
      <tr>
        <td id="L4637" class="blob-num js-line-number" data-line-number="4637"></td>
        <td id="LC4637" class="blob-code js-file-line"><span class="pl-c">     * @param {number} [tileHeight=32] - The pixel height of a single map tile. If using CSV data you must</span></td>
      </tr>
      <tr>
        <td id="L4638" class="blob-num js-line-number" data-line-number="4638"></td>
        <td id="LC4638" class="blob-code js-file-line"><span class="pl-c">     *      specify this. Not required if using Tiled map data.</span></td>
      </tr>
      <tr>
        <td id="L4639" class="blob-num js-line-number" data-line-number="4639"></td>
        <td id="LC4639" class="blob-code js-file-line"><span class="pl-c">     * @param {number} [width=10] - The width of the map in tiles. If this map is created from Tiled or</span></td>
      </tr>
      <tr>
        <td id="L4640" class="blob-num js-line-number" data-line-number="4640"></td>
        <td id="LC4640" class="blob-code js-file-line"><span class="pl-c">     *      CSV data you don&#39;t need to specify this.</span></td>
      </tr>
      <tr>
        <td id="L4641" class="blob-num js-line-number" data-line-number="4641"></td>
        <td id="LC4641" class="blob-code js-file-line"><span class="pl-c">     * @param {number} [height=10] - The height of the map in tiles. If this map is created from Tiled or</span></td>
      </tr>
      <tr>
        <td id="L4642" class="blob-num js-line-number" data-line-number="4642"></td>
        <td id="LC4642" class="blob-code js-file-line"><span class="pl-c">     *      CSV data you don&#39;t need to specify this.</span></td>
      </tr>
      <tr>
        <td id="L4643" class="blob-num js-line-number" data-line-number="4643"></td>
        <td id="LC4643" class="blob-code js-file-line"><span class="pl-c">     * @return {object} The parsed map object.</span></td>
      </tr>
      <tr>
        <td id="L4644" class="blob-num js-line-number" data-line-number="4644"></td>
        <td id="LC4644" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4645" class="blob-num js-line-number" data-line-number="4645"></td>
        <td id="LC4645" class="blob-code js-file-line">    <span class="pl-en">parse</span>: <span class="pl-st">function</span> (<span class="pl-vpf">game</span>, <span class="pl-vpf">key</span>, <span class="pl-vpf">tileWidth</span>, <span class="pl-vpf">tileHeight</span>, <span class="pl-vpf">width</span>, <span class="pl-vpf">height</span>) {</td>
      </tr>
      <tr>
        <td id="L4646" class="blob-num js-line-number" data-line-number="4646"></td>
        <td id="LC4646" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> tileWidth <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { tileWidth <span class="pl-k">=</span> <span class="pl-c1">32</span>; }</td>
      </tr>
      <tr>
        <td id="L4647" class="blob-num js-line-number" data-line-number="4647"></td>
        <td id="LC4647" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> tileHeight <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { tileHeight <span class="pl-k">=</span> <span class="pl-c1">32</span>; }</td>
      </tr>
      <tr>
        <td id="L4648" class="blob-num js-line-number" data-line-number="4648"></td>
        <td id="LC4648" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> width <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { width <span class="pl-k">=</span> <span class="pl-c1">10</span>; }</td>
      </tr>
      <tr>
        <td id="L4649" class="blob-num js-line-number" data-line-number="4649"></td>
        <td id="LC4649" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> height <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) { height <span class="pl-k">=</span> <span class="pl-c1">10</span>; }</td>
      </tr>
      <tr>
        <td id="L4650" class="blob-num js-line-number" data-line-number="4650"></td>
        <td id="LC4650" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4651" class="blob-num js-line-number" data-line-number="4651"></td>
        <td id="LC4651" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> key <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4652" class="blob-num js-line-number" data-line-number="4652"></td>
        <td id="LC4652" class="blob-code js-file-line">            <span class="pl-k">return</span> <span class="pl-v">this</span>.getEmptyData();</td>
      </tr>
      <tr>
        <td id="L4653" class="blob-num js-line-number" data-line-number="4653"></td>
        <td id="LC4653" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4654" class="blob-num js-line-number" data-line-number="4654"></td>
        <td id="LC4654" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4655" class="blob-num js-line-number" data-line-number="4655"></td>
        <td id="LC4655" class="blob-code js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>key) {</td>
      </tr>
      <tr>
        <td id="L4656" class="blob-num js-line-number" data-line-number="4656"></td>
        <td id="LC4656" class="blob-code js-file-line">            <span class="pl-k">return</span> <span class="pl-v">this</span>.getEmptyData(tileWidth, tileHeight, width, height);</td>
      </tr>
      <tr>
        <td id="L4657" class="blob-num js-line-number" data-line-number="4657"></td>
        <td id="LC4657" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4658" class="blob-num js-line-number" data-line-number="4658"></td>
        <td id="LC4658" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4659" class="blob-num js-line-number" data-line-number="4659"></td>
        <td id="LC4659" class="blob-code js-file-line">        <span class="pl-s">var</span> map <span class="pl-k">=</span> game.cache.getTilemapData(utils.cacheKey(key, <span class="pl-s1"><span class="pl-pds">&#39;</span>tiledmap<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L4660" class="blob-num js-line-number" data-line-number="4660"></td>
        <td id="LC4660" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4661" class="blob-num js-line-number" data-line-number="4661"></td>
        <td id="LC4661" class="blob-code js-file-line">        <span class="pl-k">if</span> (map) {</td>
      </tr>
      <tr>
        <td id="L4662" class="blob-num js-line-number" data-line-number="4662"></td>
        <td id="LC4662" class="blob-code js-file-line">            <span class="pl-k">if</span> (map.format <span class="pl-k">===</span> C.CSV) {</td>
      </tr>
      <tr>
        <td id="L4663" class="blob-num js-line-number" data-line-number="4663"></td>
        <td id="LC4663" class="blob-code js-file-line">                <span class="pl-k">return</span> <span class="pl-v">this</span>.parseCSV(key, map.<span class="pl-sc">data</span>, tileWidth, tileHeight);</td>
      </tr>
      <tr>
        <td id="L4664" class="blob-num js-line-number" data-line-number="4664"></td>
        <td id="LC4664" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4665" class="blob-num js-line-number" data-line-number="4665"></td>
        <td id="LC4665" class="blob-code js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> (map.format <span class="pl-k">===</span> C.TILED_XML) {</td>
      </tr>
      <tr>
        <td id="L4666" class="blob-num js-line-number" data-line-number="4666"></td>
        <td id="LC4666" class="blob-code js-file-line">                <span class="pl-k">return</span> <span class="pl-v">this</span>.parseTiledXML(map.<span class="pl-sc">data</span>);</td>
      </tr>
      <tr>
        <td id="L4667" class="blob-num js-line-number" data-line-number="4667"></td>
        <td id="LC4667" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4668" class="blob-num js-line-number" data-line-number="4668"></td>
        <td id="LC4668" class="blob-code js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span>map.format <span class="pl-k">||</span> map.format <span class="pl-k">===</span> C.TILED_JSON) {</td>
      </tr>
      <tr>
        <td id="L4669" class="blob-num js-line-number" data-line-number="4669"></td>
        <td id="LC4669" class="blob-code js-file-line">                <span class="pl-k">return</span> <span class="pl-v">this</span>.parseTiledJSON(map.<span class="pl-sc">data</span>);</td>
      </tr>
      <tr>
        <td id="L4670" class="blob-num js-line-number" data-line-number="4670"></td>
        <td id="LC4670" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4671" class="blob-num js-line-number" data-line-number="4671"></td>
        <td id="LC4671" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4672" class="blob-num js-line-number" data-line-number="4672"></td>
        <td id="LC4672" class="blob-code js-file-line">        <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4673" class="blob-num js-line-number" data-line-number="4673"></td>
        <td id="LC4673" class="blob-code js-file-line">            <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Phaser.TilemapParser.parse - No map data found for key <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> key);</td>
      </tr>
      <tr>
        <td id="L4674" class="blob-num js-line-number" data-line-number="4674"></td>
        <td id="LC4674" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4675" class="blob-num js-line-number" data-line-number="4675"></td>
        <td id="LC4675" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4676" class="blob-num js-line-number" data-line-number="4676"></td>
        <td id="LC4676" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4677" class="blob-num js-line-number" data-line-number="4677"></td>
        <td id="LC4677" class="blob-code js-file-line">    parseCSV<span class="pl-k">:</span> Phaser.TilemapParser.parseCSV,</td>
      </tr>
      <tr>
        <td id="L4678" class="blob-num js-line-number" data-line-number="4678"></td>
        <td id="LC4678" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4679" class="blob-num js-line-number" data-line-number="4679"></td>
        <td id="LC4679" class="blob-code js-file-line">    <span class="pl-en">getEmptyData</span>: <span class="pl-st">function</span> () {</td>
      </tr>
      <tr>
        <td id="L4680" class="blob-num js-line-number" data-line-number="4680"></td>
        <td id="LC4680" class="blob-code js-file-line">        <span class="pl-s">var</span> map <span class="pl-k">=</span> Phaser.TilemapParser.getEmptyData.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4681" class="blob-num js-line-number" data-line-number="4681"></td>
        <td id="LC4681" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4682" class="blob-num js-line-number" data-line-number="4682"></td>
        <td id="LC4682" class="blob-code js-file-line">        map.tilewidth <span class="pl-k">=</span> map.tileWidth;</td>
      </tr>
      <tr>
        <td id="L4683" class="blob-num js-line-number" data-line-number="4683"></td>
        <td id="LC4683" class="blob-code js-file-line">        map.tileheight <span class="pl-k">=</span> map.tileHeight;</td>
      </tr>
      <tr>
        <td id="L4684" class="blob-num js-line-number" data-line-number="4684"></td>
        <td id="LC4684" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4685" class="blob-num js-line-number" data-line-number="4685"></td>
        <td id="LC4685" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4686" class="blob-num js-line-number" data-line-number="4686"></td>
        <td id="LC4686" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4687" class="blob-num js-line-number" data-line-number="4687"></td>
        <td id="LC4687" class="blob-code js-file-line"><span class="pl-c">     * Parses a Tiled JSON file into valid map data.</span></td>
      </tr>
      <tr>
        <td id="L4688" class="blob-num js-line-number" data-line-number="4688"></td>
        <td id="LC4688" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4689" class="blob-num js-line-number" data-line-number="4689"></td>
        <td id="LC4689" class="blob-code js-file-line"><span class="pl-c">     * @method parseTiledJSON</span></td>
      </tr>
      <tr>
        <td id="L4690" class="blob-num js-line-number" data-line-number="4690"></td>
        <td id="LC4690" class="blob-code js-file-line"><span class="pl-c">     * @param {object} data - The JSON map data.</span></td>
      </tr>
      <tr>
        <td id="L4691" class="blob-num js-line-number" data-line-number="4691"></td>
        <td id="LC4691" class="blob-code js-file-line"><span class="pl-c">     * @return {object} Generated and parsed map data.</span></td>
      </tr>
      <tr>
        <td id="L4692" class="blob-num js-line-number" data-line-number="4692"></td>
        <td id="LC4692" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4693" class="blob-num js-line-number" data-line-number="4693"></td>
        <td id="LC4693" class="blob-code js-file-line">    <span class="pl-en">parseTiledJSON</span>: <span class="pl-st">function</span> (<span class="pl-vpf">data</span>) {</td>
      </tr>
      <tr>
        <td id="L4694" class="blob-num js-line-number" data-line-number="4694"></td>
        <td id="LC4694" class="blob-code js-file-line">        <span class="pl-k">if</span> (data.orientation <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>orthogonal<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4695" class="blob-num js-line-number" data-line-number="4695"></td>
        <td id="LC4695" class="blob-code js-file-line">            <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>TilemapParser.parseTiledJSON: Only orthogonal map types are supported in this version of Phaser<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4696" class="blob-num js-line-number" data-line-number="4696"></td>
        <td id="LC4696" class="blob-code js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4697" class="blob-num js-line-number" data-line-number="4697"></td>
        <td id="LC4697" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4698" class="blob-num js-line-number" data-line-number="4698"></td>
        <td id="LC4698" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4699" class="blob-num js-line-number" data-line-number="4699"></td>
        <td id="LC4699" class="blob-code js-file-line">        data.format <span class="pl-k">=</span> Phaser.TILED_JSON;</td>
      </tr>
      <tr>
        <td id="L4700" class="blob-num js-line-number" data-line-number="4700"></td>
        <td id="LC4700" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4701" class="blob-num js-line-number" data-line-number="4701"></td>
        <td id="LC4701" class="blob-code js-file-line">        <span class="pl-k">return</span> data;</td>
      </tr>
      <tr>
        <td id="L4702" class="blob-num js-line-number" data-line-number="4702"></td>
        <td id="LC4702" class="blob-code js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4703" class="blob-num js-line-number" data-line-number="4703"></td>
        <td id="LC4703" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4704" class="blob-num js-line-number" data-line-number="4704"></td>
        <td id="LC4704" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4705" class="blob-num js-line-number" data-line-number="4705"></td>
        <td id="LC4705" class="blob-code js-file-line"><span class="pl-c">     * Parses a Tiled JSON file into valid map data.</span></td>
      </tr>
      <tr>
        <td id="L4706" class="blob-num js-line-number" data-line-number="4706"></td>
        <td id="LC4706" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4707" class="blob-num js-line-number" data-line-number="4707"></td>
        <td id="LC4707" class="blob-code js-file-line"><span class="pl-c">     * @method parseTiledXML</span></td>
      </tr>
      <tr>
        <td id="L4708" class="blob-num js-line-number" data-line-number="4708"></td>
        <td id="LC4708" class="blob-code js-file-line"><span class="pl-c">     * @param {object} data - The JSON map data.</span></td>
      </tr>
      <tr>
        <td id="L4709" class="blob-num js-line-number" data-line-number="4709"></td>
        <td id="LC4709" class="blob-code js-file-line"><span class="pl-c">     * @return {object} Generated and parsed map data.</span></td>
      </tr>
      <tr>
        <td id="L4710" class="blob-num js-line-number" data-line-number="4710"></td>
        <td id="LC4710" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4711" class="blob-num js-line-number" data-line-number="4711"></td>
        <td id="LC4711" class="blob-code js-file-line">    <span class="pl-en">parseTiledXML</span>: <span class="pl-st">function</span> (<span class="pl-vpf">data</span>) {</td>
      </tr>
      <tr>
        <td id="L4712" class="blob-num js-line-number" data-line-number="4712"></td>
        <td id="LC4712" class="blob-code js-file-line">        <span class="pl-s">var</span> mapElement <span class="pl-k">=</span> data.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>map<span class="pl-pds">&#39;</span></span>)[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4713" class="blob-num js-line-number" data-line-number="4713"></td>
        <td id="LC4713" class="blob-code js-file-line">            map <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4714" class="blob-num js-line-number" data-line-number="4714"></td>
        <td id="LC4714" class="blob-code js-file-line">                version<span class="pl-k">:</span> <span class="pl-s3">parseFloat</span>(mapElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>version<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4715" class="blob-num js-line-number" data-line-number="4715"></td>
        <td id="LC4715" class="blob-code js-file-line">                width<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(mapElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4716" class="blob-num js-line-number" data-line-number="4716"></td>
        <td id="LC4716" class="blob-code js-file-line">                height<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(mapElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4717" class="blob-num js-line-number" data-line-number="4717"></td>
        <td id="LC4717" class="blob-code js-file-line">                tilewidth<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(mapElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tilewidth<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4718" class="blob-num js-line-number" data-line-number="4718"></td>
        <td id="LC4718" class="blob-code js-file-line">                tileheight<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(mapElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tileheight<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4719" class="blob-num js-line-number" data-line-number="4719"></td>
        <td id="LC4719" class="blob-code js-file-line">                orientation<span class="pl-k">:</span> mapElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>orientation<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4720" class="blob-num js-line-number" data-line-number="4720"></td>
        <td id="LC4720" class="blob-code js-file-line">                format<span class="pl-k">:</span> Phaser.Tilemap.TILED_XML,</td>
      </tr>
      <tr>
        <td id="L4721" class="blob-num js-line-number" data-line-number="4721"></td>
        <td id="LC4721" class="blob-code js-file-line">                properties<span class="pl-k">:</span> {},</td>
      </tr>
      <tr>
        <td id="L4722" class="blob-num js-line-number" data-line-number="4722"></td>
        <td id="LC4722" class="blob-code js-file-line">                layers<span class="pl-k">:</span> [],</td>
      </tr>
      <tr>
        <td id="L4723" class="blob-num js-line-number" data-line-number="4723"></td>
        <td id="LC4723" class="blob-code js-file-line">                tilesets<span class="pl-k">:</span> []</td>
      </tr>
      <tr>
        <td id="L4724" class="blob-num js-line-number" data-line-number="4724"></td>
        <td id="LC4724" class="blob-code js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L4725" class="blob-num js-line-number" data-line-number="4725"></td>
        <td id="LC4725" class="blob-code js-file-line">            i <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4726" class="blob-num js-line-number" data-line-number="4726"></td>
        <td id="LC4726" class="blob-code js-file-line">            il <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4727" class="blob-num js-line-number" data-line-number="4727"></td>
        <td id="LC4727" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4728" class="blob-num js-line-number" data-line-number="4728"></td>
        <td id="LC4728" class="blob-code js-file-line">        <span class="pl-c">//add the properties</span></td>
      </tr>
      <tr>
        <td id="L4729" class="blob-num js-line-number" data-line-number="4729"></td>
        <td id="LC4729" class="blob-code js-file-line">        <span class="pl-s">var</span> mapprops <span class="pl-k">=</span> mapElement.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>properties<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4730" class="blob-num js-line-number" data-line-number="4730"></td>
        <td id="LC4730" class="blob-code js-file-line">        <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> mapprops.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4731" class="blob-num js-line-number" data-line-number="4731"></td>
        <td id="LC4731" class="blob-code js-file-line">            <span class="pl-k">if</span>(mapprops[i].<span class="pl-sc">parentNode</span> <span class="pl-k">===</span> mapElement) {</td>
      </tr>
      <tr>
        <td id="L4732" class="blob-num js-line-number" data-line-number="4732"></td>
        <td id="LC4732" class="blob-code js-file-line">                mapprops <span class="pl-k">=</span> mapprops[i].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>property<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4733" class="blob-num js-line-number" data-line-number="4733"></td>
        <td id="LC4733" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4734" class="blob-num js-line-number" data-line-number="4734"></td>
        <td id="LC4734" class="blob-code js-file-line">                <span class="pl-k">for</span>(<span class="pl-s">var</span> mp <span class="pl-k">=</span> <span class="pl-c1">0</span>; mp <span class="pl-k">&lt;</span> mapprops.<span class="pl-sc">length</span>; <span class="pl-k">++</span>mp) {</td>
      </tr>
      <tr>
        <td id="L4735" class="blob-num js-line-number" data-line-number="4735"></td>
        <td id="LC4735" class="blob-code js-file-line">                    map.properties[mapprops[mp].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>] <span class="pl-k">=</span> mapprops[mp].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4736" class="blob-num js-line-number" data-line-number="4736"></td>
        <td id="LC4736" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4737" class="blob-num js-line-number" data-line-number="4737"></td>
        <td id="LC4737" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4738" class="blob-num js-line-number" data-line-number="4738"></td>
        <td id="LC4738" class="blob-code js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4739" class="blob-num js-line-number" data-line-number="4739"></td>
        <td id="LC4739" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4740" class="blob-num js-line-number" data-line-number="4740"></td>
        <td id="LC4740" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4741" class="blob-num js-line-number" data-line-number="4741"></td>
        <td id="LC4741" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4742" class="blob-num js-line-number" data-line-number="4742"></td>
        <td id="LC4742" class="blob-code js-file-line">        <span class="pl-c">//add the layers</span></td>
      </tr>
      <tr>
        <td id="L4743" class="blob-num js-line-number" data-line-number="4743"></td>
        <td id="LC4743" class="blob-code js-file-line">        <span class="pl-s">var</span> layers <span class="pl-k">=</span> mapElement.<span class="pl-sc">childNodes</span>;<span class="pl-c">//getElementsByTagName(&#39;layer&#39;);</span></td>
      </tr>
      <tr>
        <td id="L4744" class="blob-num js-line-number" data-line-number="4744"></td>
        <td id="LC4744" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4745" class="blob-num js-line-number" data-line-number="4745"></td>
        <td id="LC4745" class="blob-code js-file-line">        <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> layers.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4746" class="blob-num js-line-number" data-line-number="4746"></td>
        <td id="LC4746" class="blob-code js-file-line">            <span class="pl-s">var</span> node <span class="pl-k">=</span> layers[i];</td>
      </tr>
      <tr>
        <td id="L4747" class="blob-num js-line-number" data-line-number="4747"></td>
        <td id="LC4747" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4748" class="blob-num js-line-number" data-line-number="4748"></td>
        <td id="LC4748" class="blob-code js-file-line">            <span class="pl-k">if</span>(node.<span class="pl-sc">nodeName</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>layer<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4749" class="blob-num js-line-number" data-line-number="4749"></td>
        <td id="LC4749" class="blob-code js-file-line">                <span class="pl-s">var</span> lyr <span class="pl-k">=</span> node,</td>
      </tr>
      <tr>
        <td id="L4750" class="blob-num js-line-number" data-line-number="4750"></td>
        <td id="LC4750" class="blob-code js-file-line">                    layer <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4751" class="blob-num js-line-number" data-line-number="4751"></td>
        <td id="LC4751" class="blob-code js-file-line">                        type<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>tilelayer<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4752" class="blob-num js-line-number" data-line-number="4752"></td>
        <td id="LC4752" class="blob-code js-file-line">                        name<span class="pl-k">:</span> lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4753" class="blob-num js-line-number" data-line-number="4753"></td>
        <td id="LC4753" class="blob-code js-file-line">                        width<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">||</span> map.<span class="pl-sc">width</span>,</td>
      </tr>
      <tr>
        <td id="L4754" class="blob-num js-line-number" data-line-number="4754"></td>
        <td id="LC4754" class="blob-code js-file-line">                        height<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">||</span> map.<span class="pl-sc">height</span>,</td>
      </tr>
      <tr>
        <td id="L4755" class="blob-num js-line-number" data-line-number="4755"></td>
        <td id="LC4755" class="blob-code js-file-line">                        visible<span class="pl-k">:</span> lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4756" class="blob-num js-line-number" data-line-number="4756"></td>
        <td id="LC4756" class="blob-code js-file-line">                        opacity<span class="pl-k">:</span> lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>opacity<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseFloat</span>(lyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>opacity<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L4757" class="blob-num js-line-number" data-line-number="4757"></td>
        <td id="LC4757" class="blob-code js-file-line">                        encoding<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>base64<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4758" class="blob-num js-line-number" data-line-number="4758"></td>
        <td id="LC4758" class="blob-code js-file-line">                        compression<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4759" class="blob-num js-line-number" data-line-number="4759"></td>
        <td id="LC4759" class="blob-code js-file-line">                        rawData<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4760" class="blob-num js-line-number" data-line-number="4760"></td>
        <td id="LC4760" class="blob-code js-file-line">                        data<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4761" class="blob-num js-line-number" data-line-number="4761"></td>
        <td id="LC4761" class="blob-code js-file-line">                        x<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4762" class="blob-num js-line-number" data-line-number="4762"></td>
        <td id="LC4762" class="blob-code js-file-line">                        y<span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L4763" class="blob-num js-line-number" data-line-number="4763"></td>
        <td id="LC4763" class="blob-code js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L4764" class="blob-num js-line-number" data-line-number="4764"></td>
        <td id="LC4764" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4765" class="blob-num js-line-number" data-line-number="4765"></td>
        <td id="LC4765" class="blob-code js-file-line">                <span class="pl-c">//set encoding</span></td>
      </tr>
      <tr>
        <td id="L4766" class="blob-num js-line-number" data-line-number="4766"></td>
        <td id="LC4766" class="blob-code js-file-line">                <span class="pl-s">var</span> dataElement <span class="pl-k">=</span> lyr.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>data<span class="pl-pds">&#39;</span></span>)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4767" class="blob-num js-line-number" data-line-number="4767"></td>
        <td id="LC4767" class="blob-code js-file-line">                layer.<span class="pl-sc">encoding</span> <span class="pl-k">=</span> dataElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>encoding<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4768" class="blob-num js-line-number" data-line-number="4768"></td>
        <td id="LC4768" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4769" class="blob-num js-line-number" data-line-number="4769"></td>
        <td id="LC4769" class="blob-code js-file-line">                <span class="pl-c">//set data from the text node of the element</span></td>
      </tr>
      <tr>
        <td id="L4770" class="blob-num js-line-number" data-line-number="4770"></td>
        <td id="LC4770" class="blob-code js-file-line">                layer.rawData <span class="pl-k">=</span> dataElement.<span class="pl-sc">firstChild</span>.<span class="pl-sc">nodeValue</span>.trim();</td>
      </tr>
      <tr>
        <td id="L4771" class="blob-num js-line-number" data-line-number="4771"></td>
        <td id="LC4771" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4772" class="blob-num js-line-number" data-line-number="4772"></td>
        <td id="LC4772" class="blob-code js-file-line">                <span class="pl-c">//set compression</span></td>
      </tr>
      <tr>
        <td id="L4773" class="blob-num js-line-number" data-line-number="4773"></td>
        <td id="LC4773" class="blob-code js-file-line">                <span class="pl-k">if</span>(dataElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>compression<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L4774" class="blob-num js-line-number" data-line-number="4774"></td>
        <td id="LC4774" class="blob-code js-file-line">                    layer.compression <span class="pl-k">=</span> dataElement.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>compression<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4775" class="blob-num js-line-number" data-line-number="4775"></td>
        <td id="LC4775" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4776" class="blob-num js-line-number" data-line-number="4776"></td>
        <td id="LC4776" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4777" class="blob-num js-line-number" data-line-number="4777"></td>
        <td id="LC4777" class="blob-code js-file-line">                <span class="pl-s">var</span> decomp <span class="pl-k">=</span> utils.decompressBase64Data(layer.rawData, layer.<span class="pl-sc">encoding</span>, layer.compression);</td>
      </tr>
      <tr>
        <td id="L4778" class="blob-num js-line-number" data-line-number="4778"></td>
        <td id="LC4778" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4779" class="blob-num js-line-number" data-line-number="4779"></td>
        <td id="LC4779" class="blob-code js-file-line">                layer.<span class="pl-sc">data</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(decomp.buffer, <span class="pl-c1">0</span>, decomp.<span class="pl-sc">length</span> / <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L4780" class="blob-num js-line-number" data-line-number="4780"></td>
        <td id="LC4780" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4781" class="blob-num js-line-number" data-line-number="4781"></td>
        <td id="LC4781" class="blob-code js-file-line">                map.<span class="pl-sc">layers</span>.<span class="pl-s3">push</span>(layer);</td>
      </tr>
      <tr>
        <td id="L4782" class="blob-num js-line-number" data-line-number="4782"></td>
        <td id="LC4782" class="blob-code js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span>(node.<span class="pl-sc">nodeName</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>objectgroup<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4783" class="blob-num js-line-number" data-line-number="4783"></td>
        <td id="LC4783" class="blob-code js-file-line">                <span class="pl-s">var</span> grp <span class="pl-k">=</span> node,</td>
      </tr>
      <tr>
        <td id="L4784" class="blob-num js-line-number" data-line-number="4784"></td>
        <td id="LC4784" class="blob-code js-file-line">                    group <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4785" class="blob-num js-line-number" data-line-number="4785"></td>
        <td id="LC4785" class="blob-code js-file-line">                        type<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>objectgroup<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4786" class="blob-num js-line-number" data-line-number="4786"></td>
        <td id="LC4786" class="blob-code js-file-line">                        draworder<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>topdown<span class="pl-pds">&#39;</span></span>, <span class="pl-c">//TODO: support custom draworders</span></td>
      </tr>
      <tr>
        <td id="L4787" class="blob-num js-line-number" data-line-number="4787"></td>
        <td id="LC4787" class="blob-code js-file-line">                        name<span class="pl-k">:</span> grp.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4788" class="blob-num js-line-number" data-line-number="4788"></td>
        <td id="LC4788" class="blob-code js-file-line">                        width<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4789" class="blob-num js-line-number" data-line-number="4789"></td>
        <td id="LC4789" class="blob-code js-file-line">                        height<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4790" class="blob-num js-line-number" data-line-number="4790"></td>
        <td id="LC4790" class="blob-code js-file-line">                        objects<span class="pl-k">:</span> [],</td>
      </tr>
      <tr>
        <td id="L4791" class="blob-num js-line-number" data-line-number="4791"></td>
        <td id="LC4791" class="blob-code js-file-line">                        visible<span class="pl-k">:</span> grp.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> grp.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4792" class="blob-num js-line-number" data-line-number="4792"></td>
        <td id="LC4792" class="blob-code js-file-line">                        opacity<span class="pl-k">:</span> grp.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>opacity<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseFloat</span>(grp.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>opacity<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L4793" class="blob-num js-line-number" data-line-number="4793"></td>
        <td id="LC4793" class="blob-code js-file-line">                        x<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4794" class="blob-num js-line-number" data-line-number="4794"></td>
        <td id="LC4794" class="blob-code js-file-line">                        y<span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L4795" class="blob-num js-line-number" data-line-number="4795"></td>
        <td id="LC4795" class="blob-code js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L4796" class="blob-num js-line-number" data-line-number="4796"></td>
        <td id="LC4796" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4797" class="blob-num js-line-number" data-line-number="4797"></td>
        <td id="LC4797" class="blob-code js-file-line">                <span class="pl-s">var</span> objects <span class="pl-k">=</span> grp.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4798" class="blob-num js-line-number" data-line-number="4798"></td>
        <td id="LC4798" class="blob-code js-file-line">                <span class="pl-k">for</span>(<span class="pl-s">var</span> oj <span class="pl-k">=</span> <span class="pl-c1">0</span>; oj <span class="pl-k">&lt;</span> objects.<span class="pl-sc">length</span>; <span class="pl-k">++</span>oj) {</td>
      </tr>
      <tr>
        <td id="L4799" class="blob-num js-line-number" data-line-number="4799"></td>
        <td id="LC4799" class="blob-code js-file-line">                    <span class="pl-s">var</span> obj <span class="pl-k">=</span> objects[oj],</td>
      </tr>
      <tr>
        <td id="L4800" class="blob-num js-line-number" data-line-number="4800"></td>
        <td id="LC4800" class="blob-code js-file-line">                        object <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4801" class="blob-num js-line-number" data-line-number="4801"></td>
        <td id="LC4801" class="blob-code js-file-line">                            gid<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>gid<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseInt</span>(obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>gid<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L4802" class="blob-num js-line-number" data-line-number="4802"></td>
        <td id="LC4802" class="blob-code js-file-line">                            name<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span> <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4803" class="blob-num js-line-number" data-line-number="4803"></td>
        <td id="LC4803" class="blob-code js-file-line">                            type<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>type<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>type<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span> <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4804" class="blob-num js-line-number" data-line-number="4804"></td>
        <td id="LC4804" class="blob-code js-file-line">                            width<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseFloat</span>(obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4805" class="blob-num js-line-number" data-line-number="4805"></td>
        <td id="LC4805" class="blob-code js-file-line">                            height<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseFloat</span>(obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4806" class="blob-num js-line-number" data-line-number="4806"></td>
        <td id="LC4806" class="blob-code js-file-line">                            rotation<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>rotation<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseFloat</span>(obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>rotation<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4807" class="blob-num js-line-number" data-line-number="4807"></td>
        <td id="LC4807" class="blob-code js-file-line">                            visible<span class="pl-k">:</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4808" class="blob-num js-line-number" data-line-number="4808"></td>
        <td id="LC4808" class="blob-code js-file-line">                            x<span class="pl-k">:</span> <span class="pl-s3">parseFloat</span>(obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4809" class="blob-num js-line-number" data-line-number="4809"></td>
        <td id="LC4809" class="blob-code js-file-line">                            y<span class="pl-k">:</span> <span class="pl-s3">parseFloat</span>(obj.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4810" class="blob-num js-line-number" data-line-number="4810"></td>
        <td id="LC4810" class="blob-code js-file-line">                            properties<span class="pl-k">:</span> {}</td>
      </tr>
      <tr>
        <td id="L4811" class="blob-num js-line-number" data-line-number="4811"></td>
        <td id="LC4811" class="blob-code js-file-line">                        },</td>
      </tr>
      <tr>
        <td id="L4812" class="blob-num js-line-number" data-line-number="4812"></td>
        <td id="LC4812" class="blob-code js-file-line">                        poly;</td>
      </tr>
      <tr>
        <td id="L4813" class="blob-num js-line-number" data-line-number="4813"></td>
        <td id="LC4813" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4814" class="blob-num js-line-number" data-line-number="4814"></td>
        <td id="LC4814" class="blob-code js-file-line">                    <span class="pl-k">if</span>(object.gid <span class="pl-k">===</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4815" class="blob-num js-line-number" data-line-number="4815"></td>
        <td id="LC4815" class="blob-code js-file-line">                        <span class="pl-k">delete</span> object.gid;</td>
      </tr>
      <tr>
        <td id="L4816" class="blob-num js-line-number" data-line-number="4816"></td>
        <td id="LC4816" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4817" class="blob-num js-line-number" data-line-number="4817"></td>
        <td id="LC4817" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4818" class="blob-num js-line-number" data-line-number="4818"></td>
        <td id="LC4818" class="blob-code js-file-line">                    poly <span class="pl-k">=</span> obj.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>polygon<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4819" class="blob-num js-line-number" data-line-number="4819"></td>
        <td id="LC4819" class="blob-code js-file-line">                    <span class="pl-k">if</span> (poly.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4820" class="blob-num js-line-number" data-line-number="4820"></td>
        <td id="LC4820" class="blob-code js-file-line">                        object.polygon <span class="pl-k">=</span> poly[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>points<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>).map(csvToXY);</td>
      </tr>
      <tr>
        <td id="L4821" class="blob-num js-line-number" data-line-number="4821"></td>
        <td id="LC4821" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4822" class="blob-num js-line-number" data-line-number="4822"></td>
        <td id="LC4822" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4823" class="blob-num js-line-number" data-line-number="4823"></td>
        <td id="LC4823" class="blob-code js-file-line">                    poly <span class="pl-k">=</span> obj.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>polyline<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4824" class="blob-num js-line-number" data-line-number="4824"></td>
        <td id="LC4824" class="blob-code js-file-line">                    <span class="pl-k">if</span> (poly.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4825" class="blob-num js-line-number" data-line-number="4825"></td>
        <td id="LC4825" class="blob-code js-file-line">                        object.polyline <span class="pl-k">=</span> poly[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>points<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>).map(csvToXY);</td>
      </tr>
      <tr>
        <td id="L4826" class="blob-num js-line-number" data-line-number="4826"></td>
        <td id="LC4826" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4827" class="blob-num js-line-number" data-line-number="4827"></td>
        <td id="LC4827" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4828" class="blob-num js-line-number" data-line-number="4828"></td>
        <td id="LC4828" class="blob-code js-file-line">                    poly <span class="pl-k">=</span> obj.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>ellipse<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4829" class="blob-num js-line-number" data-line-number="4829"></td>
        <td id="LC4829" class="blob-code js-file-line">                    <span class="pl-k">if</span> (poly.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4830" class="blob-num js-line-number" data-line-number="4830"></td>
        <td id="LC4830" class="blob-code js-file-line">                        object.ellipse <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4831" class="blob-num js-line-number" data-line-number="4831"></td>
        <td id="LC4831" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4832" class="blob-num js-line-number" data-line-number="4832"></td>
        <td id="LC4832" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4833" class="blob-num js-line-number" data-line-number="4833"></td>
        <td id="LC4833" class="blob-code js-file-line">                    <span class="pl-s">var</span> props <span class="pl-k">=</span> obj.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>properties<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4834" class="blob-num js-line-number" data-line-number="4834"></td>
        <td id="LC4834" class="blob-code js-file-line">                    <span class="pl-k">if</span>(props.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4835" class="blob-num js-line-number" data-line-number="4835"></td>
        <td id="LC4835" class="blob-code js-file-line">                        props <span class="pl-k">=</span> props[<span class="pl-c1">0</span>].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>property<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4836" class="blob-num js-line-number" data-line-number="4836"></td>
        <td id="LC4836" class="blob-code js-file-line">                        <span class="pl-k">for</span>(<span class="pl-s">var</span> pr <span class="pl-k">=</span> <span class="pl-c1">0</span>; pr <span class="pl-k">&lt;</span> props.<span class="pl-sc">length</span>; <span class="pl-k">++</span>pr) {</td>
      </tr>
      <tr>
        <td id="L4837" class="blob-num js-line-number" data-line-number="4837"></td>
        <td id="LC4837" class="blob-code js-file-line">                            object.properties[props[pr].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>] <span class="pl-k">=</span> props[pr].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4838" class="blob-num js-line-number" data-line-number="4838"></td>
        <td id="LC4838" class="blob-code js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L4839" class="blob-num js-line-number" data-line-number="4839"></td>
        <td id="LC4839" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4840" class="blob-num js-line-number" data-line-number="4840"></td>
        <td id="LC4840" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4841" class="blob-num js-line-number" data-line-number="4841"></td>
        <td id="LC4841" class="blob-code js-file-line">                    group.objects.<span class="pl-s3">push</span>(object);</td>
      </tr>
      <tr>
        <td id="L4842" class="blob-num js-line-number" data-line-number="4842"></td>
        <td id="LC4842" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4843" class="blob-num js-line-number" data-line-number="4843"></td>
        <td id="LC4843" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4844" class="blob-num js-line-number" data-line-number="4844"></td>
        <td id="LC4844" class="blob-code js-file-line">                map.<span class="pl-sc">layers</span>.<span class="pl-s3">push</span>(group);</td>
      </tr>
      <tr>
        <td id="L4845" class="blob-num js-line-number" data-line-number="4845"></td>
        <td id="LC4845" class="blob-code js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span>(node.<span class="pl-sc">nodeName</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>imagelayer<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4846" class="blob-num js-line-number" data-line-number="4846"></td>
        <td id="LC4846" class="blob-code js-file-line">                <span class="pl-s">var</span> ilyr <span class="pl-k">=</span> node,</td>
      </tr>
      <tr>
        <td id="L4847" class="blob-num js-line-number" data-line-number="4847"></td>
        <td id="LC4847" class="blob-code js-file-line">                    imglayer <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4848" class="blob-num js-line-number" data-line-number="4848"></td>
        <td id="LC4848" class="blob-code js-file-line">                        type<span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>imagelayer<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4849" class="blob-num js-line-number" data-line-number="4849"></td>
        <td id="LC4849" class="blob-code js-file-line">                        image<span class="pl-k">:</span> ilyr.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>image<span class="pl-pds">&#39;</span></span>)[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>source<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4850" class="blob-num js-line-number" data-line-number="4850"></td>
        <td id="LC4850" class="blob-code js-file-line">                        name<span class="pl-k">:</span> ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4851" class="blob-num js-line-number" data-line-number="4851"></td>
        <td id="LC4851" class="blob-code js-file-line">                        width<span class="pl-k">:</span> <span class="pl-c1">0</span>, <span class="pl-c">//always 0 for imagelayers</span></td>
      </tr>
      <tr>
        <td id="L4852" class="blob-num js-line-number" data-line-number="4852"></td>
        <td id="LC4852" class="blob-code js-file-line">                        height<span class="pl-k">:</span> <span class="pl-c1">0</span>, <span class="pl-c">//always 0 for imagelayers</span></td>
      </tr>
      <tr>
        <td id="L4853" class="blob-num js-line-number" data-line-number="4853"></td>
        <td id="LC4853" class="blob-code js-file-line">                        visible<span class="pl-k">:</span> ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>visible<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L4854" class="blob-num js-line-number" data-line-number="4854"></td>
        <td id="LC4854" class="blob-code js-file-line">                        opacity<span class="pl-k">:</span> ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>opacity<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseFloat</span>(ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>opacity<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L4855" class="blob-num js-line-number" data-line-number="4855"></td>
        <td id="LC4855" class="blob-code js-file-line">                        x<span class="pl-k">:</span> ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseInt</span>(ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4856" class="blob-num js-line-number" data-line-number="4856"></td>
        <td id="LC4856" class="blob-code js-file-line">                        y<span class="pl-k">:</span> ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-s3">parseInt</span>(ilyr.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4857" class="blob-num js-line-number" data-line-number="4857"></td>
        <td id="LC4857" class="blob-code js-file-line">                        properties<span class="pl-k">:</span> {}</td>
      </tr>
      <tr>
        <td id="L4858" class="blob-num js-line-number" data-line-number="4858"></td>
        <td id="LC4858" class="blob-code js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L4859" class="blob-num js-line-number" data-line-number="4859"></td>
        <td id="LC4859" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4860" class="blob-num js-line-number" data-line-number="4860"></td>
        <td id="LC4860" class="blob-code js-file-line">                <span class="pl-s">var</span> iprops <span class="pl-k">=</span> ilyr.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>properties<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4861" class="blob-num js-line-number" data-line-number="4861"></td>
        <td id="LC4861" class="blob-code js-file-line">                <span class="pl-k">if</span>(iprops.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4862" class="blob-num js-line-number" data-line-number="4862"></td>
        <td id="LC4862" class="blob-code js-file-line">                    iprops <span class="pl-k">=</span> iprops[<span class="pl-c1">0</span>].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>property<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4863" class="blob-num js-line-number" data-line-number="4863"></td>
        <td id="LC4863" class="blob-code js-file-line">                    <span class="pl-k">for</span>(<span class="pl-s">var</span> ip <span class="pl-k">=</span> <span class="pl-c1">0</span>; ip <span class="pl-k">&lt;</span> iprops.<span class="pl-sc">length</span>; <span class="pl-k">++</span>ip) {</td>
      </tr>
      <tr>
        <td id="L4864" class="blob-num js-line-number" data-line-number="4864"></td>
        <td id="LC4864" class="blob-code js-file-line">                        imglayer.properties[iprops[ip].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>] <span class="pl-k">=</span> iprops[ip].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4865" class="blob-num js-line-number" data-line-number="4865"></td>
        <td id="LC4865" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4866" class="blob-num js-line-number" data-line-number="4866"></td>
        <td id="LC4866" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4867" class="blob-num js-line-number" data-line-number="4867"></td>
        <td id="LC4867" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4868" class="blob-num js-line-number" data-line-number="4868"></td>
        <td id="LC4868" class="blob-code js-file-line">                map.<span class="pl-sc">layers</span>.<span class="pl-s3">push</span>(imglayer);</td>
      </tr>
      <tr>
        <td id="L4869" class="blob-num js-line-number" data-line-number="4869"></td>
        <td id="LC4869" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4870" class="blob-num js-line-number" data-line-number="4870"></td>
        <td id="LC4870" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4871" class="blob-num js-line-number" data-line-number="4871"></td>
        <td id="LC4871" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4872" class="blob-num js-line-number" data-line-number="4872"></td>
        <td id="LC4872" class="blob-code js-file-line">        <span class="pl-c">//add the tilesets</span></td>
      </tr>
      <tr>
        <td id="L4873" class="blob-num js-line-number" data-line-number="4873"></td>
        <td id="LC4873" class="blob-code js-file-line">        <span class="pl-s">var</span> tilesets <span class="pl-k">=</span> mapElement.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tileset<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4874" class="blob-num js-line-number" data-line-number="4874"></td>
        <td id="LC4874" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4875" class="blob-num js-line-number" data-line-number="4875"></td>
        <td id="LC4875" class="blob-code js-file-line">        <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-c1">0</span>, il <span class="pl-k">=</span> tilesets.<span class="pl-sc">length</span>; i <span class="pl-k">&lt;</span> il; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L4876" class="blob-num js-line-number" data-line-number="4876"></td>
        <td id="LC4876" class="blob-code js-file-line">            <span class="pl-s">var</span> tset <span class="pl-k">=</span> tilesets[i],</td>
      </tr>
      <tr>
        <td id="L4877" class="blob-num js-line-number" data-line-number="4877"></td>
        <td id="LC4877" class="blob-code js-file-line">                tiles <span class="pl-k">=</span> tset.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tile<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4878" class="blob-num js-line-number" data-line-number="4878"></td>
        <td id="LC4878" class="blob-code js-file-line">                tileset <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4879" class="blob-num js-line-number" data-line-number="4879"></td>
        <td id="LC4879" class="blob-code js-file-line">                    name<span class="pl-k">:</span> tset.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4880" class="blob-num js-line-number" data-line-number="4880"></td>
        <td id="LC4880" class="blob-code js-file-line">                    firstgid<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(tset.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>firstgid<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4881" class="blob-num js-line-number" data-line-number="4881"></td>
        <td id="LC4881" class="blob-code js-file-line">                    tilewidth<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(tset.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tilewidth<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4882" class="blob-num js-line-number" data-line-number="4882"></td>
        <td id="LC4882" class="blob-code js-file-line">                    tileheight<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(tset.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tileheight<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L4883" class="blob-num js-line-number" data-line-number="4883"></td>
        <td id="LC4883" class="blob-code js-file-line">                    margin<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4884" class="blob-num js-line-number" data-line-number="4884"></td>
        <td id="LC4884" class="blob-code js-file-line">                    spacing<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4885" class="blob-num js-line-number" data-line-number="4885"></td>
        <td id="LC4885" class="blob-code js-file-line">                    tileoffset<span class="pl-k">:</span> { x<span class="pl-k">:</span> <span class="pl-c1">0</span>, y<span class="pl-k">:</span> <span class="pl-c1">0</span> },</td>
      </tr>
      <tr>
        <td id="L4886" class="blob-num js-line-number" data-line-number="4886"></td>
        <td id="LC4886" class="blob-code js-file-line">                    terrains<span class="pl-k">:</span> [],</td>
      </tr>
      <tr>
        <td id="L4887" class="blob-num js-line-number" data-line-number="4887"></td>
        <td id="LC4887" class="blob-code js-file-line">                    properties<span class="pl-k">:</span> {},</td>
      </tr>
      <tr>
        <td id="L4888" class="blob-num js-line-number" data-line-number="4888"></td>
        <td id="LC4888" class="blob-code js-file-line">                    tileproperties<span class="pl-k">:</span> {},</td>
      </tr>
      <tr>
        <td id="L4889" class="blob-num js-line-number" data-line-number="4889"></td>
        <td id="LC4889" class="blob-code js-file-line">                    tiles<span class="pl-k">:</span> {}</td>
      </tr>
      <tr>
        <td id="L4890" class="blob-num js-line-number" data-line-number="4890"></td>
        <td id="LC4890" class="blob-code js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L4891" class="blob-num js-line-number" data-line-number="4891"></td>
        <td id="LC4891" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4892" class="blob-num js-line-number" data-line-number="4892"></td>
        <td id="LC4892" class="blob-code js-file-line">            <span class="pl-c">//add spacing / margin attributes if exist</span></td>
      </tr>
      <tr>
        <td id="L4893" class="blob-num js-line-number" data-line-number="4893"></td>
        <td id="LC4893" class="blob-code js-file-line">            <span class="pl-s">var</span> spacing <span class="pl-k">=</span> tset.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>spacing<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4894" class="blob-num js-line-number" data-line-number="4894"></td>
        <td id="LC4894" class="blob-code js-file-line">            <span class="pl-k">if</span>(spacing) {</td>
      </tr>
      <tr>
        <td id="L4895" class="blob-num js-line-number" data-line-number="4895"></td>
        <td id="LC4895" class="blob-code js-file-line">                tileset.spacing <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(spacing.<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L4896" class="blob-num js-line-number" data-line-number="4896"></td>
        <td id="LC4896" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4897" class="blob-num js-line-number" data-line-number="4897"></td>
        <td id="LC4897" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4898" class="blob-num js-line-number" data-line-number="4898"></td>
        <td id="LC4898" class="blob-code js-file-line">            <span class="pl-s">var</span> margin <span class="pl-k">=</span> tset.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>margin<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4899" class="blob-num js-line-number" data-line-number="4899"></td>
        <td id="LC4899" class="blob-code js-file-line">            <span class="pl-k">if</span>(margin) {</td>
      </tr>
      <tr>
        <td id="L4900" class="blob-num js-line-number" data-line-number="4900"></td>
        <td id="LC4900" class="blob-code js-file-line">                tileset.margin <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(margin.<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L4901" class="blob-num js-line-number" data-line-number="4901"></td>
        <td id="LC4901" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4902" class="blob-num js-line-number" data-line-number="4902"></td>
        <td id="LC4902" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4903" class="blob-num js-line-number" data-line-number="4903"></td>
        <td id="LC4903" class="blob-code js-file-line">            <span class="pl-c">//add .properties if element exists</span></td>
      </tr>
      <tr>
        <td id="L4904" class="blob-num js-line-number" data-line-number="4904"></td>
        <td id="LC4904" class="blob-code js-file-line">            <span class="pl-s">var</span> tsetprops <span class="pl-k">=</span> tset.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>properties<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4905" class="blob-num js-line-number" data-line-number="4905"></td>
        <td id="LC4905" class="blob-code js-file-line">            <span class="pl-k">for</span>(<span class="pl-s">var</span> tsp <span class="pl-k">=</span> <span class="pl-c1">0</span>; tsp <span class="pl-k">&lt;</span> tsetprops.<span class="pl-sc">length</span>; <span class="pl-k">++</span>tsp) {</td>
      </tr>
      <tr>
        <td id="L4906" class="blob-num js-line-number" data-line-number="4906"></td>
        <td id="LC4906" class="blob-code js-file-line">                <span class="pl-k">if</span>(tsetprops[tsp].<span class="pl-sc">parentNode</span> <span class="pl-k">===</span> tset) {</td>
      </tr>
      <tr>
        <td id="L4907" class="blob-num js-line-number" data-line-number="4907"></td>
        <td id="LC4907" class="blob-code js-file-line">                    tsetprops <span class="pl-k">=</span> tsetprops[tsp].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>property<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4908" class="blob-num js-line-number" data-line-number="4908"></td>
        <td id="LC4908" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4909" class="blob-num js-line-number" data-line-number="4909"></td>
        <td id="LC4909" class="blob-code js-file-line">                    <span class="pl-k">if</span>(tsetprops.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4910" class="blob-num js-line-number" data-line-number="4910"></td>
        <td id="LC4910" class="blob-code js-file-line">                        <span class="pl-k">for</span>(<span class="pl-s">var</span> p <span class="pl-k">=</span> <span class="pl-c1">0</span>; p <span class="pl-k">&lt;</span> tsetprops.<span class="pl-sc">length</span>; <span class="pl-k">++</span>p) {</td>
      </tr>
      <tr>
        <td id="L4911" class="blob-num js-line-number" data-line-number="4911"></td>
        <td id="LC4911" class="blob-code js-file-line">                            <span class="pl-s">var</span> tsetprop <span class="pl-k">=</span> tsetprops[p];</td>
      </tr>
      <tr>
        <td id="L4912" class="blob-num js-line-number" data-line-number="4912"></td>
        <td id="LC4912" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4913" class="blob-num js-line-number" data-line-number="4913"></td>
        <td id="LC4913" class="blob-code js-file-line">                            tileset.properties[tsetprop.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>] <span class="pl-k">=</span> tsetprop.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4914" class="blob-num js-line-number" data-line-number="4914"></td>
        <td id="LC4914" class="blob-code js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L4915" class="blob-num js-line-number" data-line-number="4915"></td>
        <td id="LC4915" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4916" class="blob-num js-line-number" data-line-number="4916"></td>
        <td id="LC4916" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4917" class="blob-num js-line-number" data-line-number="4917"></td>
        <td id="LC4917" class="blob-code js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4918" class="blob-num js-line-number" data-line-number="4918"></td>
        <td id="LC4918" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4919" class="blob-num js-line-number" data-line-number="4919"></td>
        <td id="LC4919" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4920" class="blob-num js-line-number" data-line-number="4920"></td>
        <td id="LC4920" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4921" class="blob-num js-line-number" data-line-number="4921"></td>
        <td id="LC4921" class="blob-code js-file-line">            <span class="pl-c">//add .tiles if there are tile-specific properties</span></td>
      </tr>
      <tr>
        <td id="L4922" class="blob-num js-line-number" data-line-number="4922"></td>
        <td id="LC4922" class="blob-code js-file-line">            <span class="pl-k">for</span>(<span class="pl-s">var</span> t <span class="pl-k">=</span> <span class="pl-c1">0</span>; t <span class="pl-k">&lt;</span> tiles.<span class="pl-sc">length</span>; <span class="pl-k">++</span>t) {</td>
      </tr>
      <tr>
        <td id="L4923" class="blob-num js-line-number" data-line-number="4923"></td>
        <td id="LC4923" class="blob-code js-file-line">                <span class="pl-s">var</span> tile <span class="pl-k">=</span> tiles[t],</td>
      </tr>
      <tr>
        <td id="L4924" class="blob-num js-line-number" data-line-number="4924"></td>
        <td id="LC4924" class="blob-code js-file-line">                    id <span class="pl-k">=</span> tile.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>id<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4925" class="blob-num js-line-number" data-line-number="4925"></td>
        <td id="LC4925" class="blob-code js-file-line">                    img <span class="pl-k">=</span> tile.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>image<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4926" class="blob-num js-line-number" data-line-number="4926"></td>
        <td id="LC4926" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4927" class="blob-num js-line-number" data-line-number="4927"></td>
        <td id="LC4927" class="blob-code js-file-line">                tileset.tiles[id] <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4928" class="blob-num js-line-number" data-line-number="4928"></td>
        <td id="LC4928" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4929" class="blob-num js-line-number" data-line-number="4929"></td>
        <td id="LC4929" class="blob-code js-file-line">                <span class="pl-c">//add attributes into the object</span></td>
      </tr>
      <tr>
        <td id="L4930" class="blob-num js-line-number" data-line-number="4930"></td>
        <td id="LC4930" class="blob-code js-file-line">                <span class="pl-k">for</span>(<span class="pl-s">var</span> ta <span class="pl-k">=</span> <span class="pl-c1">0</span>; ta <span class="pl-k">&lt;</span> tile.<span class="pl-sc">attributes</span>.<span class="pl-sc">length</span>; <span class="pl-k">++</span>ta) {</td>
      </tr>
      <tr>
        <td id="L4931" class="blob-num js-line-number" data-line-number="4931"></td>
        <td id="LC4931" class="blob-code js-file-line">                    <span class="pl-s">var</span> tileatr <span class="pl-k">=</span> tile.<span class="pl-sc">attributes</span>[ta];</td>
      </tr>
      <tr>
        <td id="L4932" class="blob-num js-line-number" data-line-number="4932"></td>
        <td id="LC4932" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4933" class="blob-num js-line-number" data-line-number="4933"></td>
        <td id="LC4933" class="blob-code js-file-line">                    <span class="pl-k">if</span>(tileatr.<span class="pl-sc">name</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>id<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4934" class="blob-num js-line-number" data-line-number="4934"></td>
        <td id="LC4934" class="blob-code js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L4935" class="blob-num js-line-number" data-line-number="4935"></td>
        <td id="LC4935" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4936" class="blob-num js-line-number" data-line-number="4936"></td>
        <td id="LC4936" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4937" class="blob-num js-line-number" data-line-number="4937"></td>
        <td id="LC4937" class="blob-code js-file-line">                    <span class="pl-k">switch</span>(tileatr.<span class="pl-sc">name</span>) {</td>
      </tr>
      <tr>
        <td id="L4938" class="blob-num js-line-number" data-line-number="4938"></td>
        <td id="LC4938" class="blob-code js-file-line">                        <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>terrain<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L4939" class="blob-num js-line-number" data-line-number="4939"></td>
        <td id="LC4939" class="blob-code js-file-line">                            tileset.tiles[id].terrain <span class="pl-k">=</span> tileatr.<span class="pl-sc">value</span>.sply(<span class="pl-s1"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4940" class="blob-num js-line-number" data-line-number="4940"></td>
        <td id="LC4940" class="blob-code js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4941" class="blob-num js-line-number" data-line-number="4941"></td>
        <td id="LC4941" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4942" class="blob-num js-line-number" data-line-number="4942"></td>
        <td id="LC4942" class="blob-code js-file-line">                        <span class="pl-k">case</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>probability<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L4943" class="blob-num js-line-number" data-line-number="4943"></td>
        <td id="LC4943" class="blob-code js-file-line">                            tileset.tiles[id].probability <span class="pl-k">=</span> <span class="pl-s3">parseFloat</span>(tileatr.<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L4944" class="blob-num js-line-number" data-line-number="4944"></td>
        <td id="LC4944" class="blob-code js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4945" class="blob-num js-line-number" data-line-number="4945"></td>
        <td id="LC4945" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4946" class="blob-num js-line-number" data-line-number="4946"></td>
        <td id="LC4946" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4947" class="blob-num js-line-number" data-line-number="4947"></td>
        <td id="LC4947" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4948" class="blob-num js-line-number" data-line-number="4948"></td>
        <td id="LC4948" class="blob-code js-file-line">                <span class="pl-c">//check if it has an image child</span></td>
      </tr>
      <tr>
        <td id="L4949" class="blob-num js-line-number" data-line-number="4949"></td>
        <td id="LC4949" class="blob-code js-file-line">                <span class="pl-k">if</span>(img.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4950" class="blob-num js-line-number" data-line-number="4950"></td>
        <td id="LC4950" class="blob-code js-file-line">                    tileset.tiles[id] <span class="pl-k">=</span> tileset.tiles[id] <span class="pl-k">||</span> {};</td>
      </tr>
      <tr>
        <td id="L4951" class="blob-num js-line-number" data-line-number="4951"></td>
        <td id="LC4951" class="blob-code js-file-line">                    tileset.tiles[id].image <span class="pl-k">=</span> img[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>source<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4952" class="blob-num js-line-number" data-line-number="4952"></td>
        <td id="LC4952" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4953" class="blob-num js-line-number" data-line-number="4953"></td>
        <td id="LC4953" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4954" class="blob-num js-line-number" data-line-number="4954"></td>
        <td id="LC4954" class="blob-code js-file-line">                <span class="pl-c">//add all the tile properties</span></td>
      </tr>
      <tr>
        <td id="L4955" class="blob-num js-line-number" data-line-number="4955"></td>
        <td id="LC4955" class="blob-code js-file-line">                <span class="pl-s">var</span> tileprops <span class="pl-k">=</span> tile.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>properties<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4956" class="blob-num js-line-number" data-line-number="4956"></td>
        <td id="LC4956" class="blob-code js-file-line">                <span class="pl-k">if</span>(tileprops.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4957" class="blob-num js-line-number" data-line-number="4957"></td>
        <td id="LC4957" class="blob-code js-file-line">                    tileset.tileproperties[id] <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4958" class="blob-num js-line-number" data-line-number="4958"></td>
        <td id="LC4958" class="blob-code js-file-line">                    tileprops <span class="pl-k">=</span> tileprops[<span class="pl-c1">0</span>].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>property<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4959" class="blob-num js-line-number" data-line-number="4959"></td>
        <td id="LC4959" class="blob-code js-file-line">                    <span class="pl-k">for</span>(<span class="pl-s">var</span> tp <span class="pl-k">=</span> <span class="pl-c1">0</span>; tp <span class="pl-k">&lt;</span> tileprops.<span class="pl-sc">length</span>; <span class="pl-k">++</span>tp) {</td>
      </tr>
      <tr>
        <td id="L4960" class="blob-num js-line-number" data-line-number="4960"></td>
        <td id="LC4960" class="blob-code js-file-line">                        <span class="pl-s">var</span> tileprop <span class="pl-k">=</span> tileprops[tp];</td>
      </tr>
      <tr>
        <td id="L4961" class="blob-num js-line-number" data-line-number="4961"></td>
        <td id="LC4961" class="blob-code js-file-line">                        tileset.tileproperties[id][tileprop.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>] <span class="pl-k">=</span> tileprop.<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4962" class="blob-num js-line-number" data-line-number="4962"></td>
        <td id="LC4962" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4963" class="blob-num js-line-number" data-line-number="4963"></td>
        <td id="LC4963" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4964" class="blob-num js-line-number" data-line-number="4964"></td>
        <td id="LC4964" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4965" class="blob-num js-line-number" data-line-number="4965"></td>
        <td id="LC4965" class="blob-code js-file-line">                <span class="pl-c">//add all the tile animations</span></td>
      </tr>
      <tr>
        <td id="L4966" class="blob-num js-line-number" data-line-number="4966"></td>
        <td id="LC4966" class="blob-code js-file-line">                <span class="pl-s">var</span> tileanims <span class="pl-k">=</span> tile.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>animation<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4967" class="blob-num js-line-number" data-line-number="4967"></td>
        <td id="LC4967" class="blob-code js-file-line">                <span class="pl-k">if</span> (tileanims.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4968" class="blob-num js-line-number" data-line-number="4968"></td>
        <td id="LC4968" class="blob-code js-file-line">                    tileset.tiles[id].animation <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4969" class="blob-num js-line-number" data-line-number="4969"></td>
        <td id="LC4969" class="blob-code js-file-line">                    tileanims <span class="pl-k">=</span> tileanims[<span class="pl-c1">0</span>].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>frame<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4970" class="blob-num js-line-number" data-line-number="4970"></td>
        <td id="LC4970" class="blob-code js-file-line">                    <span class="pl-k">for</span>(<span class="pl-s">var</span> tn <span class="pl-k">=</span> <span class="pl-c1">0</span>; tn <span class="pl-k">&lt;</span> tileanims.<span class="pl-sc">length</span>; <span class="pl-k">++</span>tn) {</td>
      </tr>
      <tr>
        <td id="L4971" class="blob-num js-line-number" data-line-number="4971"></td>
        <td id="LC4971" class="blob-code js-file-line">                        <span class="pl-s">var</span> tileanim <span class="pl-k">=</span> tileanims[tn].<span class="pl-sc">attributes</span>,</td>
      </tr>
      <tr>
        <td id="L4972" class="blob-num js-line-number" data-line-number="4972"></td>
        <td id="LC4972" class="blob-code js-file-line">                            animObj <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4973" class="blob-num js-line-number" data-line-number="4973"></td>
        <td id="LC4973" class="blob-code js-file-line">                        <span class="pl-k">for</span> (<span class="pl-s">var</span> tna <span class="pl-k">=</span> <span class="pl-c1">0</span>; tna <span class="pl-k">&lt;</span> tileanim.<span class="pl-sc">length</span>; <span class="pl-k">++</span>tna) {</td>
      </tr>
      <tr>
        <td id="L4974" class="blob-num js-line-number" data-line-number="4974"></td>
        <td id="LC4974" class="blob-code js-file-line">                            animObj[tileanim[tna].<span class="pl-sc">name</span>] <span class="pl-k">=</span> tileanim[tna].<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L4975" class="blob-num js-line-number" data-line-number="4975"></td>
        <td id="LC4975" class="blob-code js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L4976" class="blob-num js-line-number" data-line-number="4976"></td>
        <td id="LC4976" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4977" class="blob-num js-line-number" data-line-number="4977"></td>
        <td id="LC4977" class="blob-code js-file-line">                        tileset.tiles[id].animation.<span class="pl-s3">push</span>(animObj);</td>
      </tr>
      <tr>
        <td id="L4978" class="blob-num js-line-number" data-line-number="4978"></td>
        <td id="LC4978" class="blob-code js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4979" class="blob-num js-line-number" data-line-number="4979"></td>
        <td id="LC4979" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4980" class="blob-num js-line-number" data-line-number="4980"></td>
        <td id="LC4980" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4981" class="blob-num js-line-number" data-line-number="4981"></td>
        <td id="LC4981" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4982" class="blob-num js-line-number" data-line-number="4982"></td>
        <td id="LC4982" class="blob-code js-file-line">            <span class="pl-c">//check for terraintypes and add those</span></td>
      </tr>
      <tr>
        <td id="L4983" class="blob-num js-line-number" data-line-number="4983"></td>
        <td id="LC4983" class="blob-code js-file-line">            <span class="pl-s">var</span> terrains <span class="pl-k">=</span> tset.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>terraintypes<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4984" class="blob-num js-line-number" data-line-number="4984"></td>
        <td id="LC4984" class="blob-code js-file-line">            <span class="pl-k">if</span>(terrains.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4985" class="blob-num js-line-number" data-line-number="4985"></td>
        <td id="LC4985" class="blob-code js-file-line">                terrains <span class="pl-k">=</span> terrains[<span class="pl-c1">0</span>].<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>terrain<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4986" class="blob-num js-line-number" data-line-number="4986"></td>
        <td id="LC4986" class="blob-code js-file-line">                <span class="pl-k">for</span>(<span class="pl-s">var</span> tr <span class="pl-k">=</span> <span class="pl-c1">0</span>; tr <span class="pl-k">&lt;</span> terrains.<span class="pl-sc">length</span>; <span class="pl-k">++</span>tr) {</td>
      </tr>
      <tr>
        <td id="L4987" class="blob-num js-line-number" data-line-number="4987"></td>
        <td id="LC4987" class="blob-code js-file-line">                    tileset.terrains.<span class="pl-s3">push</span>({</td>
      </tr>
      <tr>
        <td id="L4988" class="blob-num js-line-number" data-line-number="4988"></td>
        <td id="LC4988" class="blob-code js-file-line">                        name<span class="pl-k">:</span> terrains[tr].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L4989" class="blob-num js-line-number" data-line-number="4989"></td>
        <td id="LC4989" class="blob-code js-file-line">                        tile<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(terrains[tr].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tile<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>)</td>
      </tr>
      <tr>
        <td id="L4990" class="blob-num js-line-number" data-line-number="4990"></td>
        <td id="LC4990" class="blob-code js-file-line">                    });</td>
      </tr>
      <tr>
        <td id="L4991" class="blob-num js-line-number" data-line-number="4991"></td>
        <td id="LC4991" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4992" class="blob-num js-line-number" data-line-number="4992"></td>
        <td id="LC4992" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4993" class="blob-num js-line-number" data-line-number="4993"></td>
        <td id="LC4993" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4994" class="blob-num js-line-number" data-line-number="4994"></td>
        <td id="LC4994" class="blob-code js-file-line">            <span class="pl-c">//check for tileoffset and add that</span></td>
      </tr>
      <tr>
        <td id="L4995" class="blob-num js-line-number" data-line-number="4995"></td>
        <td id="LC4995" class="blob-code js-file-line">            <span class="pl-s">var</span> offset <span class="pl-k">=</span> tset.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>tileoffset<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4996" class="blob-num js-line-number" data-line-number="4996"></td>
        <td id="LC4996" class="blob-code js-file-line">            <span class="pl-k">if</span>(offset.<span class="pl-sc">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4997" class="blob-num js-line-number" data-line-number="4997"></td>
        <td id="LC4997" class="blob-code js-file-line">                tileset.tileoffset.<span class="pl-sc">x</span> <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(offset[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L4998" class="blob-num js-line-number" data-line-number="4998"></td>
        <td id="LC4998" class="blob-code js-file-line">                tileset.tileoffset.<span class="pl-sc">y</span> <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(offset[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L4999" class="blob-num js-line-number" data-line-number="4999"></td>
        <td id="LC4999" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5000" class="blob-num js-line-number" data-line-number="5000"></td>
        <td id="LC5000" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5001" class="blob-num js-line-number" data-line-number="5001"></td>
        <td id="LC5001" class="blob-code js-file-line">            <span class="pl-c">//add image, imagewidth, imageheight</span></td>
      </tr>
      <tr>
        <td id="L5002" class="blob-num js-line-number" data-line-number="5002"></td>
        <td id="LC5002" class="blob-code js-file-line">            <span class="pl-s">var</span> image <span class="pl-k">=</span> tset.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>image<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5003" class="blob-num js-line-number" data-line-number="5003"></td>
        <td id="LC5003" class="blob-code js-file-line">            <span class="pl-k">if</span>(image.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> image[<span class="pl-c1">0</span>].<span class="pl-sc">parentNode</span> <span class="pl-k">===</span> tset) {</td>
      </tr>
      <tr>
        <td id="L5004" class="blob-num js-line-number" data-line-number="5004"></td>
        <td id="LC5004" class="blob-code js-file-line">                tileset.image <span class="pl-k">=</span> image[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>source<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L5005" class="blob-num js-line-number" data-line-number="5005"></td>
        <td id="LC5005" class="blob-code js-file-line">                tileset.imagewidth <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(image[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L5006" class="blob-num js-line-number" data-line-number="5006"></td>
        <td id="LC5006" class="blob-code js-file-line">                tileset.imageheight <span class="pl-k">=</span> <span class="pl-s3">parseInt</span>(image[<span class="pl-c1">0</span>].<span class="pl-sc">attributes</span>.<span class="pl-s3">getNamedItem</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>).<span class="pl-sc">value</span>, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L5007" class="blob-num js-line-number" data-line-number="5007"></td>
        <td id="LC5007" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5008" class="blob-num js-line-number" data-line-number="5008"></td>
        <td id="LC5008" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5009" class="blob-num js-line-number" data-line-number="5009"></td>
        <td id="LC5009" class="blob-code js-file-line">            map.tilesets.<span class="pl-s3">push</span>(tileset);</td>
      </tr>
      <tr>
        <td id="L5010" class="blob-num js-line-number" data-line-number="5010"></td>
        <td id="LC5010" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5011" class="blob-num js-line-number" data-line-number="5011"></td>
        <td id="LC5011" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5012" class="blob-num js-line-number" data-line-number="5012"></td>
        <td id="LC5012" class="blob-code js-file-line">        <span class="pl-k">return</span> map;</td>
      </tr>
      <tr>
        <td id="L5013" class="blob-num js-line-number" data-line-number="5013"></td>
        <td id="LC5013" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5014" class="blob-num js-line-number" data-line-number="5014"></td>
        <td id="LC5014" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5015" class="blob-num js-line-number" data-line-number="5015"></td>
        <td id="LC5015" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5016" class="blob-num js-line-number" data-line-number="5016"></td>
        <td id="LC5016" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> TilemapParser;</td>
      </tr>
      <tr>
        <td id="L5017" class="blob-num js-line-number" data-line-number="5017"></td>
        <td id="LC5017" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5018" class="blob-num js-line-number" data-line-number="5018"></td>
        <td id="LC5018" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">csvToXY</span>(<span class="pl-vpf">pt</span>) {</td>
      </tr>
      <tr>
        <td id="L5019" class="blob-num js-line-number" data-line-number="5019"></td>
        <td id="LC5019" class="blob-code js-file-line">    <span class="pl-s">var</span> points <span class="pl-k">=</span> pt.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5020" class="blob-num js-line-number" data-line-number="5020"></td>
        <td id="LC5020" class="blob-code js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5021" class="blob-num js-line-number" data-line-number="5021"></td>
        <td id="LC5021" class="blob-code js-file-line">        x<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(points[<span class="pl-c1">0</span>], <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="L5022" class="blob-num js-line-number" data-line-number="5022"></td>
        <td id="LC5022" class="blob-code js-file-line">        y<span class="pl-k">:</span> <span class="pl-s3">parseInt</span>(points[<span class="pl-c1">1</span>], <span class="pl-c1">10</span>)</td>
      </tr>
      <tr>
        <td id="L5023" class="blob-num js-line-number" data-line-number="5023"></td>
        <td id="LC5023" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5024" class="blob-num js-line-number" data-line-number="5024"></td>
        <td id="LC5024" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5025" class="blob-num js-line-number" data-line-number="5025"></td>
        <td id="LC5025" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5026" class="blob-num js-line-number" data-line-number="5026"></td>
        <td id="LC5026" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>../constants<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">10</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>../utils<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>}],<span class="pl-c1">17</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L5027" class="blob-num js-line-number" data-line-number="5027"></td>
        <td id="LC5027" class="blob-code js-file-line"><span class="pl-s">var</span> utils <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>../utils<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5028" class="blob-num js-line-number" data-line-number="5028"></td>
        <td id="LC5028" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5029" class="blob-num js-line-number" data-line-number="5029"></td>
        <td id="LC5029" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5030" class="blob-num js-line-number" data-line-number="5030"></td>
        <td id="LC5030" class="blob-code js-file-line"><span class="pl-c"> * This object represents a tileset used by a Tilemap.</span></td>
      </tr>
      <tr>
        <td id="L5031" class="blob-num js-line-number" data-line-number="5031"></td>
        <td id="LC5031" class="blob-code js-file-line"><span class="pl-c"> * There can be multiple Tilesets in a map</span></td>
      </tr>
      <tr>
        <td id="L5032" class="blob-num js-line-number" data-line-number="5032"></td>
        <td id="LC5032" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5033" class="blob-num js-line-number" data-line-number="5033"></td>
        <td id="LC5033" class="blob-code js-file-line"><span class="pl-c"> * @class Tileset</span></td>
      </tr>
      <tr>
        <td id="L5034" class="blob-num js-line-number" data-line-number="5034"></td>
        <td id="LC5034" class="blob-code js-file-line"><span class="pl-c"> * @extends Texture</span></td>
      </tr>
      <tr>
        <td id="L5035" class="blob-num js-line-number" data-line-number="5035"></td>
        <td id="LC5035" class="blob-code js-file-line"><span class="pl-c"> * @constructor</span></td>
      </tr>
      <tr>
        <td id="L5036" class="blob-num js-line-number" data-line-number="5036"></td>
        <td id="LC5036" class="blob-code js-file-line"><span class="pl-c"> * @param game {Phaser.Game} Phaser game this belongs to.</span></td>
      </tr>
      <tr>
        <td id="L5037" class="blob-num js-line-number" data-line-number="5037"></td>
        <td id="LC5037" class="blob-code js-file-line"><span class="pl-c"> * @param key {string} The name of the tiledmap, this is usually the filename without the extension.</span></td>
      </tr>
      <tr>
        <td id="L5038" class="blob-num js-line-number" data-line-number="5038"></td>
        <td id="LC5038" class="blob-code js-file-line"><span class="pl-c"> * @param settings {Object} All the settings for the tileset</span></td>
      </tr>
      <tr>
        <td id="L5039" class="blob-num js-line-number" data-line-number="5039"></td>
        <td id="LC5039" class="blob-code js-file-line"><span class="pl-c"> * @param settings.tilewidth {Number} The width of a single tile in the set</span></td>
      </tr>
      <tr>
        <td id="L5040" class="blob-num js-line-number" data-line-number="5040"></td>
        <td id="LC5040" class="blob-code js-file-line"><span class="pl-c"> * @param settings.tileheight {Number} The height of a single tile in the set</span></td>
      </tr>
      <tr>
        <td id="L5041" class="blob-num js-line-number" data-line-number="5041"></td>
        <td id="LC5041" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.firstgid=1] {Number} The id of the first tile in the set, defaults to 1</span></td>
      </tr>
      <tr>
        <td id="L5042" class="blob-num js-line-number" data-line-number="5042"></td>
        <td id="LC5042" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.spacing=0] {Number} The spacing around tiles in the tileset (in pixels)</span></td>
      </tr>
      <tr>
        <td id="L5043" class="blob-num js-line-number" data-line-number="5043"></td>
        <td id="LC5043" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.margin=0] {Number} The margin around a tile in the tileset (in pixels)</span></td>
      </tr>
      <tr>
        <td id="L5044" class="blob-num js-line-number" data-line-number="5044"></td>
        <td id="LC5044" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.tileoffset] {Object} The offset to apply to a tile rendered from this tileset</span></td>
      </tr>
      <tr>
        <td id="L5045" class="blob-num js-line-number" data-line-number="5045"></td>
        <td id="LC5045" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.tileoffset.x=0] {Number} The X offset to apply to the tile</span></td>
      </tr>
      <tr>
        <td id="L5046" class="blob-num js-line-number" data-line-number="5046"></td>
        <td id="LC5046" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.tileoffset.y=0] {Number} The Y offset to apply to the tile</span></td>
      </tr>
      <tr>
        <td id="L5047" class="blob-num js-line-number" data-line-number="5047"></td>
        <td id="LC5047" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.properties] {Object} User-defined, custom properties that apply to the tileset</span></td>
      </tr>
      <tr>
        <td id="L5048" class="blob-num js-line-number" data-line-number="5048"></td>
        <td id="LC5048" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.tileproperties] {Object} User-defined, custom properties that apply to tiles in the tileset.</span></td>
      </tr>
      <tr>
        <td id="L5049" class="blob-num js-line-number" data-line-number="5049"></td>
        <td id="LC5049" class="blob-code js-file-line"><span class="pl-c"> *          The keys of this object should the tile id of the properties</span></td>
      </tr>
      <tr>
        <td id="L5050" class="blob-num js-line-number" data-line-number="5050"></td>
        <td id="LC5050" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.tiles] {Object} Extra metadata about specific tiles</span></td>
      </tr>
      <tr>
        <td id="L5051" class="blob-num js-line-number" data-line-number="5051"></td>
        <td id="LC5051" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.imagewidth] {Number} An override for the image width</span></td>
      </tr>
      <tr>
        <td id="L5052" class="blob-num js-line-number" data-line-number="5052"></td>
        <td id="LC5052" class="blob-code js-file-line"><span class="pl-c"> * @param [settings.imageheight] {Number} An override for the image height</span></td>
      </tr>
      <tr>
        <td id="L5053" class="blob-num js-line-number" data-line-number="5053"></td>
        <td id="LC5053" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5054" class="blob-num js-line-number" data-line-number="5054"></td>
        <td id="LC5054" class="blob-code js-file-line"><span class="pl-c">//TODO: Implement multi-image tileset support</span></td>
      </tr>
      <tr>
        <td id="L5055" class="blob-num js-line-number" data-line-number="5055"></td>
        <td id="LC5055" class="blob-code js-file-line"><span class="pl-c">//TODO: Support external tilesets (TSX files) via the &quot;source&quot; attribute</span></td>
      </tr>
      <tr>
        <td id="L5056" class="blob-num js-line-number" data-line-number="5056"></td>
        <td id="LC5056" class="blob-code js-file-line"><span class="pl-c">//see: https://github.com/bjorn/tiled/wiki/TMX-Map-Format#tileset</span></td>
      </tr>
      <tr>
        <td id="L5057" class="blob-num js-line-number" data-line-number="5057"></td>
        <td id="LC5057" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Tileset</span>(<span class="pl-vpf">game</span>, <span class="pl-vpf">key</span>, <span class="pl-vpf">settings</span>) {</td>
      </tr>
      <tr>
        <td id="L5058" class="blob-num js-line-number" data-line-number="5058"></td>
        <td id="LC5058" class="blob-code js-file-line">    <span class="pl-s">var</span> txkey <span class="pl-k">=</span> utils.cacheKey(key, <span class="pl-s1"><span class="pl-pds">&#39;</span>tileset<span class="pl-pds">&#39;</span></span>, settings.<span class="pl-sc">name</span>),</td>
      </tr>
      <tr>
        <td id="L5059" class="blob-num js-line-number" data-line-number="5059"></td>
        <td id="LC5059" class="blob-code js-file-line">        tx <span class="pl-k">=</span> PIXI.BaseTextureCache[txkey],</td>
      </tr>
      <tr>
        <td id="L5060" class="blob-num js-line-number" data-line-number="5060"></td>
        <td id="LC5060" class="blob-code js-file-line">        ids,</td>
      </tr>
      <tr>
        <td id="L5061" class="blob-num js-line-number" data-line-number="5061"></td>
        <td id="LC5061" class="blob-code js-file-line">        ttxkey,</td>
      </tr>
      <tr>
        <td id="L5062" class="blob-num js-line-number" data-line-number="5062"></td>
        <td id="LC5062" class="blob-code js-file-line">        ttx,</td>
      </tr>
      <tr>
        <td id="L5063" class="blob-num js-line-number" data-line-number="5063"></td>
        <td id="LC5063" class="blob-code js-file-line">        tileTextures;</td>
      </tr>
      <tr>
        <td id="L5064" class="blob-num js-line-number" data-line-number="5064"></td>
        <td id="LC5064" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5065" class="blob-num js-line-number" data-line-number="5065"></td>
        <td id="LC5065" class="blob-code js-file-line">    <span class="pl-c">// if no main texture, check if multi-image tileset</span></td>
      </tr>
      <tr>
        <td id="L5066" class="blob-num js-line-number" data-line-number="5066"></td>
        <td id="LC5066" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tx <span class="pl-k">&amp;&amp;</span> settings.tiles) {</td>
      </tr>
      <tr>
        <td id="L5067" class="blob-num js-line-number" data-line-number="5067"></td>
        <td id="LC5067" class="blob-code js-file-line">        <span class="pl-c">// need to sort because order matters here, and can&#39;t guarantee that the object&#39;s keys will be ordered.</span></td>
      </tr>
      <tr>
        <td id="L5068" class="blob-num js-line-number" data-line-number="5068"></td>
        <td id="LC5068" class="blob-code js-file-line">        <span class="pl-c">// We need a custom comparator because .sort() is lexagraphic, not numeric.</span></td>
      </tr>
      <tr>
        <td id="L5069" class="blob-num js-line-number" data-line-number="5069"></td>
        <td id="LC5069" class="blob-code js-file-line">        ids <span class="pl-k">=</span> <span class="pl-s3">Object</span>.keys(settings.tiles).<span class="pl-s3">sort</span>(<span class="pl-st">function</span> (<span class="pl-vpf">a</span>, <span class="pl-vpf">b</span>) { <span class="pl-k">return</span> <span class="pl-s3">parseInt</span>(a, <span class="pl-c1">10</span>) <span class="pl-k">-</span> <span class="pl-s3">parseInt</span>(b, <span class="pl-c1">10</span>); });</td>
      </tr>
      <tr>
        <td id="L5070" class="blob-num js-line-number" data-line-number="5070"></td>
        <td id="LC5070" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5071" class="blob-num js-line-number" data-line-number="5071"></td>
        <td id="LC5071" class="blob-code js-file-line">        <span class="pl-k">for</span> (<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> ids.<span class="pl-sc">length</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L5072" class="blob-num js-line-number" data-line-number="5072"></td>
        <td id="LC5072" class="blob-code js-file-line">            <span class="pl-k">if</span> (settings.tiles[ids[i]].image) {</td>
      </tr>
      <tr>
        <td id="L5073" class="blob-num js-line-number" data-line-number="5073"></td>
        <td id="LC5073" class="blob-code js-file-line">                <span class="pl-c">// this is a multi-image tileset</span></td>
      </tr>
      <tr>
        <td id="L5074" class="blob-num js-line-number" data-line-number="5074"></td>
        <td id="LC5074" class="blob-code js-file-line">                tileTextures <span class="pl-k">=</span> tileTextures <span class="pl-k">||</span> [];</td>
      </tr>
      <tr>
        <td id="L5075" class="blob-num js-line-number" data-line-number="5075"></td>
        <td id="LC5075" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5076" class="blob-num js-line-number" data-line-number="5076"></td>
        <td id="LC5076" class="blob-code js-file-line">                ttxkey <span class="pl-k">=</span> utils.cacheKey(key, <span class="pl-s1"><span class="pl-pds">&#39;</span>tileset_image_<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> ids[i], settings.<span class="pl-sc">name</span>);</td>
      </tr>
      <tr>
        <td id="L5077" class="blob-num js-line-number" data-line-number="5077"></td>
        <td id="LC5077" class="blob-code js-file-line">                ttx <span class="pl-k">=</span> PIXI.TextureCache[ttxkey];</td>
      </tr>
      <tr>
        <td id="L5078" class="blob-num js-line-number" data-line-number="5078"></td>
        <td id="LC5078" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5079" class="blob-num js-line-number" data-line-number="5079"></td>
        <td id="LC5079" class="blob-code js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>ttx) {</td>
      </tr>
      <tr>
        <td id="L5080" class="blob-num js-line-number" data-line-number="5080"></td>
        <td id="LC5080" class="blob-code js-file-line">                    <span class="pl-en">console</span><span class="pl-s3">.warn</span>(</td>
      </tr>
      <tr>
        <td id="L5081" class="blob-num js-line-number" data-line-number="5081"></td>
        <td id="LC5081" class="blob-code js-file-line">                        <span class="pl-s1"><span class="pl-pds">&#39;</span>Tileset &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> settings.<span class="pl-sc">name</span> <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; unable to find texture cached by key &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5082" class="blob-num js-line-number" data-line-number="5082"></td>
        <td id="LC5082" class="blob-code js-file-line">                        ttxkey <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;, using blank texture.<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L5083" class="blob-num js-line-number" data-line-number="5083"></td>
        <td id="LC5083" class="blob-code js-file-line">                    );</td>
      </tr>
      <tr>
        <td id="L5084" class="blob-num js-line-number" data-line-number="5084"></td>
        <td id="LC5084" class="blob-code js-file-line">                    ttx <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">PIXI.Texture</span>(<span class="pl-k">new</span> <span class="pl-en">PIXI.BaseTexture</span>());</td>
      </tr>
      <tr>
        <td id="L5085" class="blob-num js-line-number" data-line-number="5085"></td>
        <td id="LC5085" class="blob-code js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L5086" class="blob-num js-line-number" data-line-number="5086"></td>
        <td id="LC5086" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5087" class="blob-num js-line-number" data-line-number="5087"></td>
        <td id="LC5087" class="blob-code js-file-line">                tileTextures.<span class="pl-s3">push</span>(ttx);</td>
      </tr>
      <tr>
        <td id="L5088" class="blob-num js-line-number" data-line-number="5088"></td>
        <td id="LC5088" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5089" class="blob-num js-line-number" data-line-number="5089"></td>
        <td id="LC5089" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5090" class="blob-num js-line-number" data-line-number="5090"></td>
        <td id="LC5090" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5091" class="blob-num js-line-number" data-line-number="5091"></td>
        <td id="LC5091" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5092" class="blob-num js-line-number" data-line-number="5092"></td>
        <td id="LC5092" class="blob-code js-file-line">    <span class="pl-c">// if no main texture, and we didn&#39;t find any image tiles then warn about blank tileset</span></td>
      </tr>
      <tr>
        <td id="L5093" class="blob-num js-line-number" data-line-number="5093"></td>
        <td id="LC5093" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tx <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>tileTextures) {</td>
      </tr>
      <tr>
        <td id="L5094" class="blob-num js-line-number" data-line-number="5094"></td>
        <td id="LC5094" class="blob-code js-file-line">        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(</td>
      </tr>
      <tr>
        <td id="L5095" class="blob-num js-line-number" data-line-number="5095"></td>
        <td id="LC5095" class="blob-code js-file-line">            <span class="pl-s1"><span class="pl-pds">&#39;</span>Tileset &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> settings.<span class="pl-sc">name</span> <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; unable to find texture cached by key &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5096" class="blob-num js-line-number" data-line-number="5096"></td>
        <td id="LC5096" class="blob-code js-file-line">            txkey <span class="pl-k">+</span>  <span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;, using blank texture.<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L5097" class="blob-num js-line-number" data-line-number="5097"></td>
        <td id="LC5097" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L5098" class="blob-num js-line-number" data-line-number="5098"></td>
        <td id="LC5098" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5099" class="blob-num js-line-number" data-line-number="5099"></td>
        <td id="LC5099" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5100" class="blob-num js-line-number" data-line-number="5100"></td>
        <td id="LC5100" class="blob-code js-file-line">    PIXI.Texture.<span class="pl-s3">call</span>(<span class="pl-v">this</span>, tx <span class="pl-k">||</span> <span class="pl-k">new</span> <span class="pl-en">PIXI.BaseTexture</span>());</td>
      </tr>
      <tr>
        <td id="L5101" class="blob-num js-line-number" data-line-number="5101"></td>
        <td id="LC5101" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5102" class="blob-num js-line-number" data-line-number="5102"></td>
        <td id="LC5102" class="blob-code js-file-line">    <span class="pl-v">this</span>.game <span class="pl-k">=</span> game;</td>
      </tr>
      <tr>
        <td id="L5103" class="blob-num js-line-number" data-line-number="5103"></td>
        <td id="LC5103" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5104" class="blob-num js-line-number" data-line-number="5104"></td>
        <td id="LC5104" class="blob-code js-file-line">    <span class="pl-v">this</span>.multiImage <span class="pl-k">=</span> <span class="pl-k">!!</span>tileTextures;</td>
      </tr>
      <tr>
        <td id="L5105" class="blob-num js-line-number" data-line-number="5105"></td>
        <td id="LC5105" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5106" class="blob-num js-line-number" data-line-number="5106"></td>
        <td id="LC5106" class="blob-code js-file-line">    <span class="pl-c">//Tiled Editor properties</span></td>
      </tr>
      <tr>
        <td id="L5107" class="blob-num js-line-number" data-line-number="5107"></td>
        <td id="LC5107" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5108" class="blob-num js-line-number" data-line-number="5108"></td>
        <td id="LC5108" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5109" class="blob-num js-line-number" data-line-number="5109"></td>
        <td id="LC5109" class="blob-code js-file-line"><span class="pl-c">     * The first tileId in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5110" class="blob-num js-line-number" data-line-number="5110"></td>
        <td id="LC5110" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5111" class="blob-num js-line-number" data-line-number="5111"></td>
        <td id="LC5111" class="blob-code js-file-line"><span class="pl-c">     * @property firstgid</span></td>
      </tr>
      <tr>
        <td id="L5112" class="blob-num js-line-number" data-line-number="5112"></td>
        <td id="LC5112" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L5113" class="blob-num js-line-number" data-line-number="5113"></td>
        <td id="LC5113" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5114" class="blob-num js-line-number" data-line-number="5114"></td>
        <td id="LC5114" class="blob-code js-file-line">    <span class="pl-v">this</span>.firstgid <span class="pl-k">=</span> settings.firstgid <span class="pl-k">||</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5115" class="blob-num js-line-number" data-line-number="5115"></td>
        <td id="LC5115" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5116" class="blob-num js-line-number" data-line-number="5116"></td>
        <td id="LC5116" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5117" class="blob-num js-line-number" data-line-number="5117"></td>
        <td id="LC5117" class="blob-code js-file-line"><span class="pl-c">     * The name of the tileset</span></td>
      </tr>
      <tr>
        <td id="L5118" class="blob-num js-line-number" data-line-number="5118"></td>
        <td id="LC5118" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5119" class="blob-num js-line-number" data-line-number="5119"></td>
        <td id="LC5119" class="blob-code js-file-line"><span class="pl-c">     * @property name</span></td>
      </tr>
      <tr>
        <td id="L5120" class="blob-num js-line-number" data-line-number="5120"></td>
        <td id="LC5120" class="blob-code js-file-line"><span class="pl-c">     * @type String</span></td>
      </tr>
      <tr>
        <td id="L5121" class="blob-num js-line-number" data-line-number="5121"></td>
        <td id="LC5121" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5122" class="blob-num js-line-number" data-line-number="5122"></td>
        <td id="LC5122" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">name</span> <span class="pl-k">=</span> settings.<span class="pl-sc">name</span>;</td>
      </tr>
      <tr>
        <td id="L5123" class="blob-num js-line-number" data-line-number="5123"></td>
        <td id="LC5123" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5124" class="blob-num js-line-number" data-line-number="5124"></td>
        <td id="LC5124" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5125" class="blob-num js-line-number" data-line-number="5125"></td>
        <td id="LC5125" class="blob-code js-file-line"><span class="pl-c">     * The width of a tile in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5126" class="blob-num js-line-number" data-line-number="5126"></td>
        <td id="LC5126" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5127" class="blob-num js-line-number" data-line-number="5127"></td>
        <td id="LC5127" class="blob-code js-file-line"><span class="pl-c">     * @property tileWidth</span></td>
      </tr>
      <tr>
        <td id="L5128" class="blob-num js-line-number" data-line-number="5128"></td>
        <td id="LC5128" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L5129" class="blob-num js-line-number" data-line-number="5129"></td>
        <td id="LC5129" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5130" class="blob-num js-line-number" data-line-number="5130"></td>
        <td id="LC5130" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileWidth <span class="pl-k">=</span> settings.tilewidth;</td>
      </tr>
      <tr>
        <td id="L5131" class="blob-num js-line-number" data-line-number="5131"></td>
        <td id="LC5131" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5132" class="blob-num js-line-number" data-line-number="5132"></td>
        <td id="LC5132" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5133" class="blob-num js-line-number" data-line-number="5133"></td>
        <td id="LC5133" class="blob-code js-file-line"><span class="pl-c">     * The height of a tile in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5134" class="blob-num js-line-number" data-line-number="5134"></td>
        <td id="LC5134" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5135" class="blob-num js-line-number" data-line-number="5135"></td>
        <td id="LC5135" class="blob-code js-file-line"><span class="pl-c">     * @property tileHeight</span></td>
      </tr>
      <tr>
        <td id="L5136" class="blob-num js-line-number" data-line-number="5136"></td>
        <td id="LC5136" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L5137" class="blob-num js-line-number" data-line-number="5137"></td>
        <td id="LC5137" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5138" class="blob-num js-line-number" data-line-number="5138"></td>
        <td id="LC5138" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileHeight <span class="pl-k">=</span> settings.tileheight;</td>
      </tr>
      <tr>
        <td id="L5139" class="blob-num js-line-number" data-line-number="5139"></td>
        <td id="LC5139" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5140" class="blob-num js-line-number" data-line-number="5140"></td>
        <td id="LC5140" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5141" class="blob-num js-line-number" data-line-number="5141"></td>
        <td id="LC5141" class="blob-code js-file-line"><span class="pl-c">     * The spacing around a tile in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5142" class="blob-num js-line-number" data-line-number="5142"></td>
        <td id="LC5142" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5143" class="blob-num js-line-number" data-line-number="5143"></td>
        <td id="LC5143" class="blob-code js-file-line"><span class="pl-c">     * @property spacing</span></td>
      </tr>
      <tr>
        <td id="L5144" class="blob-num js-line-number" data-line-number="5144"></td>
        <td id="LC5144" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L5145" class="blob-num js-line-number" data-line-number="5145"></td>
        <td id="LC5145" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5146" class="blob-num js-line-number" data-line-number="5146"></td>
        <td id="LC5146" class="blob-code js-file-line">    <span class="pl-v">this</span>.spacing <span class="pl-k">=</span> settings.spacing <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5147" class="blob-num js-line-number" data-line-number="5147"></td>
        <td id="LC5147" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5148" class="blob-num js-line-number" data-line-number="5148"></td>
        <td id="LC5148" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5149" class="blob-num js-line-number" data-line-number="5149"></td>
        <td id="LC5149" class="blob-code js-file-line"><span class="pl-c">     * The margin around a tile in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5150" class="blob-num js-line-number" data-line-number="5150"></td>
        <td id="LC5150" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5151" class="blob-num js-line-number" data-line-number="5151"></td>
        <td id="LC5151" class="blob-code js-file-line"><span class="pl-c">     * @property margin</span></td>
      </tr>
      <tr>
        <td id="L5152" class="blob-num js-line-number" data-line-number="5152"></td>
        <td id="LC5152" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L5153" class="blob-num js-line-number" data-line-number="5153"></td>
        <td id="LC5153" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5154" class="blob-num js-line-number" data-line-number="5154"></td>
        <td id="LC5154" class="blob-code js-file-line">    <span class="pl-v">this</span>.margin <span class="pl-k">=</span> settings.margin <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5155" class="blob-num js-line-number" data-line-number="5155"></td>
        <td id="LC5155" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5156" class="blob-num js-line-number" data-line-number="5156"></td>
        <td id="LC5156" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5157" class="blob-num js-line-number" data-line-number="5157"></td>
        <td id="LC5157" class="blob-code js-file-line"><span class="pl-c">     * The offset of tile positions when rendered</span></td>
      </tr>
      <tr>
        <td id="L5158" class="blob-num js-line-number" data-line-number="5158"></td>
        <td id="LC5158" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5159" class="blob-num js-line-number" data-line-number="5159"></td>
        <td id="LC5159" class="blob-code js-file-line"><span class="pl-c">     * @property tileoffset</span></td>
      </tr>
      <tr>
        <td id="L5160" class="blob-num js-line-number" data-line-number="5160"></td>
        <td id="LC5160" class="blob-code js-file-line"><span class="pl-c">     * @type Phaser.Point</span></td>
      </tr>
      <tr>
        <td id="L5161" class="blob-num js-line-number" data-line-number="5161"></td>
        <td id="LC5161" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5162" class="blob-num js-line-number" data-line-number="5162"></td>
        <td id="LC5162" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileoffset <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(</td>
      </tr>
      <tr>
        <td id="L5163" class="blob-num js-line-number" data-line-number="5163"></td>
        <td id="LC5163" class="blob-code js-file-line">        settings.tileoffset <span class="pl-k">?</span> settings.tileoffset.<span class="pl-sc">x</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L5164" class="blob-num js-line-number" data-line-number="5164"></td>
        <td id="LC5164" class="blob-code js-file-line">        settings.tileoffset <span class="pl-k">?</span> settings.tileoffset.<span class="pl-sc">y</span> <span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L5165" class="blob-num js-line-number" data-line-number="5165"></td>
        <td id="LC5165" class="blob-code js-file-line">    );</td>
      </tr>
      <tr>
        <td id="L5166" class="blob-num js-line-number" data-line-number="5166"></td>
        <td id="LC5166" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5167" class="blob-num js-line-number" data-line-number="5167"></td>
        <td id="LC5167" class="blob-code js-file-line">    <span class="pl-c">//TODO: Support for &quot;terraintypes,&quot; &quot;image&quot;</span></td>
      </tr>
      <tr>
        <td id="L5168" class="blob-num js-line-number" data-line-number="5168"></td>
        <td id="LC5168" class="blob-code js-file-line">    <span class="pl-c">//see: https://github.com/bjorn/tiled/wiki/TMX-Map-Format#tileset</span></td>
      </tr>
      <tr>
        <td id="L5169" class="blob-num js-line-number" data-line-number="5169"></td>
        <td id="LC5169" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5170" class="blob-num js-line-number" data-line-number="5170"></td>
        <td id="LC5170" class="blob-code js-file-line">    <span class="pl-c">//Custom/Optional properties</span></td>
      </tr>
      <tr>
        <td id="L5171" class="blob-num js-line-number" data-line-number="5171"></td>
        <td id="LC5171" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5172" class="blob-num js-line-number" data-line-number="5172"></td>
        <td id="LC5172" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5173" class="blob-num js-line-number" data-line-number="5173"></td>
        <td id="LC5173" class="blob-code js-file-line"><span class="pl-c">     * The number of tiles calculated based on size, margin, and spacing</span></td>
      </tr>
      <tr>
        <td id="L5174" class="blob-num js-line-number" data-line-number="5174"></td>
        <td id="LC5174" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5175" class="blob-num js-line-number" data-line-number="5175"></td>
        <td id="LC5175" class="blob-code js-file-line"><span class="pl-c">     * @property numTiles</span></td>
      </tr>
      <tr>
        <td id="L5176" class="blob-num js-line-number" data-line-number="5176"></td>
        <td id="LC5176" class="blob-code js-file-line"><span class="pl-c">     * @type Vector</span></td>
      </tr>
      <tr>
        <td id="L5177" class="blob-num js-line-number" data-line-number="5177"></td>
        <td id="LC5177" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5178" class="blob-num js-line-number" data-line-number="5178"></td>
        <td id="LC5178" class="blob-code js-file-line">    <span class="pl-v">this</span>.numTiles <span class="pl-k">=</span> <span class="pl-v">this</span>.multiImage <span class="pl-k">?</span> tileTextures.<span class="pl-sc">length</span> <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(</td>
      </tr>
      <tr>
        <td id="L5179" class="blob-num js-line-number" data-line-number="5179"></td>
        <td id="LC5179" class="blob-code js-file-line">        Phaser.<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((<span class="pl-v">this</span>.baseTexture.<span class="pl-sc">width</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.margin) / (<span class="pl-v">this</span>.tileWidth <span class="pl-k">-</span> <span class="pl-v">this</span>.spacing)),</td>
      </tr>
      <tr>
        <td id="L5180" class="blob-num js-line-number" data-line-number="5180"></td>
        <td id="LC5180" class="blob-code js-file-line">        Phaser.<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((<span class="pl-v">this</span>.baseTexture.<span class="pl-sc">height</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.margin) / (<span class="pl-v">this</span>.tileHeight <span class="pl-k">-</span> <span class="pl-v">this</span>.spacing))</td>
      </tr>
      <tr>
        <td id="L5181" class="blob-num js-line-number" data-line-number="5181"></td>
        <td id="LC5181" class="blob-code js-file-line">    );</td>
      </tr>
      <tr>
        <td id="L5182" class="blob-num js-line-number" data-line-number="5182"></td>
        <td id="LC5182" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5183" class="blob-num js-line-number" data-line-number="5183"></td>
        <td id="LC5183" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5184" class="blob-num js-line-number" data-line-number="5184"></td>
        <td id="LC5184" class="blob-code js-file-line"><span class="pl-c">     * The last tileId in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5185" class="blob-num js-line-number" data-line-number="5185"></td>
        <td id="LC5185" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5186" class="blob-num js-line-number" data-line-number="5186"></td>
        <td id="LC5186" class="blob-code js-file-line"><span class="pl-c">     * @property lastgid</span></td>
      </tr>
      <tr>
        <td id="L5187" class="blob-num js-line-number" data-line-number="5187"></td>
        <td id="LC5187" class="blob-code js-file-line"><span class="pl-c">     * @type Number</span></td>
      </tr>
      <tr>
        <td id="L5188" class="blob-num js-line-number" data-line-number="5188"></td>
        <td id="LC5188" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5189" class="blob-num js-line-number" data-line-number="5189"></td>
        <td id="LC5189" class="blob-code js-file-line">    <span class="pl-v">this</span>.lastgid <span class="pl-k">=</span> <span class="pl-v">this</span>.firstgid <span class="pl-k">+</span> (<span class="pl-v">this</span>.multiImage <span class="pl-k">?</span> tileTextures.<span class="pl-sc">length</span> <span class="pl-k">:</span> ((<span class="pl-v">this</span>.numTiles.<span class="pl-sc">x</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.numTiles.<span class="pl-sc">y</span>) <span class="pl-k">||</span> <span class="pl-c1">1</span>)) <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5190" class="blob-num js-line-number" data-line-number="5190"></td>
        <td id="LC5190" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5191" class="blob-num js-line-number" data-line-number="5191"></td>
        <td id="LC5191" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5192" class="blob-num js-line-number" data-line-number="5192"></td>
        <td id="LC5192" class="blob-code js-file-line"><span class="pl-c">     * The properties of the tileset</span></td>
      </tr>
      <tr>
        <td id="L5193" class="blob-num js-line-number" data-line-number="5193"></td>
        <td id="LC5193" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5194" class="blob-num js-line-number" data-line-number="5194"></td>
        <td id="LC5194" class="blob-code js-file-line"><span class="pl-c">     * @property properties</span></td>
      </tr>
      <tr>
        <td id="L5195" class="blob-num js-line-number" data-line-number="5195"></td>
        <td id="LC5195" class="blob-code js-file-line"><span class="pl-c">     * @type Object</span></td>
      </tr>
      <tr>
        <td id="L5196" class="blob-num js-line-number" data-line-number="5196"></td>
        <td id="LC5196" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5197" class="blob-num js-line-number" data-line-number="5197"></td>
        <td id="LC5197" class="blob-code js-file-line">    <span class="pl-v">this</span>.properties <span class="pl-k">=</span> utils.parseTiledProperties(settings.properties);</td>
      </tr>
      <tr>
        <td id="L5198" class="blob-num js-line-number" data-line-number="5198"></td>
        <td id="LC5198" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5199" class="blob-num js-line-number" data-line-number="5199"></td>
        <td id="LC5199" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5200" class="blob-num js-line-number" data-line-number="5200"></td>
        <td id="LC5200" class="blob-code js-file-line"><span class="pl-c">     * The properties of the tiles in the tileset</span></td>
      </tr>
      <tr>
        <td id="L5201" class="blob-num js-line-number" data-line-number="5201"></td>
        <td id="LC5201" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5202" class="blob-num js-line-number" data-line-number="5202"></td>
        <td id="LC5202" class="blob-code js-file-line"><span class="pl-c">     * @property tileproperties</span></td>
      </tr>
      <tr>
        <td id="L5203" class="blob-num js-line-number" data-line-number="5203"></td>
        <td id="LC5203" class="blob-code js-file-line"><span class="pl-c">     * @type Object</span></td>
      </tr>
      <tr>
        <td id="L5204" class="blob-num js-line-number" data-line-number="5204"></td>
        <td id="LC5204" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5205" class="blob-num js-line-number" data-line-number="5205"></td>
        <td id="LC5205" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileproperties <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5206" class="blob-num js-line-number" data-line-number="5206"></td>
        <td id="LC5206" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5207" class="blob-num js-line-number" data-line-number="5207"></td>
        <td id="LC5207" class="blob-code js-file-line">    <span class="pl-c">// massage tile tileproperties</span></td>
      </tr>
      <tr>
        <td id="L5208" class="blob-num js-line-number" data-line-number="5208"></td>
        <td id="LC5208" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> k <span class="pl-k">in</span> settings.tileproperties) {</td>
      </tr>
      <tr>
        <td id="L5209" class="blob-num js-line-number" data-line-number="5209"></td>
        <td id="LC5209" class="blob-code js-file-line">        <span class="pl-v">this</span>.tileproperties[k] <span class="pl-k">=</span> utils.parseTiledProperties(settings.tileproperties[k]);</td>
      </tr>
      <tr>
        <td id="L5210" class="blob-num js-line-number" data-line-number="5210"></td>
        <td id="LC5210" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5211" class="blob-num js-line-number" data-line-number="5211"></td>
        <td id="LC5211" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5212" class="blob-num js-line-number" data-line-number="5212"></td>
        <td id="LC5212" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5213" class="blob-num js-line-number" data-line-number="5213"></td>
        <td id="LC5213" class="blob-code js-file-line"><span class="pl-c">     * The size of the tileset</span></td>
      </tr>
      <tr>
        <td id="L5214" class="blob-num js-line-number" data-line-number="5214"></td>
        <td id="LC5214" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5215" class="blob-num js-line-number" data-line-number="5215"></td>
        <td id="LC5215" class="blob-code js-file-line"><span class="pl-c">     * @property size</span></td>
      </tr>
      <tr>
        <td id="L5216" class="blob-num js-line-number" data-line-number="5216"></td>
        <td id="LC5216" class="blob-code js-file-line"><span class="pl-c">     * @type Vector</span></td>
      </tr>
      <tr>
        <td id="L5217" class="blob-num js-line-number" data-line-number="5217"></td>
        <td id="LC5217" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5218" class="blob-num js-line-number" data-line-number="5218"></td>
        <td id="LC5218" class="blob-code js-file-line">    <span class="pl-v">this</span>.<span class="pl-sc">size</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.multiImage <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Point</span>(</td>
      </tr>
      <tr>
        <td id="L5219" class="blob-num js-line-number" data-line-number="5219"></td>
        <td id="LC5219" class="blob-code js-file-line">        settings.imagewidth <span class="pl-k">||</span> <span class="pl-v">this</span>.baseTexture.<span class="pl-sc">width</span>,</td>
      </tr>
      <tr>
        <td id="L5220" class="blob-num js-line-number" data-line-number="5220"></td>
        <td id="LC5220" class="blob-code js-file-line">        settings.imageheight <span class="pl-k">||</span> <span class="pl-v">this</span>.baseTexture.<span class="pl-sc">height</span></td>
      </tr>
      <tr>
        <td id="L5221" class="blob-num js-line-number" data-line-number="5221"></td>
        <td id="LC5221" class="blob-code js-file-line">    );</td>
      </tr>
      <tr>
        <td id="L5222" class="blob-num js-line-number" data-line-number="5222"></td>
        <td id="LC5222" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5223" class="blob-num js-line-number" data-line-number="5223"></td>
        <td id="LC5223" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5224" class="blob-num js-line-number" data-line-number="5224"></td>
        <td id="LC5224" class="blob-code js-file-line"><span class="pl-c">     * The texture instances for each tile in the set</span></td>
      </tr>
      <tr>
        <td id="L5225" class="blob-num js-line-number" data-line-number="5225"></td>
        <td id="LC5225" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5226" class="blob-num js-line-number" data-line-number="5226"></td>
        <td id="LC5226" class="blob-code js-file-line"><span class="pl-c">     * @property textures</span></td>
      </tr>
      <tr>
        <td id="L5227" class="blob-num js-line-number" data-line-number="5227"></td>
        <td id="LC5227" class="blob-code js-file-line"><span class="pl-c">     * @type Array</span></td>
      </tr>
      <tr>
        <td id="L5228" class="blob-num js-line-number" data-line-number="5228"></td>
        <td id="LC5228" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5229" class="blob-num js-line-number" data-line-number="5229"></td>
        <td id="LC5229" class="blob-code js-file-line">    <span class="pl-v">this</span>.textures <span class="pl-k">=</span> <span class="pl-v">this</span>.multiImage <span class="pl-k">?</span> tileTextures <span class="pl-k">:</span> [];</td>
      </tr>
      <tr>
        <td id="L5230" class="blob-num js-line-number" data-line-number="5230"></td>
        <td id="LC5230" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5231" class="blob-num js-line-number" data-line-number="5231"></td>
        <td id="LC5231" class="blob-code js-file-line">    <span class="pl-c">// generate tile textures for single image tileset</span></td>
      </tr>
      <tr>
        <td id="L5232" class="blob-num js-line-number" data-line-number="5232"></td>
        <td id="LC5232" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.multiImage) {</td>
      </tr>
      <tr>
        <td id="L5233" class="blob-num js-line-number" data-line-number="5233"></td>
        <td id="LC5233" class="blob-code js-file-line">        <span class="pl-k">for</span>(<span class="pl-s">var</span> t <span class="pl-k">=</span> <span class="pl-c1">0</span>, tl <span class="pl-k">=</span> <span class="pl-v">this</span>.lastgid <span class="pl-k">-</span> <span class="pl-v">this</span>.firstgid <span class="pl-k">+</span> <span class="pl-c1">1</span>; t <span class="pl-k">&lt;</span> tl; <span class="pl-k">++</span>t) {</td>
      </tr>
      <tr>
        <td id="L5234" class="blob-num js-line-number" data-line-number="5234"></td>
        <td id="LC5234" class="blob-code js-file-line">            <span class="pl-c">// convert the tileId to x,y coords of the tile in the Texture</span></td>
      </tr>
      <tr>
        <td id="L5235" class="blob-num js-line-number" data-line-number="5235"></td>
        <td id="LC5235" class="blob-code js-file-line">            <span class="pl-s">var</span> y <span class="pl-k">=</span> Phaser.<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(t / <span class="pl-v">this</span>.numTiles.<span class="pl-sc">x</span>),</td>
      </tr>
      <tr>
        <td id="L5236" class="blob-num js-line-number" data-line-number="5236"></td>
        <td id="LC5236" class="blob-code js-file-line">                x <span class="pl-k">=</span> (t <span class="pl-k">-</span> (y <span class="pl-k">*</span> <span class="pl-v">this</span>.numTiles.<span class="pl-sc">x</span>));</td>
      </tr>
      <tr>
        <td id="L5237" class="blob-num js-line-number" data-line-number="5237"></td>
        <td id="LC5237" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5238" class="blob-num js-line-number" data-line-number="5238"></td>
        <td id="LC5238" class="blob-code js-file-line">            <span class="pl-c">// get location in pixels</span></td>
      </tr>
      <tr>
        <td id="L5239" class="blob-num js-line-number" data-line-number="5239"></td>
        <td id="LC5239" class="blob-code js-file-line">            x <span class="pl-k">=</span> (x <span class="pl-k">*</span> <span class="pl-v">this</span>.tileWidth) <span class="pl-k">+</span> (x <span class="pl-k">*</span> <span class="pl-v">this</span>.spacing) <span class="pl-k">+</span> <span class="pl-v">this</span>.margin;</td>
      </tr>
      <tr>
        <td id="L5240" class="blob-num js-line-number" data-line-number="5240"></td>
        <td id="LC5240" class="blob-code js-file-line">            y <span class="pl-k">=</span> (y <span class="pl-k">*</span> <span class="pl-v">this</span>.tileHeight) <span class="pl-k">+</span> (y <span class="pl-k">*</span> <span class="pl-v">this</span>.spacing) <span class="pl-k">+</span> <span class="pl-v">this</span>.margin;</td>
      </tr>
      <tr>
        <td id="L5241" class="blob-num js-line-number" data-line-number="5241"></td>
        <td id="LC5241" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5242" class="blob-num js-line-number" data-line-number="5242"></td>
        <td id="LC5242" class="blob-code js-file-line">            <span class="pl-v">this</span>.textures.<span class="pl-s3">push</span>(</td>
      </tr>
      <tr>
        <td id="L5243" class="blob-num js-line-number" data-line-number="5243"></td>
        <td id="LC5243" class="blob-code js-file-line">                <span class="pl-k">new</span> <span class="pl-en">PIXI.Texture</span>(</td>
      </tr>
      <tr>
        <td id="L5244" class="blob-num js-line-number" data-line-number="5244"></td>
        <td id="LC5244" class="blob-code js-file-line">                    <span class="pl-v">this</span>.baseTexture,</td>
      </tr>
      <tr>
        <td id="L5245" class="blob-num js-line-number" data-line-number="5245"></td>
        <td id="LC5245" class="blob-code js-file-line">                    <span class="pl-k">new</span> <span class="pl-en">Phaser.Rectangle</span>(x, y, <span class="pl-v">this</span>.tileWidth, <span class="pl-v">this</span>.tileHeight)</td>
      </tr>
      <tr>
        <td id="L5246" class="blob-num js-line-number" data-line-number="5246"></td>
        <td id="LC5246" class="blob-code js-file-line">                )</td>
      </tr>
      <tr>
        <td id="L5247" class="blob-num js-line-number" data-line-number="5247"></td>
        <td id="LC5247" class="blob-code js-file-line">            );</td>
      </tr>
      <tr>
        <td id="L5248" class="blob-num js-line-number" data-line-number="5248"></td>
        <td id="LC5248" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5249" class="blob-num js-line-number" data-line-number="5249"></td>
        <td id="LC5249" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5250" class="blob-num js-line-number" data-line-number="5250"></td>
        <td id="LC5250" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5251" class="blob-num js-line-number" data-line-number="5251"></td>
        <td id="LC5251" class="blob-code js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5252" class="blob-num js-line-number" data-line-number="5252"></td>
        <td id="LC5252" class="blob-code js-file-line"><span class="pl-c">     * The animation data for tile animations in the set</span></td>
      </tr>
      <tr>
        <td id="L5253" class="blob-num js-line-number" data-line-number="5253"></td>
        <td id="LC5253" class="blob-code js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L5254" class="blob-num js-line-number" data-line-number="5254"></td>
        <td id="LC5254" class="blob-code js-file-line"><span class="pl-c">     * @property tileanimations</span></td>
      </tr>
      <tr>
        <td id="L5255" class="blob-num js-line-number" data-line-number="5255"></td>
        <td id="LC5255" class="blob-code js-file-line"><span class="pl-c">     * @type Object</span></td>
      </tr>
      <tr>
        <td id="L5256" class="blob-num js-line-number" data-line-number="5256"></td>
        <td id="LC5256" class="blob-code js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L5257" class="blob-num js-line-number" data-line-number="5257"></td>
        <td id="LC5257" class="blob-code js-file-line">    <span class="pl-v">this</span>.tileanimations <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5258" class="blob-num js-line-number" data-line-number="5258"></td>
        <td id="LC5258" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5259" class="blob-num js-line-number" data-line-number="5259"></td>
        <td id="LC5259" class="blob-code js-file-line">    <span class="pl-c">// parse extra information about the tiles</span></td>
      </tr>
      <tr>
        <td id="L5260" class="blob-num js-line-number" data-line-number="5260"></td>
        <td id="LC5260" class="blob-code js-file-line">    <span class="pl-k">for</span> (<span class="pl-s">var</span> p <span class="pl-k">in</span> settings.tiles) {</td>
      </tr>
      <tr>
        <td id="L5261" class="blob-num js-line-number" data-line-number="5261"></td>
        <td id="LC5261" class="blob-code js-file-line">        <span class="pl-k">if</span> (settings.tiles[p].animation) {</td>
      </tr>
      <tr>
        <td id="L5262" class="blob-num js-line-number" data-line-number="5262"></td>
        <td id="LC5262" class="blob-code js-file-line">            <span class="pl-v">this</span>.tileanimations[p] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5263" class="blob-num js-line-number" data-line-number="5263"></td>
        <td id="LC5263" class="blob-code js-file-line">                rate<span class="pl-k">:</span> <span class="pl-c1">1000</span> / settings.tiles[p].animation[<span class="pl-c1">0</span>].duration,</td>
      </tr>
      <tr>
        <td id="L5264" class="blob-num js-line-number" data-line-number="5264"></td>
        <td id="LC5264" class="blob-code js-file-line">                data<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.FrameData</span>()</td>
      </tr>
      <tr>
        <td id="L5265" class="blob-num js-line-number" data-line-number="5265"></td>
        <td id="LC5265" class="blob-code js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L5266" class="blob-num js-line-number" data-line-number="5266"></td>
        <td id="LC5266" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5267" class="blob-num js-line-number" data-line-number="5267"></td>
        <td id="LC5267" class="blob-code js-file-line">            <span class="pl-k">for</span> (<span class="pl-s">var</span> a <span class="pl-k">=</span> <span class="pl-c1">0</span>; a <span class="pl-k">&lt;</span> settings.tiles[p].animation.<span class="pl-sc">length</span>; <span class="pl-k">++</span>a) {</td>
      </tr>
      <tr>
        <td id="L5268" class="blob-num js-line-number" data-line-number="5268"></td>
        <td id="LC5268" class="blob-code js-file-line">                <span class="pl-s">var</span> frame <span class="pl-k">=</span> <span class="pl-v">this</span>.textures[settings.tiles[p].animation[a].tileid].<span class="pl-sc">frame</span>;</td>
      </tr>
      <tr>
        <td id="L5269" class="blob-num js-line-number" data-line-number="5269"></td>
        <td id="LC5269" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5270" class="blob-num js-line-number" data-line-number="5270"></td>
        <td id="LC5270" class="blob-code js-file-line">                <span class="pl-v">this</span>.tileanimations[p].<span class="pl-sc">data</span>.addFrame(</td>
      </tr>
      <tr>
        <td id="L5271" class="blob-num js-line-number" data-line-number="5271"></td>
        <td id="LC5271" class="blob-code js-file-line">                    <span class="pl-k">new</span> <span class="pl-en">Phaser.Frame</span>(a, frame.<span class="pl-sc">x</span>, frame.<span class="pl-sc">y</span>, frame.<span class="pl-sc">width</span>, frame.<span class="pl-sc">height</span>)</td>
      </tr>
      <tr>
        <td id="L5272" class="blob-num js-line-number" data-line-number="5272"></td>
        <td id="LC5272" class="blob-code js-file-line">                );</td>
      </tr>
      <tr>
        <td id="L5273" class="blob-num js-line-number" data-line-number="5273"></td>
        <td id="LC5273" class="blob-code js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5274" class="blob-num js-line-number" data-line-number="5274"></td>
        <td id="LC5274" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5275" class="blob-num js-line-number" data-line-number="5275"></td>
        <td id="LC5275" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5276" class="blob-num js-line-number" data-line-number="5276"></td>
        <td id="LC5276" class="blob-code js-file-line">        <span class="pl-c">// image - url</span></td>
      </tr>
      <tr>
        <td id="L5277" class="blob-num js-line-number" data-line-number="5277"></td>
        <td id="LC5277" class="blob-code js-file-line">        <span class="pl-c">// objectgroup - collision data</span></td>
      </tr>
      <tr>
        <td id="L5278" class="blob-num js-line-number" data-line-number="5278"></td>
        <td id="LC5278" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5279" class="blob-num js-line-number" data-line-number="5279"></td>
        <td id="LC5279" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5280" class="blob-num js-line-number" data-line-number="5280"></td>
        <td id="LC5280" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5281" class="blob-num js-line-number" data-line-number="5281"></td>
        <td id="LC5281" class="blob-code js-file-line"><span class="pl-s3">Tileset</span>.<span class="pl-sc">prototype</span> <span class="pl-k">=</span> <span class="pl-s3">Object</span>.create(PIXI.Texture.<span class="pl-sc">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L5282" class="blob-num js-line-number" data-line-number="5282"></td>
        <td id="LC5282" class="blob-code js-file-line"><span class="pl-s3">Tileset</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">constructor</span> <span class="pl-k">=</span> Tileset;</td>
      </tr>
      <tr>
        <td id="L5283" class="blob-num js-line-number" data-line-number="5283"></td>
        <td id="LC5283" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5284" class="blob-num js-line-number" data-line-number="5284"></td>
        <td id="LC5284" class="blob-code js-file-line"><span class="pl-sv">module</span>.exports <span class="pl-k">=</span> Tileset;</td>
      </tr>
      <tr>
        <td id="L5285" class="blob-num js-line-number" data-line-number="5285"></td>
        <td id="LC5285" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5286" class="blob-num js-line-number" data-line-number="5286"></td>
        <td id="LC5286" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5287" class="blob-num js-line-number" data-line-number="5287"></td>
        <td id="LC5287" class="blob-code js-file-line"><span class="pl-c"> * Gets the tile properties for a tile based on it&#39;s ID</span></td>
      </tr>
      <tr>
        <td id="L5288" class="blob-num js-line-number" data-line-number="5288"></td>
        <td id="LC5288" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5289" class="blob-num js-line-number" data-line-number="5289"></td>
        <td id="LC5289" class="blob-code js-file-line"><span class="pl-c"> * @method getTileProperties</span></td>
      </tr>
      <tr>
        <td id="L5290" class="blob-num js-line-number" data-line-number="5290"></td>
        <td id="LC5290" class="blob-code js-file-line"><span class="pl-c"> * @param tileId {Number} The id of the tile to get the properties for</span></td>
      </tr>
      <tr>
        <td id="L5291" class="blob-num js-line-number" data-line-number="5291"></td>
        <td id="LC5291" class="blob-code js-file-line"><span class="pl-c"> * @return {Object} The properties of the tile</span></td>
      </tr>
      <tr>
        <td id="L5292" class="blob-num js-line-number" data-line-number="5292"></td>
        <td id="LC5292" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5293" class="blob-num js-line-number" data-line-number="5293"></td>
        <td id="LC5293" class="blob-code js-file-line"><span class="pl-s3">Tileset</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileProperties</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tileId</span>) {</td>
      </tr>
      <tr>
        <td id="L5294" class="blob-num js-line-number" data-line-number="5294"></td>
        <td id="LC5294" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tileId) {</td>
      </tr>
      <tr>
        <td id="L5295" class="blob-num js-line-number" data-line-number="5295"></td>
        <td id="LC5295" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5296" class="blob-num js-line-number" data-line-number="5296"></td>
        <td id="LC5296" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5297" class="blob-num js-line-number" data-line-number="5297"></td>
        <td id="LC5297" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5298" class="blob-num js-line-number" data-line-number="5298"></td>
        <td id="LC5298" class="blob-code js-file-line">    <span class="pl-s">var</span> flags <span class="pl-k">=</span> Tileset.FLAGS,</td>
      </tr>
      <tr>
        <td id="L5299" class="blob-num js-line-number" data-line-number="5299"></td>
        <td id="LC5299" class="blob-code js-file-line">        flippedX <span class="pl-k">=</span> tileId <span class="pl-k">&amp;</span> flags.FLIPPED_HORZ,</td>
      </tr>
      <tr>
        <td id="L5300" class="blob-num js-line-number" data-line-number="5300"></td>
        <td id="LC5300" class="blob-code js-file-line">        flippedY <span class="pl-k">=</span> tileId <span class="pl-k">&amp;</span> flags.FLIPPED_VERT,</td>
      </tr>
      <tr>
        <td id="L5301" class="blob-num js-line-number" data-line-number="5301"></td>
        <td id="LC5301" class="blob-code js-file-line">        flippedAD <span class="pl-k">=</span> tileId <span class="pl-k">&amp;</span> flags.FLIPPED_ANTI_DIAG;</td>
      </tr>
      <tr>
        <td id="L5302" class="blob-num js-line-number" data-line-number="5302"></td>
        <td id="LC5302" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5303" class="blob-num js-line-number" data-line-number="5303"></td>
        <td id="LC5303" class="blob-code js-file-line">    tileId <span class="pl-k">=</span> (tileId <span class="pl-k">&amp;</span> <span class="pl-k">~</span>Tileset.FLAGS.ALL) <span class="pl-k">-</span> <span class="pl-v">this</span>.firstgid;</td>
      </tr>
      <tr>
        <td id="L5304" class="blob-num js-line-number" data-line-number="5304"></td>
        <td id="LC5304" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5305" class="blob-num js-line-number" data-line-number="5305"></td>
        <td id="LC5305" class="blob-code js-file-line">    <span class="pl-c">// if less than 0, then this id isn&#39;t in this tileset</span></td>
      </tr>
      <tr>
        <td id="L5306" class="blob-num js-line-number" data-line-number="5306"></td>
        <td id="LC5306" class="blob-code js-file-line">    <span class="pl-k">if</span> (tileId <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5307" class="blob-num js-line-number" data-line-number="5307"></td>
        <td id="LC5307" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5308" class="blob-num js-line-number" data-line-number="5308"></td>
        <td id="LC5308" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5309" class="blob-num js-line-number" data-line-number="5309"></td>
        <td id="LC5309" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5310" class="blob-num js-line-number" data-line-number="5310"></td>
        <td id="LC5310" class="blob-code js-file-line">    <span class="pl-s">var</span> props <span class="pl-k">=</span> <span class="pl-v">this</span>.tileproperties[tileId] <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L5311" class="blob-num js-line-number" data-line-number="5311"></td>
        <td id="LC5311" class="blob-code js-file-line">        <span class="pl-c">//get this value</span></td>
      </tr>
      <tr>
        <td id="L5312" class="blob-num js-line-number" data-line-number="5312"></td>
        <td id="LC5312" class="blob-code js-file-line">        <span class="pl-v">this</span>.tileproperties[tileId] <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5313" class="blob-num js-line-number" data-line-number="5313"></td>
        <td id="LC5313" class="blob-code js-file-line">        <span class="pl-c">//set this id to default values and cache</span></td>
      </tr>
      <tr>
        <td id="L5314" class="blob-num js-line-number" data-line-number="5314"></td>
        <td id="LC5314" class="blob-code js-file-line">        <span class="pl-v">this</span>.tileproperties[tileId] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5315" class="blob-num js-line-number" data-line-number="5315"></td>
        <td id="LC5315" class="blob-code js-file-line">            collides<span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L5316" class="blob-num js-line-number" data-line-number="5316"></td>
        <td id="LC5316" class="blob-code js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5317" class="blob-num js-line-number" data-line-number="5317"></td>
        <td id="LC5317" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5318" class="blob-num js-line-number" data-line-number="5318"></td>
        <td id="LC5318" class="blob-code js-file-line">    props.flippedX <span class="pl-k">=</span> flippedX;</td>
      </tr>
      <tr>
        <td id="L5319" class="blob-num js-line-number" data-line-number="5319"></td>
        <td id="LC5319" class="blob-code js-file-line">    props.flippedY <span class="pl-k">=</span> flippedY;</td>
      </tr>
      <tr>
        <td id="L5320" class="blob-num js-line-number" data-line-number="5320"></td>
        <td id="LC5320" class="blob-code js-file-line">    props.flippedAD <span class="pl-k">=</span> flippedAD;</td>
      </tr>
      <tr>
        <td id="L5321" class="blob-num js-line-number" data-line-number="5321"></td>
        <td id="LC5321" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5322" class="blob-num js-line-number" data-line-number="5322"></td>
        <td id="LC5322" class="blob-code js-file-line">    <span class="pl-k">return</span> props;</td>
      </tr>
      <tr>
        <td id="L5323" class="blob-num js-line-number" data-line-number="5323"></td>
        <td id="LC5323" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5324" class="blob-num js-line-number" data-line-number="5324"></td>
        <td id="LC5324" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5325" class="blob-num js-line-number" data-line-number="5325"></td>
        <td id="LC5325" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5326" class="blob-num js-line-number" data-line-number="5326"></td>
        <td id="LC5326" class="blob-code js-file-line"><span class="pl-c"> * Gets the tile animations for a tile based on it&#39;s ID</span></td>
      </tr>
      <tr>
        <td id="L5327" class="blob-num js-line-number" data-line-number="5327"></td>
        <td id="LC5327" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5328" class="blob-num js-line-number" data-line-number="5328"></td>
        <td id="LC5328" class="blob-code js-file-line"><span class="pl-c"> * @method getTileProperties</span></td>
      </tr>
      <tr>
        <td id="L5329" class="blob-num js-line-number" data-line-number="5329"></td>
        <td id="LC5329" class="blob-code js-file-line"><span class="pl-c"> * @param tileId {Number} The id of the tile to get the animation frames for</span></td>
      </tr>
      <tr>
        <td id="L5330" class="blob-num js-line-number" data-line-number="5330"></td>
        <td id="LC5330" class="blob-code js-file-line"><span class="pl-c"> * @return {Phaser.FrameData} The frame data of the tile</span></td>
      </tr>
      <tr>
        <td id="L5331" class="blob-num js-line-number" data-line-number="5331"></td>
        <td id="LC5331" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5332" class="blob-num js-line-number" data-line-number="5332"></td>
        <td id="LC5332" class="blob-code js-file-line"><span class="pl-s3">Tileset</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileAnimations</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tileId</span>) {</td>
      </tr>
      <tr>
        <td id="L5333" class="blob-num js-line-number" data-line-number="5333"></td>
        <td id="LC5333" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tileId) {</td>
      </tr>
      <tr>
        <td id="L5334" class="blob-num js-line-number" data-line-number="5334"></td>
        <td id="LC5334" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5335" class="blob-num js-line-number" data-line-number="5335"></td>
        <td id="LC5335" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5336" class="blob-num js-line-number" data-line-number="5336"></td>
        <td id="LC5336" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5337" class="blob-num js-line-number" data-line-number="5337"></td>
        <td id="LC5337" class="blob-code js-file-line">    tileId <span class="pl-k">=</span> (tileId <span class="pl-k">&amp;</span> <span class="pl-k">~</span>Tileset.FLAGS.ALL) <span class="pl-k">-</span> <span class="pl-v">this</span>.firstgid;</td>
      </tr>
      <tr>
        <td id="L5338" class="blob-num js-line-number" data-line-number="5338"></td>
        <td id="LC5338" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5339" class="blob-num js-line-number" data-line-number="5339"></td>
        <td id="LC5339" class="blob-code js-file-line">    <span class="pl-c">// if less than 0, then this id isn&#39;t in this tileset</span></td>
      </tr>
      <tr>
        <td id="L5340" class="blob-num js-line-number" data-line-number="5340"></td>
        <td id="LC5340" class="blob-code js-file-line">    <span class="pl-k">if</span> (tileId <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5341" class="blob-num js-line-number" data-line-number="5341"></td>
        <td id="LC5341" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5342" class="blob-num js-line-number" data-line-number="5342"></td>
        <td id="LC5342" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5343" class="blob-num js-line-number" data-line-number="5343"></td>
        <td id="LC5343" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5344" class="blob-num js-line-number" data-line-number="5344"></td>
        <td id="LC5344" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.tileanimations[tileId];</td>
      </tr>
      <tr>
        <td id="L5345" class="blob-num js-line-number" data-line-number="5345"></td>
        <td id="LC5345" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5346" class="blob-num js-line-number" data-line-number="5346"></td>
        <td id="LC5346" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5347" class="blob-num js-line-number" data-line-number="5347"></td>
        <td id="LC5347" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5348" class="blob-num js-line-number" data-line-number="5348"></td>
        <td id="LC5348" class="blob-code js-file-line"><span class="pl-c"> * Gets the tile texture for a tile based on it&#39;s ID</span></td>
      </tr>
      <tr>
        <td id="L5349" class="blob-num js-line-number" data-line-number="5349"></td>
        <td id="LC5349" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5350" class="blob-num js-line-number" data-line-number="5350"></td>
        <td id="LC5350" class="blob-code js-file-line"><span class="pl-c"> * @method getTileTexture</span></td>
      </tr>
      <tr>
        <td id="L5351" class="blob-num js-line-number" data-line-number="5351"></td>
        <td id="LC5351" class="blob-code js-file-line"><span class="pl-c"> * @param tileId {Number} The id of the tile to get the texture for</span></td>
      </tr>
      <tr>
        <td id="L5352" class="blob-num js-line-number" data-line-number="5352"></td>
        <td id="LC5352" class="blob-code js-file-line"><span class="pl-c"> * @return {Texture} The texture for the tile</span></td>
      </tr>
      <tr>
        <td id="L5353" class="blob-num js-line-number" data-line-number="5353"></td>
        <td id="LC5353" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5354" class="blob-num js-line-number" data-line-number="5354"></td>
        <td id="LC5354" class="blob-code js-file-line"><span class="pl-s3">Tileset</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTileTexture</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tileId</span>) {</td>
      </tr>
      <tr>
        <td id="L5355" class="blob-num js-line-number" data-line-number="5355"></td>
        <td id="LC5355" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tileId) {</td>
      </tr>
      <tr>
        <td id="L5356" class="blob-num js-line-number" data-line-number="5356"></td>
        <td id="LC5356" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5357" class="blob-num js-line-number" data-line-number="5357"></td>
        <td id="LC5357" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5358" class="blob-num js-line-number" data-line-number="5358"></td>
        <td id="LC5358" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5359" class="blob-num js-line-number" data-line-number="5359"></td>
        <td id="LC5359" class="blob-code js-file-line">    <span class="pl-c">// get the internal ID of the tile in this set (0 indexed)</span></td>
      </tr>
      <tr>
        <td id="L5360" class="blob-num js-line-number" data-line-number="5360"></td>
        <td id="LC5360" class="blob-code js-file-line">    tileId <span class="pl-k">=</span> (tileId <span class="pl-k">&amp;</span> <span class="pl-k">~</span>Tileset.FLAGS.ALL) <span class="pl-k">-</span> <span class="pl-v">this</span>.firstgid;</td>
      </tr>
      <tr>
        <td id="L5361" class="blob-num js-line-number" data-line-number="5361"></td>
        <td id="LC5361" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5362" class="blob-num js-line-number" data-line-number="5362"></td>
        <td id="LC5362" class="blob-code js-file-line">    <span class="pl-c">// if less than 0, then this id isn&#39;t in this tileset</span></td>
      </tr>
      <tr>
        <td id="L5363" class="blob-num js-line-number" data-line-number="5363"></td>
        <td id="LC5363" class="blob-code js-file-line">    <span class="pl-k">if</span> (tileId <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5364" class="blob-num js-line-number" data-line-number="5364"></td>
        <td id="LC5364" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5365" class="blob-num js-line-number" data-line-number="5365"></td>
        <td id="LC5365" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5366" class="blob-num js-line-number" data-line-number="5366"></td>
        <td id="LC5366" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5367" class="blob-num js-line-number" data-line-number="5367"></td>
        <td id="LC5367" class="blob-code js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.textures[tileId];</td>
      </tr>
      <tr>
        <td id="L5368" class="blob-num js-line-number" data-line-number="5368"></td>
        <td id="LC5368" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5369" class="blob-num js-line-number" data-line-number="5369"></td>
        <td id="LC5369" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5370" class="blob-num js-line-number" data-line-number="5370"></td>
        <td id="LC5370" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5371" class="blob-num js-line-number" data-line-number="5371"></td>
        <td id="LC5371" class="blob-code js-file-line"><span class="pl-c"> * Returns whether or not this tileset contains the given tile guid</span></td>
      </tr>
      <tr>
        <td id="L5372" class="blob-num js-line-number" data-line-number="5372"></td>
        <td id="LC5372" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5373" class="blob-num js-line-number" data-line-number="5373"></td>
        <td id="LC5373" class="blob-code js-file-line"><span class="pl-c"> * @method contains</span></td>
      </tr>
      <tr>
        <td id="L5374" class="blob-num js-line-number" data-line-number="5374"></td>
        <td id="LC5374" class="blob-code js-file-line"><span class="pl-c"> * @param tileId {Number} The ID of the tile to check</span></td>
      </tr>
      <tr>
        <td id="L5375" class="blob-num js-line-number" data-line-number="5375"></td>
        <td id="LC5375" class="blob-code js-file-line"><span class="pl-c"> * @return {Boolean}</span></td>
      </tr>
      <tr>
        <td id="L5376" class="blob-num js-line-number" data-line-number="5376"></td>
        <td id="LC5376" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5377" class="blob-num js-line-number" data-line-number="5377"></td>
        <td id="LC5377" class="blob-code js-file-line"><span class="pl-s3">Tileset</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">contains</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">tileId</span>) {</td>
      </tr>
      <tr>
        <td id="L5378" class="blob-num js-line-number" data-line-number="5378"></td>
        <td id="LC5378" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>tileId) {</td>
      </tr>
      <tr>
        <td id="L5379" class="blob-num js-line-number" data-line-number="5379"></td>
        <td id="LC5379" class="blob-code js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5380" class="blob-num js-line-number" data-line-number="5380"></td>
        <td id="LC5380" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5381" class="blob-num js-line-number" data-line-number="5381"></td>
        <td id="LC5381" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5382" class="blob-num js-line-number" data-line-number="5382"></td>
        <td id="LC5382" class="blob-code js-file-line">    tileId <span class="pl-k">&amp;=</span> <span class="pl-k">~</span>Tileset.FLAGS.ALL;</td>
      </tr>
      <tr>
        <td id="L5383" class="blob-num js-line-number" data-line-number="5383"></td>
        <td id="LC5383" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5384" class="blob-num js-line-number" data-line-number="5384"></td>
        <td id="LC5384" class="blob-code js-file-line">    <span class="pl-k">return</span> (tileId <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.firstgid <span class="pl-k">&amp;&amp;</span> tileId <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.lastgid);</td>
      </tr>
      <tr>
        <td id="L5385" class="blob-num js-line-number" data-line-number="5385"></td>
        <td id="LC5385" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5386" class="blob-num js-line-number" data-line-number="5386"></td>
        <td id="LC5386" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5387" class="blob-num js-line-number" data-line-number="5387"></td>
        <td id="LC5387" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5388" class="blob-num js-line-number" data-line-number="5388"></td>
        <td id="LC5388" class="blob-code js-file-line"><span class="pl-c"> * Tileset GID flags, these flags are set on a tile&#39;s ID to give it a special property</span></td>
      </tr>
      <tr>
        <td id="L5389" class="blob-num js-line-number" data-line-number="5389"></td>
        <td id="LC5389" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5390" class="blob-num js-line-number" data-line-number="5390"></td>
        <td id="LC5390" class="blob-code js-file-line"><span class="pl-c"> * @property FLAGS</span></td>
      </tr>
      <tr>
        <td id="L5391" class="blob-num js-line-number" data-line-number="5391"></td>
        <td id="LC5391" class="blob-code js-file-line"><span class="pl-c"> * @static</span></td>
      </tr>
      <tr>
        <td id="L5392" class="blob-num js-line-number" data-line-number="5392"></td>
        <td id="LC5392" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5393" class="blob-num js-line-number" data-line-number="5393"></td>
        <td id="LC5393" class="blob-code js-file-line">Tileset.FLAGS <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5394" class="blob-num js-line-number" data-line-number="5394"></td>
        <td id="LC5394" class="blob-code js-file-line">    FLIPPED_HORZ<span class="pl-k">:</span> <span class="pl-c1">0x80000000</span>,</td>
      </tr>
      <tr>
        <td id="L5395" class="blob-num js-line-number" data-line-number="5395"></td>
        <td id="LC5395" class="blob-code js-file-line">    FLIPPED_VERT<span class="pl-k">:</span> <span class="pl-c1">0x40000000</span>,</td>
      </tr>
      <tr>
        <td id="L5396" class="blob-num js-line-number" data-line-number="5396"></td>
        <td id="LC5396" class="blob-code js-file-line">    FLIPPED_ANTI_DIAG<span class="pl-k">:</span> <span class="pl-c1">0x20000000</span></td>
      </tr>
      <tr>
        <td id="L5397" class="blob-num js-line-number" data-line-number="5397"></td>
        <td id="LC5397" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5398" class="blob-num js-line-number" data-line-number="5398"></td>
        <td id="LC5398" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5399" class="blob-num js-line-number" data-line-number="5399"></td>
        <td id="LC5399" class="blob-code js-file-line"><span class="pl-s">var</span> mask <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5400" class="blob-num js-line-number" data-line-number="5400"></td>
        <td id="LC5400" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> f <span class="pl-k">in</span> Tileset.FLAGS) {</td>
      </tr>
      <tr>
        <td id="L5401" class="blob-num js-line-number" data-line-number="5401"></td>
        <td id="LC5401" class="blob-code js-file-line">    mask |<span class="pl-k">=</span> Tileset.FLAGS[f];</td>
      </tr>
      <tr>
        <td id="L5402" class="blob-num js-line-number" data-line-number="5402"></td>
        <td id="LC5402" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5403" class="blob-num js-line-number" data-line-number="5403"></td>
        <td id="LC5403" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5404" class="blob-num js-line-number" data-line-number="5404"></td>
        <td id="LC5404" class="blob-code js-file-line">Tileset.FLAGS.ALL <span class="pl-k">=</span> mask;</td>
      </tr>
      <tr>
        <td id="L5405" class="blob-num js-line-number" data-line-number="5405"></td>
        <td id="LC5405" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5406" class="blob-num js-line-number" data-line-number="5406"></td>
        <td id="LC5406" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>../utils<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>}],<span class="pl-c1">18</span><span class="pl-k">:</span>[<span class="pl-st">function</span>(<span class="pl-vpf">require</span>,<span class="pl-vpf">module</span>,<span class="pl-vpf">exports</span>){</td>
      </tr>
      <tr>
        <td id="L5407" class="blob-num js-line-number" data-line-number="5407"></td>
        <td id="LC5407" class="blob-code js-file-line"><span class="pl-c">/* jshint maxlen:200 */</span></td>
      </tr>
      <tr>
        <td id="L5408" class="blob-num js-line-number" data-line-number="5408"></td>
        <td id="LC5408" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5409" class="blob-num js-line-number" data-line-number="5409"></td>
        <td id="LC5409" class="blob-code js-file-line"><span class="pl-s">var</span> zlib <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>zlibjs<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L5410" class="blob-num js-line-number" data-line-number="5410"></td>
        <td id="LC5410" class="blob-code js-file-line">    Buffer <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>buffer<span class="pl-pds">&#39;</span></span>).Buffer,</td>
      </tr>
      <tr>
        <td id="L5411" class="blob-num js-line-number" data-line-number="5411"></td>
        <td id="LC5411" class="blob-code js-file-line">    decodeB64 <span class="pl-k">=</span> (<span class="pl-k">typeof</span> <span class="pl-s3">window</span> <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-s3">window</span>.atob) <span class="pl-k">||</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Base64<span class="pl-pds">&#39;</span></span>).atob;</td>
      </tr>
      <tr>
        <td id="L5412" class="blob-num js-line-number" data-line-number="5412"></td>
        <td id="LC5412" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5413" class="blob-num js-line-number" data-line-number="5413"></td>
        <td id="LC5413" class="blob-code js-file-line"><span class="pl-s">var</span> utils <span class="pl-k">=</span> <span class="pl-sv">module</span>.exports <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5414" class="blob-num js-line-number" data-line-number="5414"></td>
        <td id="LC5414" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5415" class="blob-num js-line-number" data-line-number="5415"></td>
        <td id="LC5415" class="blob-code js-file-line"><span class="pl-s3">utils</span>.<span class="pl-en">stringToBuffer</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">str</span>) {</td>
      </tr>
      <tr>
        <td id="L5416" class="blob-num js-line-number" data-line-number="5416"></td>
        <td id="LC5416" class="blob-code js-file-line">    <span class="pl-s">var</span> len <span class="pl-k">=</span> str.<span class="pl-sc">length</span>,</td>
      </tr>
      <tr>
        <td id="L5417" class="blob-num js-line-number" data-line-number="5417"></td>
        <td id="LC5417" class="blob-code js-file-line">        buf <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Buffer</span>(len);</td>
      </tr>
      <tr>
        <td id="L5418" class="blob-num js-line-number" data-line-number="5418"></td>
        <td id="LC5418" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5419" class="blob-num js-line-number" data-line-number="5419"></td>
        <td id="LC5419" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> len; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5420" class="blob-num js-line-number" data-line-number="5420"></td>
        <td id="LC5420" class="blob-code js-file-line">        buf[i] <span class="pl-k">=</span> str.<span class="pl-s3">charCodeAt</span>(i);</td>
      </tr>
      <tr>
        <td id="L5421" class="blob-num js-line-number" data-line-number="5421"></td>
        <td id="LC5421" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5422" class="blob-num js-line-number" data-line-number="5422"></td>
        <td id="LC5422" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5423" class="blob-num js-line-number" data-line-number="5423"></td>
        <td id="LC5423" class="blob-code js-file-line">    <span class="pl-k">return</span> buf;</td>
      </tr>
      <tr>
        <td id="L5424" class="blob-num js-line-number" data-line-number="5424"></td>
        <td id="LC5424" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5425" class="blob-num js-line-number" data-line-number="5425"></td>
        <td id="LC5425" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5426" class="blob-num js-line-number" data-line-number="5426"></td>
        <td id="LC5426" class="blob-code js-file-line"><span class="pl-s3">utils</span>.<span class="pl-en">cacheKey</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">key</span>, <span class="pl-vpf">type</span>, <span class="pl-vpf">name</span>) {</td>
      </tr>
      <tr>
        <td id="L5427" class="blob-num js-line-number" data-line-number="5427"></td>
        <td id="LC5427" class="blob-code js-file-line">    <span class="pl-k">return</span> key <span class="pl-k">+</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>_<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> type <span class="pl-k">+</span> (name <span class="pl-k">?</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>_<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name <span class="pl-k">:</span> <span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5428" class="blob-num js-line-number" data-line-number="5428"></td>
        <td id="LC5428" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5429" class="blob-num js-line-number" data-line-number="5429"></td>
        <td id="LC5429" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5430" class="blob-num js-line-number" data-line-number="5430"></td>
        <td id="LC5430" class="blob-code js-file-line"><span class="pl-s3">utils</span>.<span class="pl-en">decompressBase64Data</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">raw</span>, <span class="pl-vpf">encoding</span>, <span class="pl-vpf">compression</span>) {</td>
      </tr>
      <tr>
        <td id="L5431" class="blob-num js-line-number" data-line-number="5431"></td>
        <td id="LC5431" class="blob-code js-file-line">    <span class="pl-c">//TODO: This assumes base64 encoding, need to check encoding param</span></td>
      </tr>
      <tr>
        <td id="L5432" class="blob-num js-line-number" data-line-number="5432"></td>
        <td id="LC5432" class="blob-code js-file-line">    <span class="pl-s">var</span> str <span class="pl-k">=</span> decodeB64(raw),</td>
      </tr>
      <tr>
        <td id="L5433" class="blob-num js-line-number" data-line-number="5433"></td>
        <td id="LC5433" class="blob-code js-file-line">        buf <span class="pl-k">=</span> utils.stringToBuffer(str);</td>
      </tr>
      <tr>
        <td id="L5434" class="blob-num js-line-number" data-line-number="5434"></td>
        <td id="LC5434" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5435" class="blob-num js-line-number" data-line-number="5435"></td>
        <td id="LC5435" class="blob-code js-file-line">    <span class="pl-c">//decompress</span></td>
      </tr>
      <tr>
        <td id="L5436" class="blob-num js-line-number" data-line-number="5436"></td>
        <td id="LC5436" class="blob-code js-file-line">    <span class="pl-k">if</span> (compression <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>gzip<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5437" class="blob-num js-line-number" data-line-number="5437"></td>
        <td id="LC5437" class="blob-code js-file-line">        <span class="pl-k">return</span> zlib.gunzipSync(buf);</td>
      </tr>
      <tr>
        <td id="L5438" class="blob-num js-line-number" data-line-number="5438"></td>
        <td id="LC5438" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5439" class="blob-num js-line-number" data-line-number="5439"></td>
        <td id="LC5439" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (compression <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>zlib<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5440" class="blob-num js-line-number" data-line-number="5440"></td>
        <td id="LC5440" class="blob-code js-file-line">        <span class="pl-k">return</span> zlib.inflateSync(buf);</td>
      </tr>
      <tr>
        <td id="L5441" class="blob-num js-line-number" data-line-number="5441"></td>
        <td id="LC5441" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5442" class="blob-num js-line-number" data-line-number="5442"></td>
        <td id="LC5442" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5443" class="blob-num js-line-number" data-line-number="5443"></td>
        <td id="LC5443" class="blob-code js-file-line">    <span class="pl-k">return</span> buf;</td>
      </tr>
      <tr>
        <td id="L5444" class="blob-num js-line-number" data-line-number="5444"></td>
        <td id="LC5444" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5445" class="blob-num js-line-number" data-line-number="5445"></td>
        <td id="LC5445" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5446" class="blob-num js-line-number" data-line-number="5446"></td>
        <td id="LC5446" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5447" class="blob-num js-line-number" data-line-number="5447"></td>
        <td id="LC5447" class="blob-code js-file-line"><span class="pl-c"> * Parses an array of numbers that represent a hitArea into the actual shape.</span></td>
      </tr>
      <tr>
        <td id="L5448" class="blob-num js-line-number" data-line-number="5448"></td>
        <td id="LC5448" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5449" class="blob-num js-line-number" data-line-number="5449"></td>
        <td id="LC5449" class="blob-code js-file-line"><span class="pl-c"> * For example: `[1, 1, 15]` is a Circle (`[x, y, radius]`); `[1, 1, 15, 15]` is a Rectangle</span></td>
      </tr>
      <tr>
        <td id="L5450" class="blob-num js-line-number" data-line-number="5450"></td>
        <td id="LC5450" class="blob-code js-file-line"><span class="pl-c"> * (`[x, y, width, height]`); and any length &gt;= 5 is a polygon in the form `[x1, y1, x2, y2, ..., xN, yN]`.</span></td>
      </tr>
      <tr>
        <td id="L5451" class="blob-num js-line-number" data-line-number="5451"></td>
        <td id="LC5451" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5452" class="blob-num js-line-number" data-line-number="5452"></td>
        <td id="LC5452" class="blob-code js-file-line"><span class="pl-c"> * @method parseHitArea</span></td>
      </tr>
      <tr>
        <td id="L5453" class="blob-num js-line-number" data-line-number="5453"></td>
        <td id="LC5453" class="blob-code js-file-line"><span class="pl-c"> * @param value {Array&lt;Number&gt;} The array to parse</span></td>
      </tr>
      <tr>
        <td id="L5454" class="blob-num js-line-number" data-line-number="5454"></td>
        <td id="LC5454" class="blob-code js-file-line"><span class="pl-c"> * @return {Circle|Rectangle|Polygon} The parsed out shape</span></td>
      </tr>
      <tr>
        <td id="L5455" class="blob-num js-line-number" data-line-number="5455"></td>
        <td id="LC5455" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5456" class="blob-num js-line-number" data-line-number="5456"></td>
        <td id="LC5456" class="blob-code js-file-line"><span class="pl-s3">utils</span>.<span class="pl-en">parseHitArea</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">hv</span>) {</td>
      </tr>
      <tr>
        <td id="L5457" class="blob-num js-line-number" data-line-number="5457"></td>
        <td id="LC5457" class="blob-code js-file-line">    <span class="pl-s">var</span> shape;</td>
      </tr>
      <tr>
        <td id="L5458" class="blob-num js-line-number" data-line-number="5458"></td>
        <td id="LC5458" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5459" class="blob-num js-line-number" data-line-number="5459"></td>
        <td id="LC5459" class="blob-code js-file-line">    <span class="pl-c">//odd number of values</span></td>
      </tr>
      <tr>
        <td id="L5460" class="blob-num js-line-number" data-line-number="5460"></td>
        <td id="LC5460" class="blob-code js-file-line">    <span class="pl-k">if</span> (hv.<span class="pl-sc">length</span> <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> hv.<span class="pl-sc">length</span> <span class="pl-k">!==</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L5461" class="blob-num js-line-number" data-line-number="5461"></td>
        <td id="LC5461" class="blob-code js-file-line">        <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">RangeError</span>(</td>
      </tr>
      <tr>
        <td id="L5462" class="blob-num js-line-number" data-line-number="5462"></td>
        <td id="LC5462" class="blob-code js-file-line">            <span class="pl-s1"><span class="pl-pds">&#39;</span>Strange number of values for hitArea! Should be a flat array of values, like: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5463" class="blob-num js-line-number" data-line-number="5463"></td>
        <td id="LC5463" class="blob-code js-file-line">            <span class="pl-s1"><span class="pl-pds">&#39;</span>[cx,cy,di] for a circle, [x,y,w,h] for a rectangle, or [x,y,x,y,...] for other polygons.<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L5464" class="blob-num js-line-number" data-line-number="5464"></td>
        <td id="LC5464" class="blob-code js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L5465" class="blob-num js-line-number" data-line-number="5465"></td>
        <td id="LC5465" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5466" class="blob-num js-line-number" data-line-number="5466"></td>
        <td id="LC5466" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5467" class="blob-num js-line-number" data-line-number="5467"></td>
        <td id="LC5467" class="blob-code js-file-line">    <span class="pl-c">//a circle x,y,r</span></td>
      </tr>
      <tr>
        <td id="L5468" class="blob-num js-line-number" data-line-number="5468"></td>
        <td id="LC5468" class="blob-code js-file-line">    <span class="pl-k">if</span> (hv.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L5469" class="blob-num js-line-number" data-line-number="5469"></td>
        <td id="LC5469" class="blob-code js-file-line">        shape <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Circle</span>(hv[<span class="pl-c1">0</span>], hv[<span class="pl-c1">1</span>], hv[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L5470" class="blob-num js-line-number" data-line-number="5470"></td>
        <td id="LC5470" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5471" class="blob-num js-line-number" data-line-number="5471"></td>
        <td id="LC5471" class="blob-code js-file-line">    <span class="pl-c">//a rectangle x,y,w,h</span></td>
      </tr>
      <tr>
        <td id="L5472" class="blob-num js-line-number" data-line-number="5472"></td>
        <td id="LC5472" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (hv.<span class="pl-sc">length</span> <span class="pl-k">===</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L5473" class="blob-num js-line-number" data-line-number="5473"></td>
        <td id="LC5473" class="blob-code js-file-line">        shape <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Rectangle</span>(hv[<span class="pl-c1">0</span>], hv[<span class="pl-c1">1</span>], hv[<span class="pl-c1">2</span>], hv[<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L5474" class="blob-num js-line-number" data-line-number="5474"></td>
        <td id="LC5474" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5475" class="blob-num js-line-number" data-line-number="5475"></td>
        <td id="LC5475" class="blob-code js-file-line">    <span class="pl-c">//generic polygon</span></td>
      </tr>
      <tr>
        <td id="L5476" class="blob-num js-line-number" data-line-number="5476"></td>
        <td id="LC5476" class="blob-code js-file-line">    <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5477" class="blob-num js-line-number" data-line-number="5477"></td>
        <td id="LC5477" class="blob-code js-file-line">        shape <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Phaser.Polygon</span>(hv);</td>
      </tr>
      <tr>
        <td id="L5478" class="blob-num js-line-number" data-line-number="5478"></td>
        <td id="LC5478" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5479" class="blob-num js-line-number" data-line-number="5479"></td>
        <td id="LC5479" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5480" class="blob-num js-line-number" data-line-number="5480"></td>
        <td id="LC5480" class="blob-code js-file-line">    <span class="pl-k">return</span> shape;</td>
      </tr>
      <tr>
        <td id="L5481" class="blob-num js-line-number" data-line-number="5481"></td>
        <td id="LC5481" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5482" class="blob-num js-line-number" data-line-number="5482"></td>
        <td id="LC5482" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5483" class="blob-num js-line-number" data-line-number="5483"></td>
        <td id="LC5483" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5484" class="blob-num js-line-number" data-line-number="5484"></td>
        <td id="LC5484" class="blob-code js-file-line"><span class="pl-c"> * Parses an object of string properties into potential javascript types. First it attempts to</span></td>
      </tr>
      <tr>
        <td id="L5485" class="blob-num js-line-number" data-line-number="5485"></td>
        <td id="LC5485" class="blob-code js-file-line"><span class="pl-c"> * convert to a number, if that fails it checks for the string &#39;true&#39; or &#39;false&#39; and changes it</span></td>
      </tr>
      <tr>
        <td id="L5486" class="blob-num js-line-number" data-line-number="5486"></td>
        <td id="LC5486" class="blob-code js-file-line"><span class="pl-c"> * to the actual Boolean value, then it attempts to parse a string as JSON.</span></td>
      </tr>
      <tr>
        <td id="L5487" class="blob-num js-line-number" data-line-number="5487"></td>
        <td id="LC5487" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5488" class="blob-num js-line-number" data-line-number="5488"></td>
        <td id="LC5488" class="blob-code js-file-line"><span class="pl-c"> * @method parseTiledProperties</span></td>
      </tr>
      <tr>
        <td id="L5489" class="blob-num js-line-number" data-line-number="5489"></td>
        <td id="LC5489" class="blob-code js-file-line"><span class="pl-c"> * @param value {Array&lt;Number&gt;} The array to parse</span></td>
      </tr>
      <tr>
        <td id="L5490" class="blob-num js-line-number" data-line-number="5490"></td>
        <td id="LC5490" class="blob-code js-file-line"><span class="pl-c"> * @return {Circle|Rectangle|Polygon} The parsed out shape</span></td>
      </tr>
      <tr>
        <td id="L5491" class="blob-num js-line-number" data-line-number="5491"></td>
        <td id="LC5491" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5492" class="blob-num js-line-number" data-line-number="5492"></td>
        <td id="LC5492" class="blob-code js-file-line"><span class="pl-s3">utils</span>.<span class="pl-en">parseTiledProperties</span> <span class="pl-k">=</span> <span class="pl-st">function</span> (<span class="pl-vpf">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L5493" class="blob-num js-line-number" data-line-number="5493"></td>
        <td id="LC5493" class="blob-code js-file-line">    obj <span class="pl-k">=</span> obj <span class="pl-k">||</span> {};</td>
      </tr>
      <tr>
        <td id="L5494" class="blob-num js-line-number" data-line-number="5494"></td>
        <td id="LC5494" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5495" class="blob-num js-line-number" data-line-number="5495"></td>
        <td id="LC5495" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>obj <span class="pl-k">||</span> obj.__tiledparsed) {</td>
      </tr>
      <tr>
        <td id="L5496" class="blob-num js-line-number" data-line-number="5496"></td>
        <td id="LC5496" class="blob-code js-file-line">        <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L5497" class="blob-num js-line-number" data-line-number="5497"></td>
        <td id="LC5497" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5498" class="blob-num js-line-number" data-line-number="5498"></td>
        <td id="LC5498" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5499" class="blob-num js-line-number" data-line-number="5499"></td>
        <td id="LC5499" class="blob-code js-file-line">    <span class="pl-k">for</span>(<span class="pl-s">var</span> k <span class="pl-k">in</span> obj) {</td>
      </tr>
      <tr>
        <td id="L5500" class="blob-num js-line-number" data-line-number="5500"></td>
        <td id="LC5500" class="blob-code js-file-line">        <span class="pl-s">var</span> v <span class="pl-k">=</span> obj[k],</td>
      </tr>
      <tr>
        <td id="L5501" class="blob-num js-line-number" data-line-number="5501"></td>
        <td id="LC5501" class="blob-code js-file-line">            n <span class="pl-k">=</span> <span class="pl-s3">parseFloat</span>(v, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L5502" class="blob-num js-line-number" data-line-number="5502"></td>
        <td id="LC5502" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5503" class="blob-num js-line-number" data-line-number="5503"></td>
        <td id="LC5503" class="blob-code js-file-line">        <span class="pl-c">// try to massage numbers</span></td>
      </tr>
      <tr>
        <td id="L5504" class="blob-num js-line-number" data-line-number="5504"></td>
        <td id="LC5504" class="blob-code js-file-line">        <span class="pl-k">if</span> (n <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> n) {</td>
      </tr>
      <tr>
        <td id="L5505" class="blob-num js-line-number" data-line-number="5505"></td>
        <td id="LC5505" class="blob-code js-file-line">            obj[k] <span class="pl-k">=</span> n;</td>
      </tr>
      <tr>
        <td id="L5506" class="blob-num js-line-number" data-line-number="5506"></td>
        <td id="LC5506" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5507" class="blob-num js-line-number" data-line-number="5507"></td>
        <td id="LC5507" class="blob-code js-file-line">        <span class="pl-c">// true values</span></td>
      </tr>
      <tr>
        <td id="L5508" class="blob-num js-line-number" data-line-number="5508"></td>
        <td id="LC5508" class="blob-code js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> (v <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>true<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5509" class="blob-num js-line-number" data-line-number="5509"></td>
        <td id="LC5509" class="blob-code js-file-line">            obj[k] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5510" class="blob-num js-line-number" data-line-number="5510"></td>
        <td id="LC5510" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5511" class="blob-num js-line-number" data-line-number="5511"></td>
        <td id="LC5511" class="blob-code js-file-line">        <span class="pl-c">// false values</span></td>
      </tr>
      <tr>
        <td id="L5512" class="blob-num js-line-number" data-line-number="5512"></td>
        <td id="LC5512" class="blob-code js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> (v <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>false<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5513" class="blob-num js-line-number" data-line-number="5513"></td>
        <td id="LC5513" class="blob-code js-file-line">            obj[k] <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5514" class="blob-num js-line-number" data-line-number="5514"></td>
        <td id="LC5514" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5515" class="blob-num js-line-number" data-line-number="5515"></td>
        <td id="LC5515" class="blob-code js-file-line">        <span class="pl-c">// anything else is either a string or json</span></td>
      </tr>
      <tr>
        <td id="L5516" class="blob-num js-line-number" data-line-number="5516"></td>
        <td id="LC5516" class="blob-code js-file-line">        <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5517" class="blob-num js-line-number" data-line-number="5517"></td>
        <td id="LC5517" class="blob-code js-file-line">            <span class="pl-k">try</span>{</td>
      </tr>
      <tr>
        <td id="L5518" class="blob-num js-line-number" data-line-number="5518"></td>
        <td id="LC5518" class="blob-code js-file-line">                v <span class="pl-k">=</span> JSON.<span class="pl-s3">parse</span>(v);</td>
      </tr>
      <tr>
        <td id="L5519" class="blob-num js-line-number" data-line-number="5519"></td>
        <td id="LC5519" class="blob-code js-file-line">                obj[k] <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L5520" class="blob-num js-line-number" data-line-number="5520"></td>
        <td id="LC5520" class="blob-code js-file-line">            } <span class="pl-k">catch</span>(e) {}</td>
      </tr>
      <tr>
        <td id="L5521" class="blob-num js-line-number" data-line-number="5521"></td>
        <td id="LC5521" class="blob-code js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5522" class="blob-num js-line-number" data-line-number="5522"></td>
        <td id="LC5522" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5523" class="blob-num js-line-number" data-line-number="5523"></td>
        <td id="LC5523" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5524" class="blob-num js-line-number" data-line-number="5524"></td>
        <td id="LC5524" class="blob-code js-file-line">    <span class="pl-k">if</span> (obj.hitArea) {</td>
      </tr>
      <tr>
        <td id="L5525" class="blob-num js-line-number" data-line-number="5525"></td>
        <td id="LC5525" class="blob-code js-file-line">        obj.hitArea <span class="pl-k">=</span> utils.parseHitArea(obj.hitArea);</td>
      </tr>
      <tr>
        <td id="L5526" class="blob-num js-line-number" data-line-number="5526"></td>
        <td id="LC5526" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5527" class="blob-num js-line-number" data-line-number="5527"></td>
        <td id="LC5527" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5528" class="blob-num js-line-number" data-line-number="5528"></td>
        <td id="LC5528" class="blob-code js-file-line">    <span class="pl-k">if</span> (obj.<span class="pl-sc">body</span> <span class="pl-k">===</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>static<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> obj.sensor) {</td>
      </tr>
      <tr>
        <td id="L5529" class="blob-num js-line-number" data-line-number="5529"></td>
        <td id="LC5529" class="blob-code js-file-line">        obj.mass <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L5530" class="blob-num js-line-number" data-line-number="5530"></td>
        <td id="LC5530" class="blob-code js-file-line">        obj.inertia <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L5531" class="blob-num js-line-number" data-line-number="5531"></td>
        <td id="LC5531" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5532" class="blob-num js-line-number" data-line-number="5532"></td>
        <td id="LC5532" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5533" class="blob-num js-line-number" data-line-number="5533"></td>
        <td id="LC5533" class="blob-code js-file-line">    obj.__tiledparsed <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5534" class="blob-num js-line-number" data-line-number="5534"></td>
        <td id="LC5534" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5535" class="blob-num js-line-number" data-line-number="5535"></td>
        <td id="LC5535" class="blob-code js-file-line">    <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L5536" class="blob-num js-line-number" data-line-number="5536"></td>
        <td id="LC5536" class="blob-code js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5537" class="blob-num js-line-number" data-line-number="5537"></td>
        <td id="LC5537" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5538" class="blob-num js-line-number" data-line-number="5538"></td>
        <td id="LC5538" class="blob-code js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5539" class="blob-num js-line-number" data-line-number="5539"></td>
        <td id="LC5539" class="blob-code js-file-line"><span class="pl-c"> * Parses an XML string into a Document object. Will use window.DOMParser</span></td>
      </tr>
      <tr>
        <td id="L5540" class="blob-num js-line-number" data-line-number="5540"></td>
        <td id="LC5540" class="blob-code js-file-line"><span class="pl-c"> * if available, falling back to Microsoft.XMLDOM ActiveXObject in IE.</span></td>
      </tr>
      <tr>
        <td id="L5541" class="blob-num js-line-number" data-line-number="5541"></td>
        <td id="LC5541" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5542" class="blob-num js-line-number" data-line-number="5542"></td>
        <td id="LC5542" class="blob-code js-file-line"><span class="pl-c"> * Eventually, it would be nice to include a node.js alternative as well</span></td>
      </tr>
      <tr>
        <td id="L5543" class="blob-num js-line-number" data-line-number="5543"></td>
        <td id="LC5543" class="blob-code js-file-line"><span class="pl-c"> * for running in that environment.</span></td>
      </tr>
      <tr>
        <td id="L5544" class="blob-num js-line-number" data-line-number="5544"></td>
        <td id="LC5544" class="blob-code js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5545" class="blob-num js-line-number" data-line-number="5545"></td>
        <td id="LC5545" class="blob-code js-file-line"><span class="pl-c"> * @method parseXML</span></td>
      </tr>
      <tr>
        <td id="L5546" class="blob-num js-line-number" data-line-number="5546"></td>
        <td id="LC5546" class="blob-code js-file-line"><span class="pl-c"> * @param xmlStr {String} The xml string to parse</span></td>
      </tr>
      <tr>
        <td id="L5547" class="blob-num js-line-number" data-line-number="5547"></td>
        <td id="LC5547" class="blob-code js-file-line"><span class="pl-c"> * @return {Document} An XML Document</span></td>
      </tr>
      <tr>
        <td id="L5548" class="blob-num js-line-number" data-line-number="5548"></td>
        <td id="LC5548" class="blob-code js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5549" class="blob-num js-line-number" data-line-number="5549"></td>
        <td id="LC5549" class="blob-code js-file-line"><span class="pl-c">// browser environment</span></td>
      </tr>
      <tr>
        <td id="L5550" class="blob-num js-line-number" data-line-number="5550"></td>
        <td id="LC5550" class="blob-code js-file-line"><span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-s3">window</span> <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5551" class="blob-num js-line-number" data-line-number="5551"></td>
        <td id="LC5551" class="blob-code js-file-line">    <span class="pl-c">//XML Parser in window</span></td>
      </tr>
      <tr>
        <td id="L5552" class="blob-num js-line-number" data-line-number="5552"></td>
        <td id="LC5552" class="blob-code js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-s3">window</span>.DOMParser <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5553" class="blob-num js-line-number" data-line-number="5553"></td>
        <td id="LC5553" class="blob-code js-file-line">        <span class="pl-s3">utils</span>.<span class="pl-en">parseXML</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">xmlStr</span>) {</td>
      </tr>
      <tr>
        <td id="L5554" class="blob-num js-line-number" data-line-number="5554"></td>
        <td id="LC5554" class="blob-code js-file-line">            <span class="pl-k">return</span> (<span class="pl-k">new</span> <span class="pl-en">window.DOMParser</span>()).parseFromString(xmlStr, <span class="pl-s1"><span class="pl-pds">&#39;</span>text/xml<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5555" class="blob-num js-line-number" data-line-number="5555"></td>
        <td id="LC5555" class="blob-code js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5556" class="blob-num js-line-number" data-line-number="5556"></td>
        <td id="LC5556" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5557" class="blob-num js-line-number" data-line-number="5557"></td>
        <td id="LC5557" class="blob-code js-file-line">    <span class="pl-c">//IE specific XML parser</span></td>
      </tr>
      <tr>
        <td id="L5558" class="blob-num js-line-number" data-line-number="5558"></td>
        <td id="LC5558" class="blob-code js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-s3">window</span>.ActiveXObject <span class="pl-k">!==</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">new</span> <span class="pl-en">window.ActiveXObject</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Microsoft.XMLDOM<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5559" class="blob-num js-line-number" data-line-number="5559"></td>
        <td id="LC5559" class="blob-code js-file-line">        <span class="pl-s3">utils</span>.<span class="pl-en">parseXML</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">xmlStr</span>) {</td>
      </tr>
      <tr>
        <td id="L5560" class="blob-num js-line-number" data-line-number="5560"></td>
        <td id="LC5560" class="blob-code js-file-line">            <span class="pl-s">var</span> xmlDoc <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">window.ActiveXObject</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Microsoft.XMLDOM<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5561" class="blob-num js-line-number" data-line-number="5561"></td>
        <td id="LC5561" class="blob-code js-file-line">            xmlDoc.async <span class="pl-k">=</span> <span class="pl-s1"><span class="pl-pds">&#39;</span>false<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5562" class="blob-num js-line-number" data-line-number="5562"></td>
        <td id="LC5562" class="blob-code js-file-line">            xmlDoc.loadXML(xmlStr);</td>
      </tr>
      <tr>
        <td id="L5563" class="blob-num js-line-number" data-line-number="5563"></td>
        <td id="LC5563" class="blob-code js-file-line">            <span class="pl-k">return</span> xmlDoc;</td>
      </tr>
      <tr>
        <td id="L5564" class="blob-num js-line-number" data-line-number="5564"></td>
        <td id="LC5564" class="blob-code js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5565" class="blob-num js-line-number" data-line-number="5565"></td>
        <td id="LC5565" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5566" class="blob-num js-line-number" data-line-number="5566"></td>
        <td id="LC5566" class="blob-code js-file-line">    <span class="pl-c">// no parser available</span></td>
      </tr>
      <tr>
        <td id="L5567" class="blob-num js-line-number" data-line-number="5567"></td>
        <td id="LC5567" class="blob-code js-file-line">    <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5568" class="blob-num js-line-number" data-line-number="5568"></td>
        <td id="LC5568" class="blob-code js-file-line">        <span class="pl-en">console</span><span class="pl-s3">.warn</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>XML parser not available, trying to parse any XML will result in an error.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5569" class="blob-num js-line-number" data-line-number="5569"></td>
        <td id="LC5569" class="blob-code js-file-line">        <span class="pl-s3">utils</span>.<span class="pl-en">parseXML</span> <span class="pl-k">=</span> <span class="pl-st">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5570" class="blob-num js-line-number" data-line-number="5570"></td>
        <td id="LC5570" class="blob-code js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>Trying to parse XML, but not XML parser is available in this environment<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5571" class="blob-num js-line-number" data-line-number="5571"></td>
        <td id="LC5571" class="blob-code js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5572" class="blob-num js-line-number" data-line-number="5572"></td>
        <td id="LC5572" class="blob-code js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5573" class="blob-num js-line-number" data-line-number="5573"></td>
        <td id="LC5573" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5574" class="blob-num js-line-number" data-line-number="5574"></td>
        <td id="LC5574" class="blob-code js-file-line"><span class="pl-c">//node.js environment</span></td>
      </tr>
      <tr>
        <td id="L5575" class="blob-num js-line-number" data-line-number="5575"></td>
        <td id="LC5575" class="blob-code js-file-line"><span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5576" class="blob-num js-line-number" data-line-number="5576"></td>
        <td id="LC5576" class="blob-code js-file-line">    <span class="pl-s3">utils</span>.<span class="pl-en">parseXML</span> <span class="pl-k">=</span> <span class="pl-st">function</span>(<span class="pl-vpf">xmlStr</span>) {</td>
      </tr>
      <tr>
        <td id="L5577" class="blob-num js-line-number" data-line-number="5577"></td>
        <td id="LC5577" class="blob-code js-file-line">        <span class="pl-s">var</span> DOMParser <span class="pl-k">=</span> <span class="pl-s3">require</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>xmldom<span class="pl-pds">&#39;</span></span>).DOMParser;</td>
      </tr>
      <tr>
        <td id="L5578" class="blob-num js-line-number" data-line-number="5578"></td>
        <td id="LC5578" class="blob-code js-file-line">        <span class="pl-k">return</span> (<span class="pl-k">new</span> <span class="pl-en">DOMParser</span>()).parseFromString(xmlStr, <span class="pl-s1"><span class="pl-pds">&#39;</span>text/xml<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5579" class="blob-num js-line-number" data-line-number="5579"></td>
        <td id="LC5579" class="blob-code js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5580" class="blob-num js-line-number" data-line-number="5580"></td>
        <td id="LC5580" class="blob-code js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5581" class="blob-num js-line-number" data-line-number="5581"></td>
        <td id="LC5581" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5582" class="blob-num js-line-number" data-line-number="5582"></td>
        <td id="LC5582" class="blob-code js-file-line">},{<span class="pl-s1"><span class="pl-pds">&quot;</span>Base64<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>buffer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">4</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>xmldom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>zlibjs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">9</span>}]},{},[<span class="pl-c1">1</span>])(<span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L5583" class="blob-num js-line-number" data-line-number="5583"></td>
        <td id="LC5583" class="blob-code js-file-line">});</td>
      </tr>
</table>

  </div>

</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="http://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="http://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.24181s from github-fe118-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
    </ul>
  </div>
</div>


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    
    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-ae2cfa52038a89e53f630873f978d91708f4387e3d9be2f39e4513f6a3461b44.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-5b37d01af290efac128f77035dbf0745b2dc7790fa4b7e39843b623e187c47d9.js"></script>
      
      

  </body>
</html>

